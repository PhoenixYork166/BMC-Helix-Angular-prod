{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, EventEmitter, Output, NgModule, InjectionToken, ViewContainerRef, Inject, ViewChild, ChangeDetectionStrategy, SkipSelf, Optional, InjectFlags, ElementRef, ViewChildren } from '@angular/core';\nimport * as i12 from '@helix/platform/association/api';\nimport * as i4$2 from '@helix/platform/named-list/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport * as i13 from '@helix/platform/process/api';\nimport * as i11 from '@helix/platform/record/api';\nimport { RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport * as i3 from '@helix/platform/shared/api';\nimport { ExpressionParserToken, RxExpressionConfigurator, ExpressionOperatorRowsByGroup, ExpressionOperatorGroup, Tooltip, RX_APPLICATION } from '@helix/platform/shared/api';\nimport * as i3$1 from '@helix/platform/shared/components';\nimport { RxRevertCustomizationModule, SelectFormControlComponent, TextFormControlComponent, TextareaFormControlComponent, RxDefinitionPickerComponent, RxDefinitionPickerType, TagsFormControlComponent, RxPermissionEditorComponent, ListFormControlComponent, RX_VALIDATION_FORM_CONTROL, RX_REVERT_CUSTOMIZATION, RX_EXPRESSION_EDITOR, ExpressionFormControlComponent, ExpressionEditorModule, RxFormBuilderModule, ValueAccessor, RxPermissionEditorModule, CustomizationOptionsModule, InspectorWidgetBase, OptionalExpressionInspectorControlComponent, FormControlsModule, RxDesignerHeaderModule, RxInspectorModule } from '@helix/platform/shared/components';\nimport * as i5$1 from '@helix/platform/ui-kit';\nimport { RX_MODAL, ValidationIssueType, RxModalClass, RxBladeModule, RxValidationIssuesModule, RxJsonViewerModule } from '@helix/platform/ui-kit';\nimport * as i5 from '@helix/platform/view/api';\nimport { RxViewLayout, RxViewComponentType, RX_AVAILABLE_ON_DEVICES_PROP_NAME, RX_STYLES_PROP_NAME, RX_EXPRESSION_FUNCTIONS, RxExpressionHelperService, RxDefaultExpressionEvaluatorService, RxViewComponentRegistryService, RX_VIEW_DEFINITION, BwfViewComponentType, ViewDefinitionType, RxViewActionRegistryService, OpenViewActionModalSize, RxDevice, RX_HIDDEN_PROP_NAME, RX_DISABLED_PROP_NAME, ViewComponentPropertyType, ViewActionDesignModule } from '@helix/platform/view/api';\nimport * as i6 from '@ngx-translate/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { includes, some, uniq, map, flow, compact, isEmpty, omit, has, reject, sortBy, get, isFinite as isFinite$1, flatten, filter as filter$1, isFunction, transform, isUndefined, isObject, isPlainObject, isBoolean, isNumber, isArray, isEqual, find, take as take$1, findIndex, throttle, isString, mergeWith, reduce, groupBy, lowerCase, pick, toPath, set, cloneDeep, values, chain, pull, noop, without, castArray, merge as merge$1, every, last, difference, forEach, omitBy } from 'lodash';\nimport { ReplaySubject, Subject, of, merge, combineLatest, EMPTY, asapScheduler, BehaviorSubject, throwError, noop as noop$1 } from 'rxjs';\nimport { filter, map as map$1, shareReplay, switchMap, take, withLatestFrom, distinctUntilChanged, bufferToggle, takeUntil, switchMapTo, concatMapTo, skip, first, tap, concatMap, debounceTime, startWith, skipWhile, mapTo, publishReplay, refCount, mergeMap, catchError } from 'rxjs/operators';\nimport * as i2$1 from '@helix/platform/utils';\nimport * as i1 from '@ngrx/effects';\nimport { ofType, Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport * as i2 from '@ngrx/store';\nimport { createAction, props, createFeatureSelector, createSelector, createReducer, on, StoreModule } from '@ngrx/store';\nimport * as i3$2 from '@angular/forms';\nimport { FormControl, ReactiveFormsModule, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$1 from '@angular/cdk/drag-drop';\nimport { CdkDropList, DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i3$3 from '@bmc-ux/adapt-angular';\nimport { AdaptAccordionModule, AdaptRxSearchModule, DismissReasons, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule, TreeWrap, toNumber, AdaptAccordionTabComponent, AdaptEmptyStateModule, AdaptIconModule, AdaptPopoverModule, AdaptTreeModule, AdaptCodeViewerModule, AdaptAlertModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTextFieldModule } from '@bmc-ux/obsolete';\nimport { __decorate, __metadata } from 'tslib';\nconst _c0 = [\"container\"];\nfunction ViewDesignerCanvasComponent_rx_canvas_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"rx-canvas-item\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layout\", ctx_r0.layout)(\"isReadOnly\", ctx_r0.isReadOnly);\n  }\n}\nfunction CanvasItemColumnComponent_div_1_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CanvasItemColumnComponent_div_1_button_8_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const layout_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.remove($event, layout_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CanvasItemColumnComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"cdkDragEntered\", function CanvasItemColumnComponent_div_1_Template_div_cdkDragEntered_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onDragEntered($event);\n    })(\"cdkDragStarted\", function CanvasItemColumnComponent_div_1_Template_div_cdkDragStarted_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onDragStarted($event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function CanvasItemColumnComponent_div_1_Template_div_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const layout_r1 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onSelectComponent($event, layout_r1);\n    });\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelement(5, \"span\", 5);\n    i0.ɵɵelementStart(6, \"span\", 6);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, CanvasItemColumnComponent_div_1_button_8_Template, 1, 0, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"rx-canvas-item\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const layout_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"canvas-item-wrapper mw-100 canvas-\", layout_r1.descriptor.type, \"\");\n    i0.ɵɵproperty(\"cdkDragData\", ctx_r0.getViewComponentDragData(layout_r1))(\"cdkDragDisabled\", ctx_r0.isReadOnly || (layout_r1.descriptor.options == null ? null : layout_r1.descriptor.options.static));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", i0.ɵɵpipeBind1(2, 12, layout_r1.isSelected$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !i0.ɵɵpipeBind1(4, 14, layout_r1.isSelected$));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(layout_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isReadOnly && !(layout_r1.descriptor.options == null ? null : layout_r1.descriptor.options.static));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"layout\", layout_r1)(\"isReadOnly\", ctx_r0.isReadOnly);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    columnIndex: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"col-border\": a0\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    \"mb-3\": a0\n  };\n};\nfunction CanvasItemContainerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"rx-canvas-item-column\", 3);\n    i0.ɵɵlistener(\"dropListDropped\", function CanvasItemContainerComponent_div_1_Template_rx_canvas_item_column_dropListDropped_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onDropListDropped($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r1 = ctx.$implicit;\n    const colIndex_r2 = ctx.index;\n    const isLastCol_r3 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(column_r1.span ? \"col-\" + column_r1.span : \"col\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, !isLastCol_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c3, !isLastCol_r3))(\"isReadOnly\", ctx_r0.isReadOnly)(\"colIndex\", colIndex_r2)(\"column\", column_r1)(\"layout\", ctx_r0.layout);\n  }\n}\nfunction DesignerComponent_rx_canvas_outlet_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"rx-canvas-outlet\", 1);\n    i0.ɵɵlistener(\"beforeViewComponentDrop\", function DesignerComponent_rx_canvas_outlet_0_Template_rx_canvas_outlet_beforeViewComponentDrop_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.viewDesignerCanvasComponent.beforeComponentDropInRoot.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const outlet_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"border\", ctx_r0.canvasItemComponent.layout.outlets.length > 1)(\"default-outlet\", outlet_r1.name === ctx_r0.defaultOutletName);\n    i0.ɵɵproperty(\"name\", outlet_r1.name);\n  }\n}\nfunction ViewDesignerPaletteComponent_adapt_accordion_tab_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelement(2, \"span\");\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const viewComponent_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"cdkDragData\", ctx_r2.getViewComponentDragData(viewComponent_r3));\n    i0.ɵɵattribute(\"rx-id\", viewComponent_r3.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMapInterpolate1(\"item-image d-icon-\", viewComponent_r3.icon || \"wall\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", viewComponent_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", viewComponent_r3.name, \" \");\n  }\n}\nfunction ViewDesignerPaletteComponent_adapt_accordion_tab_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"adapt-accordion-tab\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtemplate(2, ViewDesignerPaletteComponent_adapt_accordion_tab_3_div_2_Template, 5, 7, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const viewComponentsGroup_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", viewComponentsGroup_r1.name)(\"isOpen\", true);\n    i0.ɵɵattribute(\"rx-id\", ctx_r0.stringService.toRxId(viewComponentsGroup_r1.name));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkDropListConnectedTo\", ctx_r0.allowedDropListIds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", viewComponentsGroup_r1.components)(\"ngForTrackBy\", ctx_r0.trackByNameFn);\n  }\n}\nconst _c4 = function () {\n  return [];\n};\nconst _c5 = function (a1) {\n  return {\n    multiselect: true,\n    tabs: a1\n  };\n};\nconst _c6 = [\"viewPropertyInspector\"];\nconst _c7 = [\"viewComponentPropertyInspector\"];\nfunction RxViewDesignerComponent_rx_view_designer_palette_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"rx-view-designer-palette\", 19);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"components\", i0.ɵɵpipeBind1(1, 2, ctx_r0.paletteComponents$))(\"allowedDropListIds\", ctx_r0.canvasDndListIds);\n  }\n}\nconst _c8 = \"There are no view components to display. View with a Page view component cannot contain any other view components.\";\nconst _c9 = function () {\n  return {\n    content: _c8,\n    variant: \"info\",\n    type: \"inline\"\n  };\n};\nfunction RxViewDesignerComponent_adapt_alert_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-alert\", 20);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction0(1, _c9));\n  }\n}\nconst _c10 = \"This view is not editable. There are no view components to display.\";\nconst _c11 = function () {\n  return {\n    content: _c10,\n    variant: \"info\",\n    type: \"inline\"\n  };\n};\nfunction RxViewDesignerComponent_adapt_alert_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-alert\", 20);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction0(1, _c11));\n  }\n}\nfunction RxViewDesignerComponent_adapt_code_viewer_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"adapt-code-viewer\", 21);\n    i0.ɵɵpipe(1, \"json\");\n    i0.ɵɵpipe(2, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"code\", i0.ɵɵpipeBind1(1, 4, i0.ɵɵpipeBind1(2, 6, ctx_r5.viewDesignerFacade.viewDefinition$)))(\"lang\", \"javascript\")(\"hasToolbar\", false)(\"theme\", \"light\");\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    content: a0,\n    variant: \"info\",\n    type: \"inline\"\n  };\n};\nfunction RuntimeViewParamsModalComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"adapt-rx-textfield\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function RuntimeViewParamsModalComponent_div_1_Template_adapt_rx_textfield_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const inputParam_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return (ctx_r4.inputParams[inputParam_r1] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const inputParam_r1 = ctx.$implicit;\n    const isFirst_r2 = ctx.first;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", inputParam_r1)(\"autofocus\", isFirst_r2)(\"ngModel\", ctx_r0.inputParams[inputParam_r1]);\n    i0.ɵɵattribute(\"rx-id\", \"input-param-\" + (i_r3 + 1));\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵlistener(\"dblclick\", function ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template_div_dblclick_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const action_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(4);\n      return ctx_r13.addAction(action_r11.data);\n    });\n    i0.ɵɵelementStart(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const action_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(4);\n      return ctx_r16.addAction(action_r11.data);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkDragData\", action_r11.data);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(action_r11.data.label);\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template, 5, 2, \"div\", 24);\n  }\n  if (rf & 2) {\n    const action_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", action_r11.data);\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"adapt-tree\", 22);\n    i0.ɵɵtemplate(2, ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_Template, 1, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const availableActionTreeNodes_r6 = i0.ɵɵnextContext().ngIf;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"cdkDropListConnectedTo\", \"selected-action-list\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", availableActionTreeNodes_r6)(\"wrap\", ctx_r7.treeWrap);\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelement(1, \"adapt-empty-state\", 30);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.view-components.action-list.available-actions.empty-state.message\"));\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, ActionListEditorDialogComponent_div_2_div_6_div_1_Template, 3, 3, \"div\", 19);\n    i0.ɵɵtemplate(2, ActionListEditorDialogComponent_div_2_div_6_ng_template_2_Template, 3, 3, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const availableActionTreeNodes_r6 = ctx.ngIf;\n    const _r8 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", availableActionTreeNodes_r6.length)(\"ngIfElse\", _r8);\n  }\n}\nfunction ActionListEditorDialogComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"h4\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtemplate(6, ActionListEditorDialogComponent_div_2_div_6_Template, 4, 2, \"div\", 17);\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, \"com.bmc.arsys.rx.client.view-components.action-list.available-actions.title\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 4, ctx_r0.availableActionTreeNodes$));\n  }\n}\nfunction ActionListEditorDialogComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_11_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.toggleOpen(true);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_11_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.toggleOpen(false);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, \"com.bmc.arsys.rx.client.common.expand-all.label\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 4, \"com.bmc.arsys.rx.client.common.collapse-all.label\"), \" \");\n  }\n}\nfunction ActionListEditorDialogComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 44);\n  }\n}\nfunction ActionListEditorDialogComponent_div_14_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const actionLabelsMap_r31 = ctx.ngIf;\n    const action_r23 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"title\", actionLabelsMap_r31[action_r23.name]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", actionLabelsMap_r31[action_r23.name], \" \");\n  }\n}\nfunction ActionListEditorDialogComponent_div_14_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 46);\n    i0.ɵɵelementStart(1, \"div\", 47);\n    i0.ɵɵelementStart(2, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_14_div_9_Template_button_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const index_r24 = i0.ɵɵnextContext().index;\n      const ctx_r33 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return ctx_r33.moveAction(index_r24, index_r24 + 1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_14_div_9_Template_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const index_r24 = i0.ɵɵnextContext().index;\n      const ctx_r36 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return ctx_r36.moveAction(index_r24, index_r24 - 1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_div_14_div_9_Template_button_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const action_r23 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext();\n      $event.stopPropagation();\n      return ctx_r38.removeAction(action_r23);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext();\n    const last_r26 = ctx_r40.last;\n    const first_r25 = ctx_r40.first;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", last_r26);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", first_r25);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 3, \"com.bmc.arsys.rx.client.common.remove.label\"), \" \");\n  }\n}\nfunction ActionListEditorDialogComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34, 35);\n    i0.ɵɵtemplate(2, ActionListEditorDialogComponent_div_14_div_2_Template, 1, 0, \"div\", 36);\n    i0.ɵɵelementStart(3, \"adapt-accordion-tab\", 37);\n    i0.ɵɵlistener(\"open\", function ActionListEditorDialogComponent_div_14_Template_adapt_accordion_tab_open_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const action_r23 = restoredCtx.$implicit;\n      return action_r23.isOpen = true;\n    })(\"close\", function ActionListEditorDialogComponent_div_14_Template_adapt_accordion_tab_close_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const action_r23 = restoredCtx.$implicit;\n      return action_r23.isOpen = false;\n    });\n    i0.ɵɵelementStart(4, \"div\", 38);\n    i0.ɵɵelementStart(5, \"div\", 39);\n    i0.ɵɵelementStart(6, \"div\", 40);\n    i0.ɵɵtemplate(7, ActionListEditorDialogComponent_div_14_div_7_Template, 2, 2, \"div\", 41);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ActionListEditorDialogComponent_div_14_div_9_Template, 7, 5, \"div\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"rx-form-builder\", 43);\n    i0.ɵɵlistener(\"modelChange\", function ActionListEditorDialogComponent_div_14_Template_rx_form_builder_modelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const action_r23 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext();\n      action_r23.model.sandbox.updateActionProperties($event);\n      return ctx_r44.markEditorAsDirty();\n    })(\"editorEvent\", function ActionListEditorDialogComponent_div_14_Template_rx_form_builder_editorEvent_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const action_r23 = restoredCtx.$implicit;\n      const _r27 = i0.ɵɵreference(1);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return ctx_r45.onEvent($event, action_r23.model, _r27);\n    });\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r23 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDragData\", action_r23)(\"cdkDragDisabled\", ctx_r2.config.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.config.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isOpen\", action_r23.isOpen);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"pl-0\", ctx_r2.config.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 11, ctx_r2.actionLabelsMap$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.config.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"config\", i0.ɵɵpipeBind1(11, 13, action_r23.config$))(\"model\", i0.ɵɵpipeBind1(12, 15, action_r23.model.sandbox.actionProperties$))(\"isReadOnly\", ctx_r2.config.isReadOnly);\n  }\n}\nfunction ActionListEditorDialogComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelement(1, \"adapt-empty-state\", 51);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"label\", i0.ɵɵpipeBind1(2, 1, \"com.bmc.arsys.rx.client.view-components.action-list.selected-actions.empty-state.message\"));\n  }\n}\nfunction ActionListEditorDialogComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return ctx_r46.onSave();\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(1, 2, ctx_r4.isSaveButtonDisabled$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, \"com.bmc.arsys.rx.client.common.save.label\"), \" \");\n  }\n}\nfunction ActionListControlComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵelement(2, \"adapt-icon\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"name\", \"question_circle_o\")(\"adaptPopover\", ctx_r0.tooltip);\n  }\n}\nfunction ActionListControlComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1, \"No actions added.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActionListControlComponent_ul_6_li_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ActionListControlComponent_ul_6_li_1_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const action_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.removeAction(action_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActionListControlComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵelementStart(1, \"strong\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ActionListControlComponent_ul_6_li_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const action_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.editAction(action_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ActionListControlComponent_ul_6_li_1_button_4_Template, 1, 0, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.actionLabelsMap[action_r4.data.name]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isDisabled);\n  }\n}\nfunction ActionListControlComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 10);\n    i0.ɵɵtemplate(1, ActionListControlComponent_ul_6_li_1_Template, 5, 2, \"li\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.selectedActions);\n  }\n}\nfunction findParentComponentModel(guid, components) {\n  const currentComponent = components[guid];\n  return components[currentComponent === null || currentComponent === void 0 ? void 0 : currentComponent.parentGuid];\n}\nfunction findAllParentComponentGuids(guid, components) {\n  const result = [guid];\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n  while (nextGuid) {\n    result.unshift(nextGuid);\n    parentModel = findParentComponentModel(nextGuid, components);\n    nextGuid = parentModel ? parentModel.guid : null;\n  }\n  return result;\n}\nfunction findParentComponentByType(guid, componentType, components) {\n  let result;\n  let parentModel = findParentComponentModel(guid, components);\n  let nextGuid = parentModel ? parentModel.guid : null;\n  while (nextGuid) {\n    if (parentModel.type === componentType) {\n      result = parentModel;\n      nextGuid = null;\n    } else {\n      parentModel = findParentComponentModel(nextGuid, components);\n      nextGuid = parentModel ? parentModel.guid : null;\n    }\n  }\n  return result;\n}\nfunction isComponentContainsChild(guid, componentModel) {\n  if (componentModel.layout) {\n    const hasChild = RxViewLayout.hasChild(componentModel.layout, guid);\n    if (hasChild) {\n      return true;\n    }\n  }\n  if (componentModel.childDataComponentGuids) {\n    return includes(componentModel.childDataComponentGuids, guid);\n  } else {\n    return false;\n  }\n}\nfunction addChildComponent(componentModel, guid, outletName, insertIndex, columnIndex = 0, columnSpan = 0) {\n  const newComponentModel = Object.assign({}, componentModel);\n  newComponentModel.layout = {\n    outlets: componentModel.layout.outlets.map(outlet => {\n      if (outlet.name === outletName) {\n        const columns = [...outlet.columns];\n        insertIndex = isFinite(insertIndex) ? insertIndex : columns[columnIndex].children.length;\n        if (!columns[columnIndex]) {\n          columns[columnIndex] = {\n            children: []\n          };\n          if (columnSpan) {\n            columns[columnIndex].span = columnSpan;\n          }\n        }\n        // todo handle drop in non-first column\n        columns[columnIndex] = {\n          children: [...columns[columnIndex].children.slice(0, insertIndex), guid, ...columns[columnIndex].children.slice(insertIndex)],\n          span: columns[columnIndex].span\n        };\n        return Object.assign(Object.assign({}, outlet), {\n          columns\n        });\n      } else {\n        return outlet;\n      }\n    })\n  };\n  return newComponentModel;\n}\nfunction removeChildComponent(componentGuidToRemove, parentComponentModel) {\n  const newParentComponentModel = Object.assign({}, parentComponentModel);\n  if (some(newParentComponentModel.childDataComponentGuids, guid => componentGuidToRemove === guid)) {\n    newParentComponentModel.childDataComponentGuids = newParentComponentModel.childDataComponentGuids.filter(guid => guid !== componentGuidToRemove);\n  }\n  if (parentComponentModel.layout && RxViewLayout.hasChild(parentComponentModel.layout, componentGuidToRemove)) {\n    newParentComponentModel.layout = RxViewLayout.removeChildFromLayout(parentComponentModel.layout, componentGuidToRemove);\n  }\n  return newParentComponentModel;\n}\nfunction getChildGuidsFromModel(model) {\n  const guids = [];\n  if (model.childDataComponentGuids) {\n    guids.push(...model.childDataComponentGuids);\n  }\n  if (model.layout) {\n    guids.push(...RxViewLayout.getViewLayoutChildGuids(model.layout));\n  }\n  return uniq(guids);\n}\nfunction getAllChildGuids(parentComponent, componentModelsState) {\n  const guids = getChildGuidsFromModel(parentComponent);\n  return guids.reduce((result, guid) => {\n    result.push(...getAllChildGuids(componentModelsState[guid], componentModelsState));\n    return result;\n  }, guids);\n}\nclass RxViewDataDictionaryBuilderService {\n  constructor() {\n    this.componentIcon = 'd-icon-file_o';\n    this.componentPropertyIcon = 'd-icon-file_o_gear';\n    this.settablePropertiesIcon = 'd-icon-arrow_right_square_input';\n    this.actionOutputIcon = 'd-icon-arrow_chart';\n  }\n  getActionOutputDataDictionaryBranch(actionName, dataDictionary) {\n    return {\n      label: actionName,\n      icon: 'd-icon-arrow_chart',\n      children: map(dataDictionary, dataDictionaryBranch => this.buildDataDictionaryBranch(dataDictionaryBranch, this.actionOutputIcon))\n    };\n  }\n  getComponentCommonDataDictionaryBranch(branch) {\n    return Object.assign(Object.assign({}, branch), {\n      icon: this.componentIcon,\n      children: flow(children => map(children, child => this.buildDataDictionaryBranch(child, this.componentPropertyIcon)), compact)(branch.children)\n    });\n  }\n  getSettablePropertiesDataDictionary(branches) {\n    return map(branches, branch => this.buildDataDictionaryBranch(branch, this.settablePropertiesIcon));\n  }\n  buildDataDictionaryBranch(branch, icon) {\n    const node = Object.assign({}, branch);\n    if (branch.expression) {\n      node.icon = icon;\n    }\n    if (branch.children) {\n      node.children = flow(children => map(children, child => this.buildDataDictionaryBranch(child, icon)), compact)(branch.children);\n    }\n    return node;\n  }\n}\nRxViewDataDictionaryBuilderService.ɵfac = function RxViewDataDictionaryBuilderService_Factory(t) {\n  return new (t || RxViewDataDictionaryBuilderService)();\n};\nRxViewDataDictionaryBuilderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDataDictionaryBuilderService,\n  factory: RxViewDataDictionaryBuilderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDataDictionaryBuilderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RxViewDataDictionaryStoreService {\n  constructor() {\n    this.componentsCommon = null;\n    this.componentsCommonSubject = new ReplaySubject(1);\n    this.componentsCommon$ = this.componentsCommonSubject.asObservable();\n    this.viewCommon = null;\n    this.viewCommonSubject = new ReplaySubject(1);\n    this.viewCommon$ = this.viewCommonSubject.asObservable();\n    this.actionsOutput = [];\n    this.actionsOutputSubject = new ReplaySubject(1);\n    this.actionsOutput$ = this.actionsOutputSubject.asObservable();\n    this.settableProperties = null;\n    this.settablePropertiesSubject = new ReplaySubject(1);\n    this.settableProperties$ = this.settablePropertiesSubject.asObservable();\n  }\n  setCommonDataDictionaryBranch(guid, dataDictionaryBranch) {\n    this.setComponentCommon(isEmpty(dataDictionaryBranch) ? omit(this.componentsCommon, [guid]) : Object.assign(Object.assign({}, this.componentsCommon), {\n      [guid]: dataDictionaryBranch\n    }));\n  }\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch) {\n    this.setViewCommon(dataDictionaryBranch);\n  }\n  setSettablePropertiesDataDictionary(items) {\n    this.setSettableProperties(Object.assign(Object.assign({}, this.settableProperties), items.reduce((result, {\n      guid,\n      componentName,\n      dataDictionary\n    }) => {\n      result[guid] = {\n        componentName,\n        dataDictionary\n      };\n      return result;\n    }, {})));\n  }\n  removeDataDictionaryForComponents(guids) {\n    if (guids.some(guid => has(this.componentsCommon, guid))) {\n      this.setComponentCommon(omit(this.componentsCommon, guids));\n    }\n    if (guids.some(guid => has(this.settableProperties, guid))) {\n      this.setSettableProperties(omit(this.settableProperties, guids));\n    }\n  }\n  setActionOutputDataDictionaryBranch(guid, index, dataDictionaryBranch) {\n    this.setActionsOutput(flow(actions => [...reject(actions, {\n      guid\n    }), {\n      guid,\n      index,\n      dataDictionaryBranch\n    }], actions => sortBy(actions, 'index'))(this.actionsOutput));\n  }\n  updateActionOutputDataDictionaryBranchOrder(actions) {\n    this.setActionsOutput(flow(actionsOutput => map(actionsOutput, actionOutput => Object.assign(Object.assign({}, actionOutput), {\n      index: actions[actionOutput.guid]\n    })), actionsOutput => sortBy(actionsOutput, 'index'))(this.actionsOutput));\n  }\n  removeActionOutputDataDictionaryBranch(guid) {\n    this.setActionsOutput(reject(this.actionsOutput, {\n      guid\n    }));\n  }\n  removeAllActionOutputDataDictionaryBranches() {\n    this.setActionsOutput(null);\n  }\n  clear() {\n    this.setComponentCommon(null);\n    this.setViewCommon(null);\n    this.setSettableProperties(null);\n    this.setActionsOutput([]);\n  }\n  setComponentCommon(state) {\n    this.componentsCommon = state;\n    this.componentsCommonSubject.next(this.componentsCommon);\n  }\n  setViewCommon(state) {\n    this.viewCommon = state;\n    this.viewCommonSubject.next(this.viewCommon);\n  }\n  setActionsOutput(state) {\n    this.actionsOutput = state;\n    this.actionsOutputSubject.next(this.actionsOutput);\n  }\n  setSettableProperties(state) {\n    this.settableProperties = state;\n    this.settablePropertiesSubject.next(this.settableProperties);\n  }\n}\nRxViewDataDictionaryStoreService.ɵfac = function RxViewDataDictionaryStoreService_Factory(t) {\n  return new (t || RxViewDataDictionaryStoreService)();\n};\nRxViewDataDictionaryStoreService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDataDictionaryStoreService,\n  factory: RxViewDataDictionaryStoreService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDataDictionaryStoreService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RxViewDesignerInspectorService {\n  constructor() {\n    this.onChangeSubject = new Subject();\n    this.configs = new Map();\n    this.onChange$ = this.onChangeSubject.asObservable();\n  }\n  clear() {\n    this.configs.clear();\n  }\n  set(guid, config) {\n    this.configs.set(guid, config);\n    this.onChangeSubject.next({\n      guid,\n      config\n    });\n  }\n  get(guid) {\n    return this.configs.get(guid);\n  }\n  delete(guid) {\n    this.onChangeSubject.next({\n      guid,\n      config: null\n    });\n    this.configs.delete(guid);\n  }\n}\nRxViewDesignerInspectorService.ɵfac = function RxViewDesignerInspectorService_Factory(t) {\n  return new (t || RxViewDesignerInspectorService)();\n};\nRxViewDesignerInspectorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDesignerInspectorService,\n  factory: RxViewDesignerInspectorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerInspectorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst componentsRemoved = createAction('[View Component] Components Removed', props());\nconst initializeComponentModels = createAction('[View Component] Initialize Component Models', props());\nconst initializeDataComponentModels = createAction('[View Component] Initialize Data Component Models', props());\nconst setValidationIssues = createAction('[View Component] Set Validation Issues', props());\nconst setExpressionValidationIssues = createAction('[View Component] Set Expression Validation Issues', props());\nconst setComponentData = createAction('[View Component] Set Component Properties', props());\nconst setChildComponents = createAction('[View Component] Set Child Components', props());\nconst setBreadcrumbs = createAction('[View Component] Set Breadcrumbs', props());\nconst selectComponent = createAction('[View Component] Select Component', props());\nconst setComponentLayout = createAction('[View Component] Set Component Layout', props());\nconst moveComponent = createAction('[View Component] Move Component', props());\nconst insertComponent = createAction('[View Component] Insert Component', props());\nconst addNewComponents = createAction('[View Component] Add New Components', props());\nconst updateComponentModel = createAction('[View Component] Update Component Model', props());\nconst removeComponents = createAction('[View Component] Remove Components', props());\n\n/**\n * Public class for dispatching actions\n * Protects ngrx store$ service from selecting data from the store\n */\nclass ViewDesignerDispatcher {\n  constructor(store$) {\n    this.store$ = store$;\n  }\n  dispatch(action) {\n    this.store$.dispatch(action);\n  }\n}\nViewDesignerDispatcher.ɵfac = function ViewDesignerDispatcher_Factory(t) {\n  return new (t || ViewDesignerDispatcher)(i0.ɵɵinject(i2.Store));\n};\nViewDesignerDispatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewDesignerDispatcher,\n  factory: ViewDesignerDispatcher.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i2.Store\n    }];\n  }, null);\n})();\nconst viewDefinitionSaveSuccess = createAction('[View Designer] View Definition Save Success', props());\nconst viewDefinitionSaveError = createAction('[View Designer] View Definition Save Error');\nconst viewDefinitionLoadSuccess = createAction('[View Designer] View Definition Load Success', props());\nconst viewDefinitionLoadError = createAction('[View Designer] View Definition Load Error');\nconst setGeneratedViewDefinition = createAction('[View Designer] Set Generated View Definition', props());\nconst loadViewDefinition = createAction('[View Designer] Load View Definition', props());\nconst friendlyBundleNameLoadSuccess = createAction('[View Designer] Bundle Friendly Name Load Success', props());\nconst friendlyBundleNameLoadError = createAction('[View Designer] Bundle Friendly Name Load Error', props());\nconst viewModelsInitialized = createAction('[View Designer] View Models Initialized');\nconst viewModelsUpdatedAfterSave = createAction('[View Designer] View Models Updated After Save');\nconst updateViewModel = createAction('[View Designer] Update View Model', props());\nconst setViewModel = createAction('[View Designer] Set View Model', props());\nconst selectInspectorTab = createAction('[View Designer] Select Inspector Tab', props());\nconst saveViewDefinition = createAction('[View Designer] Save View Definition', props());\nconst runPreview = createAction('[View Designer] Run Preview');\nconst loadFriendlyBundleName = createAction('[View Designer] Load Bundle Friendly Name');\nconst generateViewDefinition = createAction('[View Designer] Generate View Definition', props());\nconst clearCanvas = createAction('[View Designer] Clear Canvas');\nconst initViewDesigner = createAction('[View Designer] Init', props());\nconst destroyViewDesigner = createAction('[View Designer] Destroy');\nconst viewDesignerState = createFeatureSelector('viewDesigner');\nconst viewDesignerModelsSelector = createSelector(viewDesignerState, viewDesigner => viewDesigner.model);\nconst viewModelSelector = createSelector(viewDesignerModelsSelector, models => models.viewDesignModel);\nconst viewModelPropertyValueSelector = createSelector(viewModelSelector, (viewModel, {\n  propertyName\n}) => get(viewModel, propertyName));\nconst viewComponentModelsSelector = createSelector(viewDesignerModelsSelector, models => models.viewComponentDesignModels);\nconst firstViewComponentModelTypeSelector = createSelector(viewDesignerModelsSelector, models => {\n  var _a;\n  return (_a = Object.values(models.viewComponentDesignModels)[0]) === null || _a === void 0 ? void 0 : _a.type;\n});\nconst viewComponentModelSelector = createSelector(viewComponentModelsSelector, (componentModels, {\n  guid\n}) => componentModels[guid]);\nconst parentComponentModelGuidSelector = createSelector(viewComponentModelSelector, componentModel => componentModel === null || componentModel === void 0 ? void 0 : componentModel.parentGuid);\nconst componentPropertiesByNameSelector = createSelector(viewComponentModelsSelector, (componentModels, {\n  guid,\n  propertyName\n}) => componentModels[guid] ? propertyName ? get(componentModels[guid].propertiesByName, propertyName) : componentModels[guid].propertiesByName : null);\nconst componentTypeSelector = createSelector(viewComponentModelsSelector, (componentModels, {\n  guid\n}) => componentModels[guid] ? componentModels[guid].type : null);\nconst componentLayoutSelector = createSelector(viewComponentModelSelector, componentModel => componentModel === null || componentModel === void 0 ? void 0 : componentModel.layout);\nconst componentPermissionsSelector = createSelector(viewComponentModelSelector, componentModel => componentModel === null || componentModel === void 0 ? void 0 : componentModel.permissions);\nconst childDataComponentGuidsSelector = createSelector(viewComponentModelSelector, componentModel => componentModel === null || componentModel === void 0 ? void 0 : componentModel.childDataComponentGuids);\nconst viewDesignerUISelector = createSelector(viewDesignerState, viewDesigner => viewDesigner.ui);\nconst isViewDefinitionLoadingSelector = createSelector(viewDesignerUISelector, ui => ui.isViewDefinitionLoading);\nconst bundleFriendlyNameSelector = createSelector(viewDesignerUISelector, ui => ui.friendlyBundleName);\nconst currentBundleIdSelector = createSelector(viewDesignerUISelector, ui => ui.currentBundleId);\nconst viewDefinitionSelector = createSelector(viewDesignerState, viewDesigner => viewDesigner.viewDefinition);\nconst validationIssuesSelector = createSelector(viewDesignerState, viewDesigner => viewDesigner.validation);\nconst breadcrumbsSelector = createSelector(viewDesignerState, viewDesigner => viewDesigner.breadcrumbs);\nconst selectedInspectorTabIdSelector = createSelector(viewDesignerUISelector, ui => ui.selectedInspectorTabId);\nconst selectedComponentGuidSelector = createSelector(viewDesignerUISelector, ui => ui.selectedComponentGuid);\nconst areViewModelsReadySelector = createSelector(viewDesignerUISelector, ui => ui.areViewModelsReady);\nconst selectedComponentPropsSelector = createSelector(selectedComponentGuidSelector, viewComponentModelsSelector, (selectedComponentGuid, componentModels) => {\n  if (componentModels && selectedComponentGuid) {\n    const componentDesignModel = componentModels[selectedComponentGuid];\n    return componentDesignModel ? componentDesignModel.propertiesByName : null;\n  } else {\n    return null;\n  }\n});\nclass ViewDesignerFacade {\n  constructor(dispatcher, store$, actions$, rxViewDesignerInspectorService, rxGuidService, rxViewDataDictionaryBuilderService, rxViewDataDictionaryService, rxOverlayService) {\n    this.dispatcher = dispatcher;\n    this.store$ = store$;\n    this.actions$ = actions$;\n    this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n    this.rxGuidService = rxGuidService;\n    this.rxViewDataDictionaryBuilderService = rxViewDataDictionaryBuilderService;\n    this.rxViewDataDictionaryService = rxViewDataDictionaryService;\n    this.rxOverlayService = rxOverlayService;\n    this.viewDefinition$ = this.store$.select(viewDefinitionSelector);\n    this.validationIssues$ = this.store$.select(validationIssuesSelector);\n    this.breadcrumbs$ = this.store$.select(breadcrumbsSelector);\n    this.viewDesignerModelState$ = this.store$.select(viewDesignerModelsSelector);\n    // filter operator is used to ignore the empty model when:\n    // - the view definition has not been loaded for the first time, or\n    // - the view definition is being saved.\n    this.viewModel$ = this.store$.select(viewModelSelector).pipe(filter(Boolean));\n    this.viewModelGuid$ = this.getViewPropertyValue('guid');\n    this.viewComponentModels$ = this.store$.select(viewComponentModelsSelector);\n    this.firstViewComponentModelType$ = this.store$.select(firstViewComponentModelTypeSelector);\n    this.isExtensionView$ = this.getViewPropertyValue('targetViewDefinitionName').pipe(map$1(Boolean), shareReplay(1));\n    this.isExtensionContainerSet$ = this.getViewPropertyValue('targetExtensionContainerGuid').pipe(map$1(Boolean), shareReplay(1));\n    this.allComponentGuids$ = this.viewComponentModels$.pipe(map$1(models => new Set(Object.keys(models))), shareReplay({\n      refCount: true,\n      bufferSize: 1\n    }));\n    this.selectedComponentGuid$ = this.store$.select(selectedComponentGuidSelector).pipe(switchMap(componentGuid => this.viewModelGuid$.pipe(map$1(viewGuid => componentGuid === viewGuid ? null : componentGuid), take(1))));\n    this.selectedComponentProperties$ = this.selectedComponentGuid$.pipe(switchMap(guid => guid ? this.getComponentProperties(guid) : of(null)));\n    this.isViewDefinitionLoading$ = this.store$.select(isViewDefinitionLoadingSelector);\n    this.selectedInspectorTabId$ = this.store$.select(selectedInspectorTabIdSelector);\n    this.bundleFriendlyName$ = this.store$.select(bundleFriendlyNameSelector);\n    this.currentBundleId$ = this.store$.select(currentBundleIdSelector);\n    this.viewInspectorLayout$ = merge(this.viewModelGuid$, this.rxViewDesignerInspectorService.onChange$.pipe(withLatestFrom(this.viewModelGuid$), filter(([config, guid]) => config.guid === guid), map$1(([config, guid]) => guid))).pipe(map$1(guid => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    }));\n    this.selectedComponentInspectorLayout$ = merge(this.selectedComponentGuid$.pipe(distinctUntilChanged()), this.rxViewDesignerInspectorService.onChange$.pipe(withLatestFrom(this.selectedComponentGuid$), filter(([config, guid]) => config.guid === guid), map$1(([config, guid]) => guid))).pipe(map$1(guid => {\n      const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n      return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n    }));\n    this.isViewReadOnly$ = combineLatest([this.viewModel$, this.currentBundleId$.pipe(switchMap(bundleId => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)))]).pipe(map$1(([viewModel, areNewDefinitionsAllowed]) => !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel)), distinctUntilChanged(), shareReplay(1));\n    // Actions Stream\n    this.viewDefinitionLoadError$ = this.actions$.pipe(ofType(viewDefinitionLoadError));\n    this.viewDefinitionSaveSuccess$ = this.actions$.pipe(ofType(viewDefinitionSaveSuccess));\n    this.initViewDesigner$ = this.actions$.pipe(ofType(initViewDesigner));\n    this.destroyViewDesignerSubject = new Subject();\n    this.destroyViewDesigner$ = this.destroyViewDesignerSubject.asObservable();\n    this.viewModelsInitialized$ = this.actions$.pipe(ofType(viewModelsInitialized));\n    this.areViewModelsReady$ = this.store$.select(areViewModelsReadySelector);\n    this.viewCommonDataDictionaryState$ = this.rxViewDataDictionaryService.viewCommon$;\n    this.componentsCommonDataDictionaryState$ = this.rxViewDataDictionaryService.componentsCommon$;\n    this.actionsDataDictionaryState$ = this.rxViewDataDictionaryService.actionsOutput$;\n    this.settablePropertiesDataDictionaryState$ = this.rxViewDataDictionaryService.settableProperties$;\n    this.settablePropertiesDataDictionarySubject = new Subject();\n    // for performance reasons grouping actions before sending them to store\n    merge(this.settablePropertiesDataDictionarySubject.pipe(bufferToggle(this.initViewDesigner$, v => this.viewModelsInitialized$)), this.viewModelsInitialized$.pipe(switchMap(() => this.settablePropertiesDataDictionarySubject.pipe(map$1(data => [data]), takeUntil(this.initViewDesigner$))))).subscribe(items => {\n      this.rxViewDataDictionaryService.setSettablePropertiesDataDictionary(items);\n    });\n  }\n  getComponentModel(guid) {\n    return this.store$.select(viewComponentModelSelector, {\n      guid\n    });\n  }\n  initViewDesigner(payload) {\n    this.dispatcher.dispatch(initViewDesigner({\n      payload\n    }));\n  }\n  destroyViewDesigner() {\n    this.destroyViewDesignerSubject.next();\n    // trigger action after subject to allow store to be cleared after every component is destroyed\n    // and its streams are completed\n    this.dispatcher.dispatch(destroyViewDesigner());\n  }\n  selectComponent(guid) {\n    this.dispatcher.dispatch(selectComponent({\n      guid\n    }));\n  }\n  insertComponent(payload) {\n    this.dispatcher.dispatch(insertComponent(Object.assign(Object.assign({\n      columnIndex: isFinite$1(payload.data && payload.data.columnIndex) ? payload.data.columnIndex : 0\n    }, payload), {\n      data: {\n        guid: payload.data.draggedViewComponentGuid,\n        type: payload.data.draggedViewComponentDescriptor.type,\n        initialPropertiesByName: payload.data.initialPropertiesByName\n      }\n    })));\n  }\n  selectInspectorTab(payload) {\n    this.dispatcher.dispatch(selectInspectorTab(payload));\n  }\n  generateViewDefinition(payload) {\n    this.dispatcher.dispatch(generateViewDefinition({\n      payload\n    }));\n  }\n  updateComponentProperties(guid, componentProperties) {\n    this.dispatcher.dispatch(updateComponentModel({\n      payload: [{\n        guid,\n        partialModel: {\n          propertiesByName: componentProperties\n        }\n      }]\n    }));\n  }\n  updateComponentModel(guid, payload) {\n    this.dispatcher.dispatch(updateComponentModel({\n      payload: [{\n        guid,\n        partialModel: payload\n      }]\n    }));\n  }\n  getComponentProperties(guid) {\n    return this.store$.select(componentPropertiesByNameSelector, {\n      guid\n    });\n  }\n  getComponentPropertyValue(guid, propertyName) {\n    return this.store$.select(componentPropertiesByNameSelector, {\n      guid,\n      propertyName: propertyName\n    }).pipe(withLatestFrom(this.getComponentModel(guid)), switchMap(([value, model]) => model ? of(value) : EMPTY));\n  }\n  getComponentType(guid) {\n    return this.store$.select(componentTypeSelector, {\n      guid\n    });\n  }\n  getComponentPermissions(guid) {\n    return this.store$.select(componentPermissionsSelector, {\n      guid\n    });\n  }\n  getComponentLayout(guid) {\n    return this.store$.select(componentLayoutSelector, {\n      guid\n    });\n  }\n  updateSelectedComponentProperties(properties) {\n    this.selectedComponentGuid$.pipe(take(1)).subscribe(guid => {\n      this.updateComponentProperties(guid, properties);\n    });\n  }\n  saveViewDefinition(payload) {\n    this.dispatcher.dispatch(saveViewDefinition({\n      payload\n    }));\n  }\n  updateViewProperties(properties) {\n    this.dispatcher.dispatch(updateViewModel({\n      payload: properties\n    }));\n  }\n  setViewProperties(properties) {\n    this.dispatcher.dispatch(setViewModel({\n      payload: properties\n    }));\n  }\n  getViewPropertyValue(propertyName) {\n    return this.store$.select(viewModelPropertyValueSelector, {\n      propertyName\n    }).pipe(switchMapTo(this.viewModel$.pipe(map$1(model => model[propertyName]), take(1))), distinctUntilChanged());\n  }\n  runPreview() {\n    this.dispatcher.dispatch(runPreview());\n  }\n  clearCanvas() {\n    this.dispatcher.dispatch(clearCanvas());\n  }\n  setComponentInspector(guid, inspectorConfig) {\n    this.rxViewDesignerInspectorService.set(guid, inspectorConfig);\n  }\n  setValidationIssues(guid, issues) {\n    this.dispatcher.dispatch(setValidationIssues({\n      guid,\n      issues\n    }));\n  }\n  setExpressionValidationIssues(issues) {\n    this.dispatcher.dispatch(setExpressionValidationIssues({\n      issues\n    }));\n  }\n  setViewInspectorConfig(inspectorConfig) {\n    this.viewModelGuid$.pipe(take(1)).subscribe(guid => {\n      this.setComponentInspector(guid, inspectorConfig);\n    });\n  }\n  removeViewComponents(guids, selectParent) {\n    if (guids.length) {\n      this.dispatcher.dispatch(removeComponents({\n        guids,\n        selectParent\n      }));\n    }\n  }\n  setComponentSettablePropertiesDataDictionary(guid, componentName, properties) {\n    this.settablePropertiesDataDictionarySubject.next({\n      guid,\n      componentName,\n      dataDictionary: this.rxViewDataDictionaryBuilderService.getSettablePropertiesDataDictionary(properties)\n    });\n  }\n  setComponentCommonDataDictionaryBranch(guid, dataDictionaryBranch) {\n    this.rxViewDataDictionaryService.setCommonDataDictionaryBranch(guid, dataDictionaryBranch ? this.rxViewDataDictionaryBuilderService.getComponentCommonDataDictionaryBranch(dataDictionaryBranch) : null);\n  }\n  setViewCommonDataDictionaryBranch(dataDictionaryBranch) {\n    this.rxViewDataDictionaryService.setViewCommonDataDictionaryBranch(dataDictionaryBranch);\n  }\n  removeAllActionDataDictionaryBranches() {\n    this.rxViewDataDictionaryService.removeAllActionOutputDataDictionaryBranches();\n  }\n  removeActionDataDictionaryBranch(actionGuid) {\n    this.rxViewDataDictionaryService.removeActionOutputDataDictionaryBranch(actionGuid);\n  }\n  setActionDataDictionaryBranch(actionGuid, index, actionName, dataDictionary = null) {\n    this.rxViewDataDictionaryService.setActionOutputDataDictionaryBranch(actionGuid, index, this.rxViewDataDictionaryBuilderService.getActionOutputDataDictionaryBranch(actionName, dataDictionary));\n  }\n  updateActionDataDictionaryBranchOrder(actions) {\n    this.rxViewDataDictionaryService.updateActionOutputDataDictionaryBranchOrder(actions);\n  }\n  getChildComponentGuids(parentComponentGuid, recursive = false, filterPredicate) {\n    // watch for layout and childDataComponentGuids properties change\n    // TODO: store child component guids separately as a final result from layout and childDataComponentGuids\n    return combineLatest([this.store$.select(componentLayoutSelector, {\n      guid: parentComponentGuid\n    }), this.store$.select(childDataComponentGuidsSelector, {\n      guid: parentComponentGuid\n    })]).pipe(\n    // get component model with actual data where layout and childDataComponentGuids are already updated\n    switchMap(() => this.getComponentModel(parentComponentGuid).pipe(take(1))), switchMap(model => model ? of(compact([...(model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : []), ...(model.childDataComponentGuids || [])])) : EMPTY), switchMap(guids => guids.length && recursive ? combineLatest(guids.map(guid => this.getChildComponentGuids(guid, true))).pipe(map$1(flatten), map$1(nestedGuids => [...nestedGuids, ...guids])) : of(guids)), switchMap(guids => guids.length ? this.viewComponentModels$.pipe(map$1(models => {\n      // The model of a removed component may be already unavailable, but the GUID may still be there.\n      // This can happen when multiple nested components are removed from different\n      // parent containers e.g. using record editor field selector dialog component.\n      // In this case, we will get two observable emits for each removed component.\n      // TODO: enhance getFlattenChildComponentGuids logic to reach a single observable emit.\n      let availableComponentGuids = guids.filter(guid => models[guid]);\n      if (filterPredicate) {\n        availableComponentGuids = availableComponentGuids.filter(guid => filterPredicate({\n          type: models[guid].type,\n          guid: models[guid].guid,\n          data: models[guid].propertiesByName\n        }));\n      }\n      return availableComponentGuids;\n    }), take(1)) : of(guids)));\n  }\n  getChildComponents(parentComponentGuid, filterPredicate) {\n    return this.getChildComponentGuids(parentComponentGuid, false, filterPredicate).pipe(switchMap(guids => guids.length ? combineLatest(guids.map(guid => this.getComponentProperties(guid).pipe(withLatestFrom(this.getComponentModel(guid)), switchMap(([props, model]) => model ? of({\n      type: model.type,\n      data: props,\n      guid\n    }) : EMPTY)))) : of([])));\n  }\n  getComponent(guid) {\n    return this.getComponentModel(guid).pipe(map$1(model => model ? {\n      data: model.propertiesByName,\n      guid: model.guid,\n      type: model.type\n    } : null));\n  }\n  getComponentsByType(type) {\n    return this.viewComponentModels$.pipe(map$1(models => filter$1(models, {\n      type\n    }).map(model => ({\n      guid: model.guid,\n      data: model.propertiesByName,\n      type: model.type\n    }))));\n  }\n  getChildComponentTree(parentComponentGuid) {\n    return this.viewComponentModels$.pipe(map$1(viewComponentModels => {\n      const getChildrenData = model => getChildGuidsFromModel(model).reduce((res, childGuid) => {\n        if (viewComponentModels[childGuid]) {\n          res.push({\n            guid: childGuid,\n            data: viewComponentModels[childGuid].propertiesByName,\n            type: viewComponentModels[childGuid].type,\n            children: getChildrenData(viewComponentModels[childGuid])\n          });\n        }\n        return res;\n      }, []);\n      return viewComponentModels[parentComponentGuid] ? getChildrenData(viewComponentModels[parentComponentGuid]) : [];\n    }));\n  }\n  getParentComponentGuid(guid, componentType) {\n    return this.store$.select(parentComponentModelGuidSelector, {\n      guid\n    }).pipe(switchMap(parentGuid => parentGuid && componentType ? this.store$.select(componentTypeSelector, {\n      guid: parentGuid\n    }).pipe(switchMap(parentComponentType => parentComponentType === componentType ? of(parentGuid) : this.getParentComponentGuid(parentGuid, componentType))) : of(parentGuid || null)));\n  }\n  setChildren(guid, data) {\n    this.dispatcher.dispatch(setChildComponents({\n      payload: {\n        guid,\n        data\n      }\n    }));\n  }\n}\nViewDesignerFacade.ɵfac = function ViewDesignerFacade_Factory(t) {\n  return new (t || ViewDesignerFacade)(i0.ɵɵinject(ViewDesignerDispatcher), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i1.Actions), i0.ɵɵinject(RxViewDesignerInspectorService), i0.ɵɵinject(i2$1.RxGuidService), i0.ɵɵinject(RxViewDataDictionaryBuilderService), i0.ɵɵinject(RxViewDataDictionaryStoreService), i0.ɵɵinject(i3.RxOverlayService));\n};\nViewDesignerFacade.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewDesignerFacade,\n  factory: ViewDesignerFacade.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerFacade, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerDispatcher\n    }, {\n      type: i2.Store\n    }, {\n      type: i1.Actions\n    }, {\n      type: RxViewDesignerInspectorService\n    }, {\n      type: i2$1.RxGuidService\n    }, {\n      type: RxViewDataDictionaryBuilderService\n    }, {\n      type: RxViewDataDictionaryStoreService\n    }, {\n      type: i3.RxOverlayService\n    }];\n  }, null);\n})();\nclass RxViewDesignerModels {\n  constructor() {\n    this.models = new Map();\n  }\n  clear() {\n    this.models.clear();\n  }\n  set(guid, model) {\n    this.models.set(guid, model);\n  }\n  get(guid) {\n    return this.models.get(guid);\n  }\n  delete(guid) {\n    this.models.delete(guid);\n  }\n}\nRxViewDesignerModels.ɵfac = function RxViewDesignerModels_Factory(t) {\n  return new (t || RxViewDesignerModels)();\n};\nRxViewDesignerModels.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDesignerModels,\n  factory: RxViewDesignerModels.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerModels, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RxViewDefinitionGeneratorService {\n  constructor(rxDefinitionNameService, rxBundleCacheService, viewDesignerModels, rxViewDefinitionLocalizationService) {\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxBundleCacheService = rxBundleCacheService;\n    this.viewDesignerModels = viewDesignerModels;\n    this.rxViewDefinitionLocalizationService = rxViewDefinitionLocalizationService;\n  }\n  generate(viewModel, componentModels, forSave = false) {\n    const clonedViewModel = viewModel;\n    const viewDefinition = omit(clonedViewModel, 'displayName', 'layout', 'layoutName', 'pageComponent', 'isAngularJsView');\n    viewDefinition.name = viewDefinition.name || this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, clonedViewModel.displayName);\n    viewDefinition.componentDefinitions = this.generateComponentDefinitions(clonedViewModel, componentModels);\n    if (forSave) {\n      viewDefinition.localizableStringsByComponentId = this.rxViewDefinitionLocalizationService.extractLocalizableStrings(viewDefinition);\n    }\n    delete viewDefinition.localizablePropertyToStringGuidMap;\n    viewDefinition.layout = JSON.stringify(clonedViewModel.layout);\n    return viewDefinition;\n  }\n  generateComponentDefinitions(model, componentModelItems) {\n    return getChildGuidsFromModel(model).map(guid => {\n      const componentDefinition = Object.assign({}, componentModelItems[guid]);\n      const componentModel = this.viewDesignerModels.get(guid);\n      const propertiesByName = isFunction(componentModel === null || componentModel === void 0 ? void 0 : componentModel.getPropertiesByName) ? componentModel.getPropertiesByName(componentDefinition.propertiesByName) : componentDefinition.propertiesByName;\n      componentDefinition.propertiesByName = this.serializeComponentDefinitionProperties(propertiesByName);\n      delete componentDefinition.parentGuid;\n      // Move name out of propertiesByName for all components except actions.\n      if (componentDefinition.type !== RxViewComponentType.Action && has(componentDefinition.propertiesByName, 'name')) {\n        if (componentDefinition.propertiesByName.name) {\n          componentDefinition.name = componentDefinition.propertiesByName.name;\n        }\n        delete componentDefinition.propertiesByName.name;\n      }\n      if (componentDefinition.layout || componentDefinition.childDataComponentGuids) {\n        componentDefinition.componentDefinitions = this.generateComponentDefinitions(componentDefinition, componentModelItems);\n        delete componentDefinition.childDataComponentGuids;\n      }\n      if (componentDefinition.layout) {\n        componentDefinition.layout = JSON.stringify(componentDefinition.layout);\n      }\n      return componentDefinition;\n    });\n  }\n  serializeComponentDefinitionProperties(componentProperties) {\n    return transform(componentProperties, (result, value, key) => {\n      switch (true) {\n        case isArray(value):\n        case isNumber(value):\n        case isBoolean(value):\n        case isPlainObject(value):\n          result[key] = JSON.stringify(value);\n          break;\n        case isObject(value):\n          // support Set, Map\n          const obj = Object.create(null);\n          value.forEach((v, k) => obj[k] = v);\n          result[key] = JSON.stringify(obj);\n          break;\n        case isFunction(value):\n        case isUndefined(value):\n          result[key] = null;\n          break;\n        default:\n          result[key] = value;\n          break;\n      }\n    }, {});\n  }\n}\nRxViewDefinitionGeneratorService.ɵfac = function RxViewDefinitionGeneratorService_Factory(t) {\n  return new (t || RxViewDefinitionGeneratorService)(i0.ɵɵinject(i3.RxDefinitionNameService), i0.ɵɵinject(i3.RxBundleCacheService), i0.ɵɵinject(RxViewDesignerModels), i0.ɵɵinject(i5.RxViewDefinitionLocalizationService));\n};\nRxViewDefinitionGeneratorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDefinitionGeneratorService,\n  factory: RxViewDefinitionGeneratorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDefinitionGeneratorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i3.RxDefinitionNameService\n    }, {\n      type: i3.RxBundleCacheService\n    }, {\n      type: RxViewDesignerModels\n    }, {\n      type: i5.RxViewDefinitionLocalizationService\n    }];\n  }, null);\n})();\nfunction validateCssClassName(tag) {\n  return !/^[a-z][-\\w]+$/gi.test(isObject(tag) ? tag.data.value : tag);\n}\nfunction validateCssClassNames(styles) {\n  const validationIssues = [];\n  if (styles) {\n    const tags = styles.split(' ');\n    if (tags.some(validateCssClassName)) {\n      validationIssues.push({\n        type: 'error',\n        propertyName: 'styles',\n        description: 'CSS class name is invalid.'\n      });\n    }\n  }\n  return validationIssues;\n}\nfunction validateAvailableOnDevicesProp(value) {\n  const validationIssues = [];\n  if (!(value === null || value === void 0 ? void 0 : value.length)) {\n    validationIssues.push({\n      type: 'error',\n      propertyName: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n      description: 'At least one device must be selected.'\n    });\n  }\n  return validationIssues;\n}\nfunction validateStandardProps(model) {\n  return [...validateCssClassNames(model[RX_STYLES_PROP_NAME]), ...validateAvailableOnDevicesProp(model[RX_AVAILABLE_ON_DEVICES_PROP_NAME])];\n}\nclass RxViewExpressionValidatorService {\n  constructor(rxDefaultExpressionValidatorService, rxDefaultExpressionEvaluatorService, rxStringService, rxExpressionParserService, viewDesignerFacade) {\n    this.rxDefaultExpressionValidatorService = rxDefaultExpressionValidatorService;\n    this.rxDefaultExpressionEvaluatorService = rxDefaultExpressionEvaluatorService;\n    this.rxStringService = rxStringService;\n    this.rxExpressionParserService = rxExpressionParserService;\n    this.viewDesignerFacade = viewDesignerFacade;\n  }\n  validate(expression, propertyName, propertyLabel = this.rxStringService.prettify(propertyName), expressionEvaluator = this.rxDefaultExpressionEvaluatorService) {\n    let issues$ = of([]);\n    if (this.rxDefaultExpressionValidatorService.isValid(expression, expressionEvaluator)) {\n      if (this.rxStringService.isNonEmptyString(expression)) {\n        const referencedComponentGuidsSet = new Set();\n        this.rxExpressionParserService.parse(expression, (token, expressionFragment) => {\n          if (token === ExpressionParserToken.RxExpression || token === ExpressionParserToken.SingleQuoteRxExpression) {\n            // Extract <ID> from ${view.components.<ID>.<Path>}\n            const result = /\\${view\\.components\\.([0-9a-z-]+)\\..+}/.exec(expressionFragment);\n            if (result && result[1]) {\n              referencedComponentGuidsSet.add(result[1]);\n            }\n          }\n          return expressionFragment;\n        });\n        if (referencedComponentGuidsSet.size) {\n          const referencedComponentGuids = Array.from(referencedComponentGuidsSet);\n          issues$ = this.viewDesignerFacade.allComponentGuids$.pipe(map$1(guids => referencedComponentGuids.filter(guid => !guids.has(guid))), distinctUntilChanged(isEqual), map$1(guids => guids.map(() => ({\n            type: 'error',\n            description: 'Expression references a non-existent view component.',\n            propertyName\n          }))));\n        }\n      }\n    } else {\n      issues$ = of([{\n        type: 'error',\n        description: `${propertyLabel} must be a valid expression.`,\n        propertyName\n      }]);\n    }\n    return issues$;\n  }\n}\nRxViewExpressionValidatorService.ɵfac = function RxViewExpressionValidatorService_Factory(t) {\n  return new (t || RxViewExpressionValidatorService)(i0.ɵɵinject(i5.RxDefaultExpressionValidatorService), i0.ɵɵinject(i5.RxDefaultExpressionEvaluatorService), i0.ɵɵinject(i2$1.RxStringService), i0.ɵɵinject(i3.RxExpressionParserService), i0.ɵɵinject(ViewDesignerFacade));\n};\nRxViewExpressionValidatorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewExpressionValidatorService,\n  factory: RxViewExpressionValidatorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewExpressionValidatorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i5.RxDefaultExpressionValidatorService\n    }, {\n      type: i5.RxDefaultExpressionEvaluatorService\n    }, {\n      type: i2$1.RxStringService\n    }, {\n      type: i3.RxExpressionParserService\n    }, {\n      type: ViewDesignerFacade\n    }];\n  }, null);\n})();\nclass RxViewDataDictionaryService {\n  constructor(viewDesignerFacade, rxViewDataDictionaryBuilderService, rxViewComponentRegistryService, rxObjectUtilsService, rxDataDictionaryUtils) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxViewDataDictionaryBuilderService = rxViewDataDictionaryBuilderService;\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.rxObjectUtilsService = rxObjectUtilsService;\n    this.rxDataDictionaryUtils = rxDataDictionaryUtils;\n    this.componentsCommonDataDictionaryStateClone$ = this.viewDesignerFacade.componentsCommonDataDictionaryState$.pipe(map$1(componentsDataDictionaryState => componentsDataDictionaryState ? this.rxObjectUtilsService.cloneDeep(componentsDataDictionaryState) : {}), shareReplay(1));\n    this.viewCommonDataDictionaryStateClone$ = this.viewDesignerFacade.viewCommonDataDictionaryState$.pipe(filter(Boolean), map$1(viewDataDictionary => this.rxObjectUtilsService.cloneDeep(viewDataDictionary)), shareReplay(1));\n    this.commonDataDictionary$ = this.getCommonDataDictionary();\n    this.settablePropertiesDataDictionary$ = this.viewDesignerFacade.settablePropertiesDataDictionaryState$.pipe(withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$), map$1(([settablePropsDataDictionaryState, viewDesignerModelState]) => this.rxObjectUtilsService.cloneDeep(this.getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState))));\n  }\n  getActionDataDictionary(guid) {\n    return combineLatest([this.viewDesignerFacade.actionsDataDictionaryState$, this.getCommonDataDictionary()]).pipe(map$1(([actionsDataDictionaryState, commonDataDictionary]) => {\n      const currentActionData = find(actionsDataDictionaryState, {\n        guid\n      });\n      return [{\n        label: 'Actions',\n        children: currentActionData ? flow(branches => take$1(branches, currentActionData.index), branches => map(branches, 'dataDictionaryBranch'), compact, branches => filter$1(branches, branch => {\n          var _a;\n          return (_a = branch.children) === null || _a === void 0 ? void 0 : _a.length;\n        }), branches => this.rxObjectUtilsService.cloneDeep(branches))(actionsDataDictionaryState) : []\n      }, ...commonDataDictionary];\n    }),\n    // TODO: performance\n    distinctUntilChanged(isEqual));\n  }\n  getComponentCommonDataDictionary(guid) {\n    return this.componentsCommonDataDictionaryStateClone$.pipe(map$1(state => state[guid]));\n  }\n  getCommonDataDictionary(componentBranchToReplace) {\n    return combineLatest([this.viewCommonDataDictionaryStateClone$, this.componentsCommonDataDictionaryStateClone$.pipe(map$1(componentsDataDictionaryState => Object.values(componentBranchToReplace ? Object.assign(Object.assign({}, componentsDataDictionaryState), componentBranchToReplace) : componentsDataDictionaryState)))]).pipe(map$1(([viewDataDictionaryBranch, componentDataDictionaryBranches]) => [{\n      label: 'General',\n      children: [{\n        label: 'Current user',\n        icon: 'd-icon-dollar',\n        expression: '${keywords.user}'\n      }, {\n        label: 'New line',\n        icon: 'd-icon-dollar',\n        expression: '${keywords.newLine}'\n      }]\n    }, {\n      label: 'Functions',\n      children: this.rxDataDictionaryUtils.getFunctionsDataDictionaryBranch(RX_EXPRESSION_FUNCTIONS)\n    }, Object.assign(Object.assign({}, viewDataDictionaryBranch), {\n      children: [{\n        label: 'Components',\n        children: compact(componentDataDictionaryBranches),\n        expanded: true\n      }, ...viewDataDictionaryBranch.children]\n    })]));\n  }\n  getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState) {\n    return getChildGuidsFromModel(viewDesignerModelState.viewDesignModel).map(guid => this.getSettablePropsDataDictionaryBranch(guid, viewDesignerModelState, settablePropsDataDictionaryState, true)).filter(Boolean);\n  }\n  getSettablePropsDataDictionaryBranch(guid, modelState, settablePropsState, expanded = false) {\n    const componentPropsState = settablePropsState[guid];\n    const model = modelState.viewComponentDesignModels[guid];\n    const descriptor = this.rxViewComponentRegistryService.get(model.type);\n    const childGuids = descriptor.outlets && model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : null;\n    const componentsDataDictionary = map(childGuids, componentGuid => this.getSettablePropsDataDictionaryBranch(componentGuid, modelState, settablePropsState)).filter(Boolean);\n    const propsDataDictionary = get(componentPropsState, 'dataDictionary', []);\n    if (componentsDataDictionary.length || propsDataDictionary.length) {\n      return {\n        label: (componentPropsState === null || componentPropsState === void 0 ? void 0 : componentPropsState.componentName) || descriptor.name,\n        expanded,\n        children: componentsDataDictionary.length && propsDataDictionary.length ? [{\n          label: 'Components',\n          children: componentsDataDictionary\n        }, {\n          label: 'Properties',\n          children: propsDataDictionary\n        }] : componentsDataDictionary.length ? componentsDataDictionary : propsDataDictionary\n      };\n    }\n  }\n}\nRxViewDataDictionaryService.ɵfac = function RxViewDataDictionaryService_Factory(t) {\n  return new (t || RxViewDataDictionaryService)(i0.ɵɵinject(ViewDesignerFacade), i0.ɵɵinject(RxViewDataDictionaryBuilderService), i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(i2$1.RxObjectUtilsService), i0.ɵɵinject(i3.RxDataDictionaryUtils));\n};\nRxViewDataDictionaryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDataDictionaryService,\n  factory: RxViewDataDictionaryService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDataDictionaryService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }, {\n      type: RxViewDataDictionaryBuilderService\n    }, {\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: i2$1.RxObjectUtilsService\n    }, {\n      type: i3.RxDataDictionaryUtils\n    }];\n  }, null);\n})();\nclass RxViewExpressionConfigurator extends RxExpressionConfigurator {\n  constructor(injector) {\n    super();\n    this.injector = injector;\n    this.rxExpressionHelperService = this.injector.get(RxExpressionHelperService);\n  }\n  getDefaultConfig() {\n    return Object.assign(Object.assign({}, super.getDefaultConfig()), {\n      dataDictionary$: this.commonDataDictionary$,\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient),\n      validateExpression: (propertyName, expression) => {\n        let isValid = true;\n        const expressionEvaluator = this.getExpressionEvaluator(propertyName);\n        try {\n          expressionEvaluator.parseExpression(this.rxExpressionHelperService.prepare(expression));\n        } catch (e) {\n          isValid = false;\n        }\n        return of(isValid);\n      }\n    });\n  }\n}\nclass RxViewComponentExpressionConfigurator extends RxViewExpressionConfigurator {\n  constructor(injector, componentGuid, componentModel, componentType) {\n    super(injector);\n    this.injector = injector;\n    this.componentGuid = componentGuid;\n    this.componentModel = componentModel;\n    this.componentType = componentType;\n    this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n    this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n    this.rxViewComponentRegistryService = this.injector.get(RxViewComponentRegistryService);\n    this.commonDataDictionary$ = this.rxViewDataDictionaryService.commonDataDictionary$;\n  }\n  getExpressionEvaluator(propertyName) {\n    var _a;\n    const propertyDescriptor = this.componentType && this.rxViewComponentRegistryService.get(this.componentType).properties.find(property => property.name === propertyName);\n    return isFunction((_a = propertyDescriptor === null || propertyDescriptor === void 0 ? void 0 : propertyDescriptor.evaluatorService) === null || _a === void 0 ? void 0 : _a.parseExpression) ? propertyDescriptor.evaluatorService : this.rxDefaultExpressionEvaluatorService;\n  }\n  getCommonDataDictionary(componentBranchToReplace$, componentGuid = this.componentGuid) {\n    return componentBranchToReplace$ ? componentBranchToReplace$.pipe(switchMap(dataDictionary => this.rxViewDataDictionaryService.getCommonDataDictionary({\n      [componentGuid]: dataDictionary\n    }))) : this.commonDataDictionary$;\n  }\n  getComponentCommonDataDictionary(guid) {\n    return this.rxViewDataDictionaryService.getComponentCommonDataDictionary(guid || this.componentGuid);\n  }\n}\nclass RxViewCustomizationOptionsComponent {\n  constructor(viewDesignerFacade, rxOverlayService, translateService) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxOverlayService = rxOverlayService;\n    this.translateService = translateService;\n    this.destroyed$ = new ReplaySubject(1);\n  }\n  ngOnInit() {\n    combineLatest([this.viewDesignerFacade.getViewPropertyValue('allowOverlay'), this.viewDesignerFacade.getViewPropertyValue('scope'), this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'), this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor'), this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime')]).pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), takeUntil(this.destroyed$)).subscribe(([[allowOverlay, scope, overlayGroupId, overlayDescriptor, lastUpdateTime], viewModel]) => {\n      this.controlOptions = {\n        allowOverlay,\n        scope,\n        overlayGroupId,\n        overlayDescriptor,\n        isDisabled: !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel),\n        definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.view-definition.label').toLowerCase()\n      };\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n  setCustomization(customizationOptions) {\n    this.viewDesignerFacade.updateViewProperties(customizationOptions);\n  }\n}\nRxViewCustomizationOptionsComponent.ɵfac = function RxViewCustomizationOptionsComponent_Factory(t) {\n  return new (t || RxViewCustomizationOptionsComponent)(i0.ɵɵdirectiveInject(ViewDesignerFacade), i0.ɵɵdirectiveInject(i3.RxOverlayService), i0.ɵɵdirectiveInject(i6.TranslateService));\n};\nRxViewCustomizationOptionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RxViewCustomizationOptionsComponent,\n  selectors: [[\"rx-view-customization-options\"]],\n  inputs: {\n    options: \"options\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"options\", \"ngModel\", \"ngModelChange\"]],\n  template: function RxViewCustomizationOptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"rx-scope-customization-control\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function RxViewCustomizationOptionsComponent_Template_rx_scope_customization_control_ngModelChange_0_listener($event) {\n        return ctx.value = $event;\n      })(\"ngModelChange\", function RxViewCustomizationOptionsComponent_Template_rx_scope_customization_control_ngModelChange_0_listener($event) {\n        return ctx.setCustomization($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.controlOptions)(\"ngModel\", ctx.value);\n    }\n  },\n  directives: [i3$1.CustomizationOptionsComponent, i3$2.NgControlStatus, i3$2.NgModel],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewCustomizationOptionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-customization-options',\n      templateUrl: './view-customization-options.component.html'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }, {\n      type: i3.RxOverlayService\n    }, {\n      type: i6.TranslateService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }]\n  });\n})();\nclass RxViewRevertCustomizationComponent {\n  constructor(viewDesignerFacade) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.events = new EventEmitter();\n    this.controlOptions$ = combineLatest([this.viewDesignerFacade.getViewPropertyValue('allowOverlay'), this.viewDesignerFacade.getViewPropertyValue('scope'), this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'), this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor')]).pipe(map$1(([allowOverlay, scope, overlayGroupId, overlayDescriptor]) => ({\n      allowOverlay,\n      scope,\n      overlayGroupId,\n      overlayDescriptor\n    })));\n  }\n}\nRxViewRevertCustomizationComponent.ɵfac = function RxViewRevertCustomizationComponent_Factory(t) {\n  return new (t || RxViewRevertCustomizationComponent)(i0.ɵɵdirectiveInject(ViewDesignerFacade));\n};\nRxViewRevertCustomizationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RxViewRevertCustomizationComponent,\n  selectors: [[\"rx-view-revert-customization\"]],\n  inputs: {\n    options: \"options\",\n    isDisabled: \"isDisabled\"\n  },\n  outputs: {\n    events: \"events\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"options\", \"isDisabled\", \"events\"]],\n  template: function RxViewRevertCustomizationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"rx-revert-customization\", 0);\n      i0.ɵɵlistener(\"events\", function RxViewRevertCustomizationComponent_Template_rx_revert_customization_events_0_listener($event) {\n        return ctx.events.emit($event);\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", i0.ɵɵpipeBind1(1, 2, ctx.controlOptions$))(\"isDisabled\", ctx.isDisabled);\n    }\n  },\n  directives: [i3$1.RxRevertCustomizationComponent],\n  pipes: [i4.AsyncPipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewRevertCustomizationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-revert-customization',\n      templateUrl: './view-revert-customization.component.html'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    events: [{\n      type: Output\n    }]\n  });\n})();\nclass RxViewRevertCustomizationModule {}\nRxViewRevertCustomizationModule.ɵfac = function RxViewRevertCustomizationModule_Factory(t) {\n  return new (t || RxViewRevertCustomizationModule)();\n};\nRxViewRevertCustomizationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RxViewRevertCustomizationModule,\n  declarations: [RxViewRevertCustomizationComponent],\n  imports: [CommonModule, RxRevertCustomizationModule]\n});\nRxViewRevertCustomizationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, RxRevertCustomizationModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewRevertCustomizationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RxViewRevertCustomizationComponent],\n      imports: [CommonModule, RxRevertCustomizationModule]\n    }]\n  }], null, null);\n})();\nclass RxViewModel {\n  constructor(injector, viewDesignerFacade, rxStringService, rxOverlayService, rxViewComponentRegistryService, rxBundleCacheService, rxModalService, rxViewDefinitionCacheService, rxViewDefinitionParserService, rxGuidService, viewDesignerDispatcher, rxDefinitionNameService, rxViewExpressionValidatorService) {\n    this.injector = injector;\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxStringService = rxStringService;\n    this.rxOverlayService = rxOverlayService;\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.rxBundleCacheService = rxBundleCacheService;\n    this.rxModalService = rxModalService;\n    this.rxViewDefinitionCacheService = rxViewDefinitionCacheService;\n    this.rxViewDefinitionParserService = rxViewDefinitionParserService;\n    this.rxGuidService = rxGuidService;\n    this.viewDesignerDispatcher = viewDesignerDispatcher;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n    this.expressionConfigurator = new RxViewComponentExpressionConfigurator(this.injector, null, this);\n    this.destroyed$ = new ReplaySubject(1);\n    this.allViewDefinitionNamesByBundleId$ = this.viewDesignerFacade.currentBundleId$.pipe(filter(Boolean), switchMap(bundleId => this.rxViewDefinitionCacheService.getViewDefinitionNames(bundleId).pipe(map$1(names => names.map(name => this.rxDefinitionNameService.getDisplayNameForValidation(name))))));\n    this.targetExtensionContainerOptions$ = this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(switchMap(targetViewDefinitionName => targetViewDefinitionName ? this.getTargetExtensionContainerOptions(targetViewDefinitionName).pipe(take(1)) : of(null)), shareReplay(1));\n    this.targetViewDefinition$ = this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(filter(Boolean), switchMap(targetViewDefinitionName => this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName)));\n    this.init();\n  }\n  init() {\n    // Initial model and inspector configuration.\n    this.viewDesignerFacade.initViewDesigner$.pipe(concatMapTo(this.viewDesignerFacade.viewModelsInitialized$.pipe(switchMapTo(combineLatest([this.viewDesignerFacade.viewComponentModels$.pipe(map$1(viewComponentModels => {\n      const pageComponentModel = Object.values(viewComponentModels).find(model => model.type === RxViewComponentType.Page);\n      return pageComponentModel ? viewComponentModels[pageComponentModel.childDataComponentGuids[0]].type : null;\n    })), this.viewDesignerFacade.viewModel$, this.targetExtensionContainerOptions$]).pipe(take(1))))), takeUntil(this.destroyed$)).subscribe(([componentType, viewModel, targetExtensionContainerOptions]) => {\n      this.viewDesignerFacade.updateViewProperties({\n        pageComponent: componentType\n      });\n      this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(Object.assign(Object.assign({}, viewModel), {\n        pageComponent: componentType\n      }), targetExtensionContainerOptions));\n    });\n    this.viewDesignerFacade.initViewDesigner$.pipe(switchMapTo(this.targetExtensionContainerOptions$.pipe(\n    // Ignore initial property change.\n    skip(1), withLatestFrom(this.viewDesignerFacade.viewModel$))), takeUntil(this.destroyed$)).subscribe(([options, viewModel]) => this.onTargetExtensionContainerOptionsChange(options, viewModel));\n    this.viewDesignerFacade.initViewDesigner$.pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('pageComponent').pipe(\n    // Ignore initial property change.\n    skip(1), switchMapTo(combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$, this.targetExtensionContainerOptions$]).pipe(take(1))))), takeUntil(this.destroyed$)).subscribe(([viewModel, viewComponentModels, targetExtensionContainerOptions]) => this.onPageComponentChange(viewModel, viewComponentModels, targetExtensionContainerOptions));\n    this.viewDesignerFacade.initViewDesigner$.pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(skip(1))), switchMap(() => this.viewDesignerFacade.viewComponentModels$.pipe(first())), takeUntil(this.destroyed$)).subscribe(viewComponentModels => {\n      if (!isEmpty(viewComponentModels)) {\n        this.viewDesignerFacade.clearCanvas();\n      }\n    });\n    this.viewDesignerFacade.initViewDesigner$.pipe(switchMapTo(combineLatest([this.viewDesignerFacade.getViewPropertyValue('styles').pipe(map$1(validateCssClassNames)), this.validateDisplayName(), this.validateInputParams(), this.validateOutputParamExpressions(), this.validateExtensionContainer()]).pipe(map$1(flatten), map$1(compact), withLatestFrom(this.viewDesignerFacade.viewModelGuid$))), takeUntil(this.destroyed$)).subscribe(([issues, guid]) => {\n      this.viewDesignerFacade.setValidationIssues(guid, issues);\n    });\n    this.viewDesignerFacade.initViewDesigner$.pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('inputParams')), takeUntil(this.destroyed$)).subscribe(inputParams => this.viewDesignerFacade.setViewCommonDataDictionaryBranch(this.getViewCommonDataDictionary(inputParams)));\n    this.viewDesignerFacade.getViewPropertyValue('targetExtensionContainerGuid').pipe(withLatestFrom(this.targetViewDefinition$), map$1(([targetExtensionContainerGuid, targetViewDefinition]) => this.getTargetRecordDefinitionName(targetViewDefinition, targetExtensionContainerGuid)), distinctUntilChanged(), switchMapTo(this.viewDesignerFacade.viewComponentModels$.pipe(take(1))), filter(viewComponentModels => !isEmpty(viewComponentModels)), takeUntil(this.destroyed$)).subscribe(() => this.viewDesignerFacade.clearCanvas());\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n  getTargetExtensionContainerOptions(targetViewDefinitionName) {\n    return this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName).pipe(map$1(viewDefinition => this.rxViewDefinitionParserService.getComponents(viewDefinition).filter(({\n      componentDefinition\n    }) => componentDefinition.type === RxViewComponentType.ExtensionContainer).map(({\n      componentDefinition\n    }) => ({\n      id: componentDefinition.guid,\n      name: componentDefinition.propertiesByName.name || componentDefinition.name\n    }))));\n  }\n  onTargetExtensionContainerOptionsChange(options, viewModel) {\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n    // targetViewDefinitionName is not selected when options are not defined.\n    if (!options) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: null\n      });\n    } else if (options.length === 1) {\n      this.viewDesignerFacade.updateViewProperties({\n        targetExtensionContainerGuid: options[0].id\n      });\n    }\n  }\n  onPageComponentChange(viewModel, componentModels, options) {\n    const pageComponentModel = find(componentModels, {\n      type: RxViewComponentType.Page\n    });\n    this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n    const actions = [];\n    if (viewModel.pageComponent) {\n      if (pageComponentModel) {\n        this.viewDesignerFacade.updateComponentModel(pageComponentModel.childDataComponentGuids[0], {\n          type: viewModel.pageComponent\n        });\n      } else {\n        const pageComponentGuid = this.rxGuidService.generate();\n        if (!isEmpty(componentModels)) {\n          this.viewDesignerFacade.removeViewComponents(getChildGuidsFromModel(viewModel));\n        }\n        actions.push(initializeComponentModels({\n          payload: [{\n            componentModel: {\n              guid: pageComponentGuid,\n              resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n              type: RxViewComponentType.Page,\n              propertiesByName: {},\n              parentGuid: viewModel.guid\n            },\n            insertIndex: 0,\n            columnIndex: 0,\n            outletName: RX_VIEW_DEFINITION.defaultOutletName\n          }]\n        }), initializeDataComponentModels({\n          payload: [{\n            componentModel: {\n              guid: this.rxGuidService.generate(),\n              type: viewModel.pageComponent,\n              resourceType: RX_VIEW_DEFINITION.resourceTypes.viewComponent,\n              propertiesByName: {},\n              parentGuid: pageComponentGuid\n            }\n          }]\n        }));\n      }\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    } else if (pageComponentModel) {\n      this.viewDesignerFacade.removeViewComponents([pageComponentModel.guid]);\n    }\n    actions.forEach(action => this.viewDesignerDispatcher.dispatch(action));\n  }\n  getInspector(viewDesignModel, targetExtensionContainerOptions = []) {\n    const isExistingView = Boolean(viewDesignModel.lastUpdateTime);\n    const isCustomizationAllowed = isExistingView ? this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewDesignModel) : true;\n    const availablePageComponents = this.rxViewComponentRegistryService.getBundlePageComponents(this.rxBundleCacheService.bundleId).map(pageComponent => ({\n      id: pageComponent.type,\n      name: pageComponent.name\n    }));\n    if (viewDesignModel.pageComponent && !this.rxViewComponentRegistryService.get(viewDesignModel.pageComponent)) {\n      availablePageComponents.unshift({\n        name: RX_VIEW_DEFINITION.unknownPageComponent.name,\n        id: viewDesignModel.pageComponent\n      });\n    }\n    const pageComponentControl = {\n      name: 'pageComponent',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Page component',\n        options: availablePageComponents,\n        beforeValueChange: (oldValue, newValue) => this.viewDesignerFacade.viewModel$.pipe(take(1), withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([viewModel, viewComponentModels]) => !(oldValue === null || oldValue === void 0 ? void 0 : oldValue.length) && newValue.length && (viewModel.inputParams.length || viewModel.outputParams.length || !isEmpty(viewComponentModels)))).toPromise().then(isConfirmationRequired => isConfirmationRequired ? this.rxModalService.confirm({\n          title: 'Warning',\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message: 'The view canvas, input and output parameters will be cleared. Do you want to continue?'\n        }) : true),\n        emptyOption: true\n      }\n    };\n    const extensionContainerControl = {\n      name: 'targetExtensionContainerGuid',\n      component: SelectFormControlComponent,\n      options: {\n        label: 'Extension container',\n        tooltip: new Tooltip(`Select an extension container in the view to extend where record editor fields from this view will be injected.\n            The records defined for the view to extend and for this view must be associated one-to-one.`),\n        options: targetExtensionContainerOptions || [],\n        required: true,\n        beforeValueChange: (oldValue, newValue) => {\n          return this.isTargetRecordDefinitionChanged(oldValue, newValue).pipe(withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([isRecordDefinitionChanged, viewComponentModels]) => !isEmpty(viewComponentModels) && isRecordDefinitionChanged), take(1)).toPromise().then(isConfirmationRequired => isConfirmationRequired ? this.rxModalService.confirm({\n            title: 'Warning',\n            modalStyle: RX_MODAL.modalStyles.warning,\n            message: 'The view canvas will be cleared. Do you want to continue?'\n          }) : true);\n        }\n      }\n    };\n    const layout = [{\n      label: 'General',\n      controls: [{\n        name: 'displayName',\n        component: TextFormControlComponent,\n        isDisabled: Boolean(viewDesignModel.lastUpdateTime),\n        options: {\n          required: true,\n          label: 'Name'\n        }\n      }, {\n        name: 'description',\n        component: TextareaFormControlComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          label: 'Description',\n          rows: 3\n        }\n      }, {\n        name: 'layoutName',\n        component: TextFormControlComponent,\n        isDisabled: true,\n        options: {\n          label: 'Layout template'\n        }\n      }, {\n        name: 'targetViewDefinitionName',\n        component: RxDefinitionPickerComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          label: 'View to extend',\n          tooltip: new Tooltip(`Select a view to extend in order to inject this view into it.\n                The view to extend may be read-only, but must contain at least one Record editor with an Extension container.`),\n          definitionType: RxDefinitionPickerType.View,\n          beforeValueChange: (oldValue, newValue) => this.viewDesignerFacade.viewComponentModels$.pipe(first(), withLatestFrom(this.viewDesignerFacade.viewModel$)).toPromise().then(([components, viewModel]) => {\n            const isViewParametersPresent = Boolean(!(oldValue === null || oldValue === void 0 ? void 0 : oldValue.length) && newValue.length && (viewModel.inputParams.length || viewModel.outputParams.length));\n            let message;\n            if (!isEmpty(components) && isViewParametersPresent) {\n              message = 'The view canvas, input and output parameters will be cleared. Do you want to continue?';\n            } else if (!isEmpty(components)) {\n              message = 'The view canvas will be cleared. Do you want to continue?';\n            } else if (isViewParametersPresent) {\n              message = 'The input and output parameters will be cleared. Do you want to continue?';\n            }\n            return message ? this.rxModalService.confirm({\n              title: 'Warning',\n              modalStyle: RX_MODAL.modalStyles.warning,\n              message: message\n            }) : true;\n          })\n        }\n      }, {\n        name: 'styles',\n        component: TagsFormControlComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          label: 'CSS classes',\n          placeholder: 'Add CSS classes',\n          tooltip: new Tooltip('Enter CSS class names to apply to this view.'),\n          errorCheck: validateCssClassName\n        }\n      }, {\n        name: 'permissions',\n        component: RxPermissionEditorComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          label: 'Permissions',\n          type: 'view'\n        }\n      }, {\n        component: RxViewRevertCustomizationComponent\n      }, {\n        component: RxViewCustomizationOptionsComponent\n      }]\n    }, {\n      label: 'Input parameters',\n      controls: [{\n        name: 'inputParams',\n        component: ListFormControlComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          addItemText: 'Add',\n          emptyListText: 'No input parameters added.',\n          items: [{\n            label: 'Name',\n            propertyName: 'name'\n          }]\n        }\n      }]\n    }, {\n      label: 'Output parameters',\n      controls: [{\n        name: 'outputParams',\n        component: ListFormControlComponent,\n        isDisabled: !isCustomizationAllowed,\n        options: {\n          addItemText: 'Add',\n          emptyListText: 'No output parameters added.',\n          items: [{\n            label: 'Name',\n            propertyName: 'name'\n          }, {\n            label: 'Source',\n            propertyName: 'source',\n            dataDictionary$: this.expressionConfigurator.getDataDictionary(),\n            operators: this.expressionConfigurator.getOperators()\n          }]\n        }\n      }]\n    }];\n    if (availablePageComponents.length) {\n      layout[0].controls.splice(2, 0, pageComponentControl);\n    }\n    // hide 'View to extend' and 'Extention container' controls if a page component is selected\n    if (viewDesignModel.pageComponent) {\n      layout.splice(1, 2);\n      layout[0].controls.splice(findIndex(layout[0].controls, {\n        name: 'targetViewDefinitionName'\n      }), 1);\n    }\n    if (viewDesignModel.targetViewDefinitionName) {\n      const targetViewDefinitionNameControlIndex = findIndex(layout[0].controls, {\n        name: 'targetViewDefinitionName'\n      });\n      layout[0].controls.splice(targetViewDefinitionNameControlIndex + 1, 0, extensionContainerControl);\n      // hide 'Page component' control if 'View to extend' is selected\n      layout[0].controls.splice(findIndex(layout[0].controls, {\n        name: 'pageComponent'\n      }), 1);\n      // hide 'Input parameters' and 'Output parameters' control if 'View to extend' is selected\n      layout.splice(1, 2);\n      this.viewDesignerFacade.updateViewProperties({\n        inputParams: [],\n        outputParams: []\n      });\n    }\n    return {\n      inspectorSectionConfigs: layout\n    };\n  }\n  validateDisplayName() {\n    // View definition names for validation will be loaded only in case if user changes view name.\n    return this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(switchMap(displayName => combineLatest([of(displayName ? RX_RECORD_DEFINITION.validDefinitionNameRegex.test(displayName) ? null : {\n      type: 'error',\n      propertyName: 'displayName',\n      description: 'View name can only contain letters, numbers, spaces, dashes, and underscores.'\n    } : {\n      type: 'error',\n      propertyName: 'displayName',\n      description: 'View name cannot be blank.'\n    }), this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(switchMap(lastUpdateTime => displayName && !lastUpdateTime ? this.allViewDefinitionNamesByBundleId$.pipe(map$1(viewDefinitionNames => {\n      const isNameAlreadyExists = !lastUpdateTime && (viewDefinitionNames === null || viewDefinitionNames === void 0 ? void 0 : viewDefinitionNames.some(name => this.rxStringService.caseInsensitiveIsEqual(displayName, name)));\n      return isNameAlreadyExists ? {\n        type: 'error',\n        propertyName: 'displayName',\n        description: 'View definition with this name already exists.'\n      } : null;\n    }), take(1)) : of(null)), take(1))]))).pipe(map$1(compact));\n  }\n  validateInputParams() {\n    return this.viewDesignerFacade.getViewPropertyValue('inputParams').pipe(map$1(inputParams => {\n      const notBlankInputParams = flow(params => map(params, param => param.name), compact)(inputParams);\n      const uniqueInputParams = uniq(notBlankInputParams);\n      const validationIssues = [];\n      if (inputParams.length && notBlankInputParams.length !== inputParams.length) {\n        validationIssues.push({\n          type: 'error',\n          propertyName: 'inputParams',\n          description: 'Input parameter name cannot be blank.'\n        });\n      }\n      if (notBlankInputParams.length !== uniqueInputParams.length) {\n        validationIssues.push({\n          type: 'error',\n          propertyName: 'inputParams',\n          description: 'Input parameter names must be unique.'\n        });\n      }\n      return validationIssues;\n    }));\n  }\n  validateOutputParamExpressions() {\n    return this.viewDesignerFacade.getViewPropertyValue('outputParams').pipe(map$1(outputParams => map(outputParams, param => param.source).filter(Boolean)), distinctUntilChanged(isEqual), switchMap(sourceValues => sourceValues.length ? combineLatest(sourceValues.map(value => this.rxViewExpressionValidatorService.validate(value, 'source', 'Output parameter source'))).pipe(map$1(flatten)) : of([])));\n  }\n  validateExtensionContainer() {\n    return combineLatest([this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName'), this.viewDesignerFacade.getViewPropertyValue('targetExtensionContainerGuid')]).pipe(map$1(([targetViewDefinitionName, targetExtensionContainerGuid]) => targetViewDefinitionName && !targetExtensionContainerGuid ? {\n      type: 'error',\n      propertyName: 'targetExtensionContainerGuid',\n      description: 'Extension container cannot be blank.'\n    } : null));\n  }\n  getViewCommonDataDictionary(inputParams) {\n    return {\n      label: 'View',\n      expression: '${view.api}',\n      icon: 'd-icon-file_o',\n      expanded: true,\n      children: [...(isEmpty(inputParams) ? [] : [{\n        label: 'Input parameters',\n        expanded: true,\n        children: inputParams.filter(param => param.name).map(param => ({\n          label: param.name,\n          expression: `$\\{view.inputParams.${param.name}}`,\n          icon: 'd-icon-arrow_right_square_input'\n        }))\n      }]), {\n        label: 'Properties',\n        expanded: true,\n        children: [{\n          label: 'Is valid',\n          expression: '${view.isValid}',\n          icon: 'd-icon-arrow_right_square_input'\n        }]\n      }]\n    };\n  }\n  isTargetRecordDefinitionChanged(previousTargetExtensionContainerGuid, currentTargetExtensionContainerGuid) {\n    return this.targetViewDefinition$.pipe(map$1(viewDefinition => {\n      const previousTargetRecordDefinitionName = this.getTargetRecordDefinitionName(viewDefinition, previousTargetExtensionContainerGuid);\n      const currentTargetRecordDefinitionName = this.getTargetRecordDefinitionName(viewDefinition, currentTargetExtensionContainerGuid);\n      return previousTargetRecordDefinitionName !== currentTargetRecordDefinitionName;\n    }));\n  }\n  getTargetRecordDefinitionName(viewDefinition, targetExtensionContainerGuid) {\n    const targetRecordEditor = this.rxViewDefinitionParserService.findParentComponentDefinition(viewDefinition, {\n      guid: targetExtensionContainerGuid\n    }, definition => definition.type === RxViewComponentType.RecordEditor);\n    return targetRecordEditor === null || targetRecordEditor === void 0 ? void 0 : targetRecordEditor.propertiesByName.recordDefinitionName;\n  }\n}\nRxViewModel.ɵfac = function RxViewModel_Factory(t) {\n  return new (t || RxViewModel)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(ViewDesignerFacade), i0.ɵɵinject(i2$1.RxStringService), i0.ɵɵinject(i3.RxOverlayService), i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(i3.RxBundleCacheService), i0.ɵɵinject(i5$1.RxModalService), i0.ɵɵinject(i5.RxViewDefinitionCacheService), i0.ɵɵinject(i5.RxViewDefinitionParserService), i0.ɵɵinject(i2$1.RxGuidService), i0.ɵɵinject(ViewDesignerDispatcher), i0.ɵɵinject(i3.RxDefinitionNameService), i0.ɵɵinject(RxViewExpressionValidatorService));\n};\nRxViewModel.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewModel,\n  factory: RxViewModel.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewModel, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: ViewDesignerFacade\n    }, {\n      type: i2$1.RxStringService\n    }, {\n      type: i3.RxOverlayService\n    }, {\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: i3.RxBundleCacheService\n    }, {\n      type: i5$1.RxModalService\n    }, {\n      type: i5.RxViewDefinitionCacheService\n    }, {\n      type: i5.RxViewDefinitionParserService\n    }, {\n      type: i2$1.RxGuidService\n    }, {\n      type: ViewDesignerDispatcher\n    }, {\n      type: i3.RxDefinitionNameService\n    }, {\n      type: RxViewExpressionValidatorService\n    }];\n  }, null);\n})();\n\n/* tslint:disable:variable-name */\nconst ViewDesignerCanvasItemApiToken = new InjectionToken('CanvasItemApi');\nclass CanvasItemApi {\n  constructor() {\n    this.core = null;\n  }\n  registerCoreApi(apiObject) {\n    this.core = apiObject;\n  }\n}\nCanvasItemApi.ɵfac = function CanvasItemApi_Factory(t) {\n  return new (t || CanvasItemApi)();\n};\nCanvasItemApi.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CanvasItemApi,\n  factory: CanvasItemApi.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasItemApi, [{\n    type: Injectable\n  }], null, null);\n})();\nclass DropComponentData {\n  constructor(data, targetGuid, outletName, insertIndex) {\n    this.data = data;\n    this.targetGuid = targetGuid;\n    this.outletName = outletName;\n    this.insertIndex = insertIndex;\n  }\n}\nclass ViewDesignerCanvasService {\n  constructor() {\n    this.componentSelectSubject = new ReplaySubject();\n    this.componentRemoveSubject = new ReplaySubject();\n    this.componentDropSubject = new ReplaySubject();\n    this.componentDrop$ = this.componentDropSubject.asObservable();\n    this.componentSelect$ = this.componentSelectSubject.asObservable();\n    this.componentRemove$ = this.componentRemoveSubject.asObservable();\n  }\n  selectComponent(guid) {\n    this.componentSelectSubject.next(guid);\n  }\n  removeComponent(guid) {\n    this.componentRemoveSubject.next(guid);\n  }\n  dropComponent(data, targetGuid, outletName, insertIndex) {\n    this.componentDropSubject.next(new DropComponentData(data, targetGuid, outletName, insertIndex));\n  }\n}\nViewDesignerCanvasService.ɵfac = function ViewDesignerCanvasService_Factory(t) {\n  return new (t || ViewDesignerCanvasService)();\n};\nViewDesignerCanvasService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewDesignerCanvasService,\n  factory: ViewDesignerCanvasService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerCanvasService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass CanvasItemComponent {\n  constructor(injector, renderer, canvasItemApi, viewDesignerCanvasService) {\n    this.injector = injector;\n    this.renderer = renderer;\n    this.canvasItemApi = canvasItemApi;\n    this.viewDesignerCanvasService = viewDesignerCanvasService;\n    this.interactive = true;\n    this.childContainers = new Map();\n  }\n  ngOnInit() {\n    this.initializeItemApi();\n  }\n  ngOnChanges(changes) {\n    const layoutChange = changes.layout;\n    if (layoutChange) {\n      const prevGuid = get(layoutChange, 'previousValue.guid');\n      const currGuid = get(layoutChange, 'currentValue.guid');\n      const prevOutlets = get(layoutChange, 'previousValue.outlets');\n      const currOutlets = get(layoutChange, 'currentValue.outlets');\n      if (prevGuid !== currGuid) {\n        if (this.componentReference) {\n          this.cleanUp();\n        }\n        this.renderViewComponent();\n      } else if (!isEqual(prevOutlets, currOutlets)) {\n        currOutlets.forEach(outlet => {\n          const ref = this.childContainers.get(outlet.name);\n          if (ref) {\n            ref.instance.outlet = outlet;\n            ref.instance.layout = this.layout;\n          }\n        });\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.cleanUp();\n  }\n  cleanUp() {\n    this.componentReference.destroy();\n    this.childContainers.clear();\n  }\n  registerOutlet(outletName, outletViewContainerRef, containerFactory) {\n    const currentOutlet = this.layout.outlets.find(outlet => outlet.name === outletName);\n    const componentRef = this.renderContainerComponent(outletViewContainerRef, currentOutlet, containerFactory);\n    this.childContainers.set(outletName, componentRef);\n    return componentRef;\n  }\n  onSelectComponent(event) {\n    if (this.interactive) {\n      event.stopPropagation();\n      this.viewDesignerCanvasService.selectComponent(this.layout.guid);\n    }\n  }\n  dropComponent(transferData, insertIndex, outletName = RX_VIEW_DEFINITION.defaultOutletName) {\n    this.viewDesignerCanvasService.dropComponent(transferData, this.layout.guid, outletName, insertIndex);\n  }\n  initializeItemApi() {\n    this.canvasItemApi.registerCoreApi({\n      dropComponent: this.dropComponent.bind(this),\n      registerOutlet: this.registerOutlet.bind(this)\n    });\n  }\n  renderViewComponent() {\n    this.componentReference = this.container.createComponent(this.layout.factory, null, this.injector);\n    const instance = this.componentReference.instance;\n    const nativeElement = this.componentReference.location.nativeElement;\n    instance.guid = this.layout.guid;\n    instance.model = this.layout.model;\n    instance.isReadOnly = this.isReadOnly;\n    this.renderer.setAttribute(nativeElement, 'rx-view-component-id', this.layout.guid);\n  }\n  renderContainerComponent(outletViewContainerRef, outlet, containerFactory) {\n    const containerRef = outletViewContainerRef.createComponent(containerFactory);\n    containerRef.instance.outlet = outlet;\n    containerRef.instance.layout = this.layout;\n    containerRef.instance.isReadOnly = this.isReadOnly;\n    return containerRef;\n  }\n}\nCanvasItemComponent.ɵfac = function CanvasItemComponent_Factory(t) {\n  return new (t || CanvasItemComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ViewDesignerCanvasItemApiToken), i0.ɵɵdirectiveInject(ViewDesignerCanvasService));\n};\nCanvasItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CanvasItemComponent,\n  selectors: [[\"rx-canvas-item\"]],\n  viewQuery: function CanvasItemComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  inputs: {\n    layout: \"layout\",\n    interactive: \"interactive\",\n    isReadOnly: \"isReadOnly\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ViewDesignerCanvasItemApiToken,\n    useClass: CanvasItemApi\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"hidden\", \"click\"], [\"container\", \"\"]],\n  template: function CanvasItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function CanvasItemComponent_Template_div_click_0_listener($event) {\n        return ctx.onSelectComponent($event);\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementContainer(2, null, 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"hidden\", i0.ɵɵpipeBind1(1, 1, ctx.layout == null ? null : ctx.layout.model == null ? null : ctx.layout.model.hiddenOnCanvas$));\n    }\n  },\n  pipes: [i4.AsyncPipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-canvas-item',\n      templateUrl: './canvas-item.component.html',\n      providers: [{\n        provide: ViewDesignerCanvasItemApiToken,\n        useClass: CanvasItemApi\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ViewDesignerCanvasItemApiToken]\n      }]\n    }, {\n      type: ViewDesignerCanvasService\n    }];\n  }, {\n    layout: [{\n      type: Input\n    }],\n    interactive: [{\n      type: Input\n    }],\n    isReadOnly: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\nclass ViewDesignerCanvasComponent {\n  constructor(viewDesignerCanvasService) {\n    this.viewDesignerCanvasService = viewDesignerCanvasService;\n    this.componentSelect = new EventEmitter();\n    this.componentDrop = new EventEmitter();\n    this.componentRemove = new EventEmitter();\n    this.beforeComponentDropInRoot = new EventEmitter();\n  }\n  ngOnInit() {\n    this.viewDesignerCanvasService.componentSelect$.subscribe(event => {\n      this.componentSelect.emit(event);\n    });\n    this.viewDesignerCanvasService.componentRemove$.subscribe(event => {\n      this.componentRemove.emit(event);\n    });\n    this.viewDesignerCanvasService.componentDrop$.subscribe(event => {\n      this.componentDrop.emit(event);\n    });\n  }\n}\nViewDesignerCanvasComponent.ɵfac = function ViewDesignerCanvasComponent_Factory(t) {\n  return new (t || ViewDesignerCanvasComponent)(i0.ɵɵdirectiveInject(ViewDesignerCanvasService));\n};\nViewDesignerCanvasComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ViewDesignerCanvasComponent,\n  selectors: [[\"rx-view-designer-canvas\"]],\n  inputs: {\n    layout: \"layout\",\n    isReadOnly: \"isReadOnly\"\n  },\n  outputs: {\n    componentSelect: \"componentSelect\",\n    componentDrop: \"componentDrop\",\n    componentRemove: \"componentRemove\",\n    beforeComponentDropInRoot: \"beforeComponentDropInRoot\"\n  },\n  features: [i0.ɵɵProvidersFeature([ViewDesignerCanvasService])],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"root-item\", 3, \"layout\", \"isReadOnly\", 4, \"ngIf\"], [1, \"root-item\", 3, \"layout\", \"isReadOnly\"]],\n  template: function ViewDesignerCanvasComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ViewDesignerCanvasComponent_rx_canvas_item_0_Template, 1, 2, \"rx-canvas-item\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.layout);\n    }\n  },\n  directives: [i4.NgIf, CanvasItemComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerCanvasComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-designer-canvas',\n      templateUrl: './view-designer-canvas.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [ViewDesignerCanvasService]\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerCanvasService\n    }];\n  }, {\n    layout: [{\n      type: Input\n    }],\n    isReadOnly: [{\n      type: Input\n    }],\n    componentSelect: [{\n      type: Output\n    }],\n    componentDrop: [{\n      type: Output\n    }],\n    componentRemove: [{\n      type: Output\n    }],\n    beforeComponentDropInRoot: [{\n      type: Output\n    }]\n  });\n})();\nclass CanvasOutletHelperService {\n  constructor() {\n    this.beforeViewComponentDropSubject = new ReplaySubject();\n    this.beforeViewComponentDrop$ = this.beforeViewComponentDropSubject.asObservable();\n  }\n  setBeforeViewComponentDropState(viewComponentDropData) {\n    this.beforeViewComponentDropSubject.next(viewComponentDropData);\n  }\n  canBeDropped(data) {\n    let canBeInsertedInto = true;\n    if (isFunction(data.draggedViewComponentDescriptor.canBeInsertedInto)) {\n      canBeInsertedInto = data.draggedViewComponentDescriptor.canBeInsertedInto(data.dropTargetViewComponentWithParents.map(component => component.type));\n    }\n    if (canBeInsertedInto) {\n      canBeInsertedInto = (!data.draggedViewComponentGuid || !this._isParentRecordEditorChanging(this.containerComponentInstance['layout'].viewComponentWithParents, data.draggedViewComponentParents)) && this.componentDropPredicate(data);\n    }\n    return canBeInsertedInto;\n  }\n  componentDropPredicate(data, skipPredicate = false) {\n    return (skipPredicate || this.dropPredicate(data)) && (!this.parentOutletComponent || this.parentOutletComponent.componentDropPredicate(data, this.skipParentPredicate));\n  }\n  _isParentRecordEditorChanging(targetContainerParentComponents, sourceComponentParentComponents) {\n    const targetRecordEditor = find(targetContainerParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n    const sourceRecordEditor = find(sourceComponentParentComponents, {\n      type: RxViewComponentType.RecordEditor\n    });\n    const isMovingBetweenRecordEditors = Boolean(targetRecordEditor) && Boolean(sourceRecordEditor) && targetRecordEditor.guid !== sourceRecordEditor.guid;\n    const isDroppingOutsideRecordEditor = !targetRecordEditor && Boolean(sourceRecordEditor);\n    const isDroppingInsideRecordEditor = !sourceRecordEditor && Boolean(targetRecordEditor);\n    return isMovingBetweenRecordEditors || isDroppingOutsideRecordEditor || isDroppingInsideRecordEditor;\n  }\n}\nCanvasOutletHelperService.ɵfac = function CanvasOutletHelperService_Factory(t) {\n  return new (t || CanvasOutletHelperService)();\n};\nCanvasOutletHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CanvasOutletHelperService,\n  factory: CanvasOutletHelperService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasOutletHelperService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass CanvasItemColumnComponent {\n  constructor(viewDesignerCanvasService, canvasOutletHelperService) {\n    this.viewDesignerCanvasService = viewDesignerCanvasService;\n    this.canvasOutletHelperService = canvasOutletHelperService;\n    this.dropListDropped = new EventEmitter();\n    this.dropListEnterPredicateBind = throttle(this.dropListEnterPredicate.bind(this), 200);\n  }\n  ngOnInit() {\n    this.dropListOrientation = this.canvasOutletHelperService.dropListOrientation;\n  }\n  getViewComponentDragData(layout) {\n    return {\n      draggedViewComponentGuid: layout.guid,\n      draggedViewComponentDescriptor: layout.descriptor,\n      draggedViewComponentParents: this.layout.viewComponentWithParents\n    };\n  }\n  onDragEntered(event) {\n    this.enforceDragToSelf(event.container);\n  }\n  onDragStarted(event) {\n    this.enforceDragToSelf(event.source.dropContainer);\n  }\n  remove(event, layout) {\n    event.stopPropagation();\n    this.viewDesignerCanvasService.removeComponent(layout.guid);\n  }\n  onSelectComponent(event, layout) {\n    event.stopPropagation();\n    this.viewDesignerCanvasService.selectComponent(layout.guid);\n  }\n  trackByFn(index, item) {\n    return item.guid;\n  }\n  dropListEnterPredicate(event) {\n    return this.canvasOutletHelperService.canBeDropped(Object.assign(Object.assign({}, event.data), {\n      dropTargetViewComponentWithParents: this.layout.viewComponentWithParents || []\n    }));\n  }\n  // todo remove after\n  // https://github.com/angular/components/issues/16671\n  // will be fixed\n  enforceDragToSelf(dropList) {\n    let siblings = dropList.connectedTo;\n    siblings = siblings.reduce((result, item) => {\n      if (isString(item)) {\n        const listInstance = CdkDropList['_dropLists'].find(list => list.id === item);\n        if (listInstance) {\n          result.push(listInstance);\n        }\n      }\n      return result;\n    }, []);\n    const dropListRef = dropList._dropListRef;\n    asapScheduler.schedule(() => {\n      dropListRef.connectedTo(siblings.map(list => list._dropListRef));\n    });\n  }\n}\nCanvasItemColumnComponent.ɵfac = function CanvasItemColumnComponent_Factory(t) {\n  return new (t || CanvasItemColumnComponent)(i0.ɵɵdirectiveInject(ViewDesignerCanvasService), i0.ɵɵdirectiveInject(CanvasOutletHelperService));\n};\nCanvasItemColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CanvasItemColumnComponent,\n  selectors: [[\"rx-canvas-item-column\"]],\n  inputs: {\n    isReadOnly: \"isReadOnly\",\n    colIndex: \"colIndex\",\n    column: \"column\",\n    layout: \"layout\"\n  },\n  outputs: {\n    dropListDropped: \"dropListDropped\"\n  },\n  decls: 2,\n  vars: 9,\n  consts: [[\"cdkDropList\", \"\", 3, \"cdkDropListOrientation\", \"cdkDropListConnectedTo\", \"cdkDropListEnterPredicate\", \"cdkDropListData\", \"id\", \"cdkDropListDropped\"], [\"cdkDrag\", \"\", 3, \"class\", \"cdkDragData\", \"cdkDragDisabled\", \"cdkDragEntered\", \"cdkDragStarted\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"cdkDrag\", \"\", 3, \"cdkDragData\", \"cdkDragDisabled\", \"cdkDragEntered\", \"cdkDragStarted\"], [1, \"canvas-item\", 3, \"click\"], [\"cdkDragHandle\", \"\", 1, \"canvas-item-header\", 3, \"hidden\"], [1, \"icon\", \"d-icon-dots\", \"mr-1\"], [1, \"label\"], [\"class\", \"remove-button btn btn-sm btn-link d-icon-cross_adapt p-0 px-1\", \"type\", \"button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"layout\", \"isReadOnly\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"remove-button\", \"btn\", \"btn-sm\", \"btn-link\", \"d-icon-cross_adapt\", \"p-0\", \"px-1\", 3, \"click\"]],\n  template: function CanvasItemColumnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function CanvasItemColumnComponent_Template_div_cdkDropListDropped_0_listener($event) {\n        return ctx.dropListDropped.next($event);\n      });\n      i0.ɵɵtemplate(1, CanvasItemColumnComponent_div_1_Template, 10, 16, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"cdkDropListOrientation\", ctx.dropListOrientation)(\"cdkDropListConnectedTo\", ctx.column.dndListIds)(\"cdkDropListEnterPredicate\", ctx.dropListEnterPredicateBind)(\"cdkDropListData\", i0.ɵɵpureFunction1(7, _c1, ctx.colIndex))(\"id\", ctx.column.listId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.column.children)(\"ngForTrackBy\", ctx.trackByFn);\n    }\n  },\n  directives: [i4$1.CdkDropList, i4.NgForOf, i4$1.CdkDrag, i4$1.CdkDragHandle, i4.NgIf, CanvasItemComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}[_nghost-%COMP%]{display:block}.cdk-drop-list[_ngcontent-%COMP%]{min-height:100px}.cdk-drop-list[_ngcontent-%COMP%] > .cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:.5}.card-header[_ngcontent-%COMP%]{cursor:move}.canvas-item-wrapper.cdk-drag-preview[_ngcontent-%COMP%]{background:white;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.canvas-item[_ngcontent-%COMP%]{border:1px solid transparent;position:relative;padding:3px}.canvas-item.active[_ngcontent-%COMP%]{border-color:#20c997}.canvas-item-header[_ngcontent-%COMP%]{color:#fff;position:absolute;top:0;right:0;padding:1px 0 1px 5px;background:#20c997;cursor:move;z-index:1;display:flex}.canvas-item-header[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{white-space:nowrap}.remove-button[_ngcontent-%COMP%]{color:#fff}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasItemColumnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-canvas-item-column',\n      templateUrl: './canvas-item-column.component.html',\n      styleUrls: ['./canvas-item-column.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerCanvasService\n    }, {\n      type: CanvasOutletHelperService\n    }];\n  }, {\n    isReadOnly: [{\n      type: Input\n    }],\n    colIndex: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    dropListDropped: [{\n      type: Output\n    }]\n  });\n})();\nclass CanvasItemContainerComponent {\n  constructor(canvasItemApi, canvasOutletHelperService) {\n    this.canvasItemApi = canvasItemApi;\n    this.canvasOutletHelperService = canvasOutletHelperService;\n  }\n  trackByColFn(index, item) {\n    return item.listId;\n  }\n  onDropListDropped(event) {\n    const viewComponentDropData = Object.assign(Object.assign({}, event.item.data), {\n      initialPropertiesByName: {},\n      columnIndex: event.container.data.columnIndex\n    });\n    this.canvasOutletHelperService.setBeforeViewComponentDropState(viewComponentDropData);\n    if (!viewComponentDropData.preventDrop) {\n      this.canvasItemApi.core.dropComponent(viewComponentDropData, event.currentIndex, this.outlet.name);\n    }\n  }\n}\nCanvasItemContainerComponent.ɵfac = function CanvasItemContainerComponent_Factory(t) {\n  return new (t || CanvasItemContainerComponent)(i0.ɵɵdirectiveInject(ViewDesignerCanvasItemApiToken), i0.ɵɵdirectiveInject(CanvasOutletHelperService));\n};\nCanvasItemContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CanvasItemContainerComponent,\n  selectors: [[\"rx-canvas-item-container\"]],\n  inputs: {\n    outlet: \"outlet\",\n    isReadOnly: \"isReadOnly\",\n    layout: \"layout\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"row\"], [3, \"class\", \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\"], [3, \"ngClass\", \"isReadOnly\", \"colIndex\", \"column\", \"layout\", \"dropListDropped\"]],\n  template: function CanvasItemContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CanvasItemContainerComponent_div_1_Template, 2, 13, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.outlet.columns)(\"ngForTrackBy\", ctx.trackByColFn);\n    }\n  },\n  directives: [i4.NgForOf, i4.NgClass, CanvasItemColumnComponent],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.col-border[_ngcontent-%COMP%]{border-right:1px dashed #d6d7d8}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasItemContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-canvas-item-container',\n      templateUrl: './canvas-item-container.component.html',\n      styleUrls: ['./canvas-item-container.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: CanvasItemApi,\n      decorators: [{\n        type: Inject,\n        args: [ViewDesignerCanvasItemApiToken]\n      }]\n    }, {\n      type: CanvasOutletHelperService\n    }];\n  }, {\n    outlet: [{\n      type: Input\n    }],\n    isReadOnly: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }]\n  });\n})();\nclass CanvasOutletComponent {\n  constructor(canvasItemApi, parentOutletComponent, canvasOutletHelperService, componentFactoryResolver) {\n    this.canvasItemApi = canvasItemApi;\n    this.parentOutletComponent = parentOutletComponent;\n    this.canvasOutletHelperService = canvasOutletHelperService;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.containerComponentInstance = null;\n    this.destroyed$ = new ReplaySubject(1);\n    this.name = RX_VIEW_DEFINITION.defaultOutletName;\n    this.skipParentPredicate = false;\n    this.dropListOrientation = 'vertical';\n    this.beforeViewComponentDrop = new EventEmitter();\n    this.dropPredicate = () => true;\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n  ngOnInit() {\n    this.containerComponentInstance = this.canvasItemApi.core.registerOutlet(this.name, this.container, this.componentFactoryResolver.resolveComponentFactory(this.containerComponent || CanvasItemContainerComponent)).instance;\n    this.canvasOutletHelperService.dropListOrientation = this.dropListOrientation;\n    this.canvasOutletHelperService.parentOutletComponent = this.parentOutletComponent;\n    this.canvasOutletHelperService.dropPredicate = this.dropPredicate;\n    this.canvasOutletHelperService.skipParentPredicate = this.skipParentPredicate;\n    this.canvasOutletHelperService.containerComponentInstance = this.containerComponentInstance;\n    this.canvasOutletHelperService.beforeViewComponentDrop$.pipe(takeUntil(this.destroyed$)).subscribe(event => {\n      this.beforeViewComponentDrop.emit(event);\n    });\n  }\n  canBeDropped(data) {\n    return this.canvasOutletHelperService.canBeDropped(data);\n  }\n  componentDropPredicate(data, skipPredicate = false) {\n    return this.canvasOutletHelperService.componentDropPredicate(data, skipPredicate);\n  }\n}\nCanvasOutletComponent.ɵfac = function CanvasOutletComponent_Factory(t) {\n  return new (t || CanvasOutletComponent)(i0.ɵɵdirectiveInject(ViewDesignerCanvasItemApiToken), i0.ɵɵdirectiveInject(CanvasOutletComponent, 12), i0.ɵɵdirectiveInject(CanvasOutletHelperService), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\nCanvasOutletComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CanvasOutletComponent,\n  selectors: [[\"rx-canvas-outlet\"]],\n  viewQuery: function CanvasOutletComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    skipParentPredicate: \"skipParentPredicate\",\n    containerComponent: \"containerComponent\",\n    dropListOrientation: \"dropListOrientation\",\n    dropPredicate: \"dropPredicate\"\n  },\n  outputs: {\n    beforeViewComponentDrop: \"beforeViewComponentDrop\"\n  },\n  features: [i0.ɵɵProvidersFeature([CanvasOutletHelperService])],\n  decls: 2,\n  vars: 0,\n  consts: [[\"container\", \"\"]],\n  template: function CanvasOutletComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, null, 0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasOutletComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-canvas-outlet',\n      templateUrl: './canvas-outlet.component.html',\n      providers: [CanvasOutletHelperService]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ViewDesignerCanvasItemApiToken]\n      }]\n    }, {\n      type: CanvasOutletComponent,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: CanvasOutletHelperService\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    skipParentPredicate: [{\n      type: Input\n    }],\n    containerComponent: [{\n      type: Input\n    }],\n    dropListOrientation: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    beforeViewComponentDrop: [{\n      type: Output\n    }],\n    dropPredicate: [{\n      type: Input\n    }]\n  });\n})();\nclass DesignerComponent {\n  constructor(canvasItemComponent, viewDesignerCanvasComponent) {\n    this.canvasItemComponent = canvasItemComponent;\n    this.viewDesignerCanvasComponent = viewDesignerCanvasComponent;\n    this.defaultOutletName = RX_VIEW_DEFINITION.defaultOutletName;\n  }\n  trackByFn(index, item) {\n    return item.name;\n  }\n}\nDesignerComponent.ɵfac = function DesignerComponent_Factory(t) {\n  return new (t || DesignerComponent)(i0.ɵɵdirectiveInject(CanvasItemComponent), i0.ɵɵdirectiveInject(ViewDesignerCanvasComponent));\n};\nDesignerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DesignerComponent,\n  selectors: [[\"rx-designer\"]],\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"border\", \"default-outlet\", \"name\", \"beforeViewComponentDrop\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"name\", \"beforeViewComponentDrop\"]],\n  template: function DesignerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DesignerComponent_rx_canvas_outlet_0_Template, 1, 5, \"rx-canvas-outlet\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.canvasItemComponent.layout.outlets)(\"ngForTrackBy\", ctx.trackByFn);\n    }\n  },\n  directives: [i4.NgForOf, CanvasOutletComponent],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}rx-canvas-outlet[_ngcontent-%COMP%]{display:block}rx-canvas-outlet.default-outlet[_ngcontent-%COMP%]:not(:only-child)    >rx-canvas-item-container>.row>*>rx-canvas-item-column>.cdk-drop-list{min-height:300px}rx-canvas-outlet.default-outlet[_ngcontent-%COMP%]:only-child    >rx-canvas-item-container>.row>*>rx-canvas-item-column>.cdk-drop-list{min-height:calc(100vh - 155px)}rx-canvas-outlet.border[_ngcontent-%COMP%]{border:1px solid #d6d7d8}rx-canvas-outlet[_ngcontent-%COMP%] + rx-canvas-outlet[_ngcontent-%COMP%]{margin-top:10px}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DesignerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-designer',\n      templateUrl: './designer.component.html',\n      styleUrls: ['./designer.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: CanvasItemComponent\n    }, {\n      type: ViewDesignerCanvasComponent\n    }];\n  }, null);\n})();\nclass RxViewDesignerHelperService {\n  constructor(viewDesignerFacade, rxViewComponentRegistryService, componentFactoryResolver, viewDesignerModels) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.viewDesignerModels = viewDesignerModels;\n    this.designerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DesignerComponent);\n    this.canvasDndListIds = [];\n    this.extensionViewAllowedComponentTypes = new Set([RxViewComponentType.Container, RxViewComponentType.RichText, RxViewComponentType.RecordEditor, RxViewComponentType.Character, RxViewComponentType.Textarea, RxViewComponentType.Boolean, RxViewComponentType.Date, RxViewComponentType.DateTime, RxViewComponentType.Time, RxViewComponentType.Decimal, RxViewComponentType.Floating, RxViewComponentType.Integer, RxViewComponentType.LocalizedCharacter, RxViewComponentType.Selection, RxViewComponentType.SelectGroup, RxViewComponentType.RichTextarea, BwfViewComponentType.DynamicNamedList]);\n    this.canvasLayout$ = this.getRecursiveViewLayoutGuids().pipe(switchMap(guids => guids.length ? this.viewDesignerFacade.areViewModelsReady$.pipe(\n    // Wait until component models will be instantiated after save view definition.\n    filter(Boolean), switchMapTo(this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1)))) : this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))), map$1(designModelState => {\n      const viewModel = designModelState.viewDesignModel;\n      const componentModels = designModelState.viewComponentDesignModels;\n      this.canvasDndListIds.length = 0;\n      return {\n        guid: viewModel.guid,\n        factory: this.designerComponentFactory,\n        outlets: viewModel.layout.outlets.map(outlet => ({\n          name: outlet.name,\n          columns: outlet.columns.map((column, i) => {\n            const listId = String(`${viewModel.guid}-${outlet.name}-${i}`);\n            // do not allow components to be dropped in the root of a SHELL view\n            if (viewModel.type !== ViewDefinitionType.Shell) {\n              this.canvasDndListIds.push(listId);\n            }\n            return Object.assign(Object.assign({}, column), {\n              children: column.children.map(childGuid => this.initializeCanvasItem(childGuid, componentModels, this.canvasDndListIds)),\n              listId,\n              dndListIds: this.canvasDndListIds\n            });\n          })\n        })),\n        model: null,\n        descriptor: null,\n        isSelected$: of(false)\n      };\n    }), tap(() => {\n      // required for DND\n      // https://github.com/angular/components/issues/16671\n      this.canvasDndListIds.reverse();\n    }));\n    this.viewBreadcrumbItem$ = this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(concatMap(displayName => of(displayName ? displayName === RX_APPLICATION.shellDefinitionName ? 'Application shell' : displayName : '<New view>')), withLatestFrom(this.viewDesignerFacade.viewModelGuid$), map$1(([viewBreadcrumbLabel, guid]) => ({\n      label: viewBreadcrumbLabel,\n      data: {\n        guid\n      }\n    })));\n    this.selectedComponentBreadcrumbItems$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(switchMap(componentGuid => componentGuid ? combineLatest([this.viewDesignerFacade.breadcrumbs$, this.viewDesignerFacade.getParentComponentGuid(componentGuid)]).pipe(withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([[breadcrumbs], viewComponentModels]) =>\n    // Handle empty viewComponentModels state during view definition save.\n    isEmpty(viewComponentModels) ? [] : findAllParentComponentGuids(componentGuid, viewComponentModels).map(parentGuid => {\n      let label = breadcrumbs[parentGuid];\n      if (!label) {\n        const component = viewComponentModels[parentGuid];\n        const descriptor = this.rxViewComponentRegistryService.get(component.type);\n        label = descriptor.name;\n      }\n      return {\n        label,\n        data: {\n          guid: parentGuid\n        }\n      };\n    }))) : of([])));\n    this.breadcrumbItems$ = combineLatest([this.viewBreadcrumbItem$, this.selectedComponentBreadcrumbItems$]).pipe(map$1(([viewItem, componentItems]) => [viewItem, ...componentItems]));\n    this.validationIssues$ = this.viewDesignerFacade.validationIssues$.pipe(withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$), map$1(([validationIssuesState, modelState]) => flow(state => mergeWith(Object.assign({}, state.issues), state.expressionIssues, (issues = [], expressionIssues = []) => issues.concat(expressionIssues)), issuesByComponentGuid => reduce(issuesByComponentGuid, (result, issues, guid) => {\n      var _a;\n      let name;\n      if (((_a = modelState.viewDesignModel) === null || _a === void 0 ? void 0 : _a.guid) === guid) {\n        name = modelState.viewDesignModel.displayName || 'View designer';\n      } else if (modelState.viewComponentDesignModels[guid]) {\n        const type = modelState.viewComponentDesignModels[guid].type;\n        const descriptor = this.rxViewComponentRegistryService.get(type);\n        name = descriptor && descriptor.name;\n      }\n      if (name) {\n        result.push({\n          title: name,\n          issues: issues.map(issue => ({\n            type: issue.type,\n            description: issue.description,\n            disableCorrection: issue.disableCorrection,\n            data: {\n              guid,\n              propertyName: issue.propertyName,\n              data: issue.data\n            }\n          }))\n        });\n      }\n      return result;\n    }, []))(validationIssuesState)));\n  }\n  getLicensedComponents() {\n    return this.rxViewComponentRegistryService.getLicensedComponents().pipe(first(), map$1(components => components.filter(component => !this.rxViewComponentRegistryService.isDataComponentDescriptor(component) && !component.hidden && !component.isPageComponent)));\n  }\n  getRecursiveViewLayoutGuids() {\n    return this.viewDesignerFacade.getViewPropertyValue('layout').pipe(switchMap(layout => this.getRecursiveComponentLayoutGuids(layout)));\n  }\n  getRecursiveComponentLayoutGuids(layout) {\n    const guids = RxViewLayout.getViewLayoutChildGuids(layout);\n    return guids.length ? combineLatest(guids.map(guid => this.viewDesignerFacade.getComponentLayout(guid).pipe(switchMap(childLayout => childLayout ? this.getRecursiveComponentLayoutGuids(childLayout).pipe(map$1(childGuids => [...childGuids, ...guids])) : of(guids))))) : of([]);\n  }\n  initializeCanvasItem(componentGuid, componentModels, dndListIds) {\n    const componentModel = componentModels[componentGuid];\n    const descriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n    const canvasLayout = {\n      guid: componentModel.guid,\n      descriptor,\n      factory: descriptor.designComponentFactory,\n      model: this.viewDesignerModels.get(componentModel.guid),\n      outlets: [],\n      isSelected$: this.viewDesignerFacade.selectedComponentGuid$.pipe(map$1(guid => guid === componentModel.guid)),\n      label: descriptor.name\n    };\n    if (componentModel.layout) {\n      canvasLayout.viewComponentWithParents = findAllParentComponentGuids(componentModel.guid, componentModels).map(guid => ({\n        guid,\n        type: componentModels[guid].type\n      }));\n      componentModel.layout.outlets.forEach(outlet => {\n        const canvasOutlet = {\n          name: outlet.name,\n          columns: outlet.columns.map((column, i) => {\n            const listId = `${componentModel.guid}-${outlet.name}-${i}`;\n            dndListIds.push(listId);\n            return {\n              children: column.children.map(childGuid => this.initializeCanvasItem(childGuid, componentModels, dndListIds)),\n              span: column.span,\n              listId,\n              dndListIds\n            };\n          })\n        };\n        canvasLayout.outlets.push(canvasOutlet);\n      });\n    }\n    return canvasLayout;\n  }\n}\nRxViewDesignerHelperService.ɵfac = function RxViewDesignerHelperService_Factory(t) {\n  return new (t || RxViewDesignerHelperService)(i0.ɵɵinject(ViewDesignerFacade), i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(RxViewDesignerModels));\n};\nRxViewDesignerHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDesignerHelperService,\n  factory: RxViewDesignerHelperService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerHelperService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }, {\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: RxViewDesignerModels\n    }];\n  }, null);\n})();\nconst RX_VIEW_DESIGNER = {\n  stencilGroups: {\n    basicComponents: {\n      label: 'Basic components'\n    },\n    chatbotComponents: {\n      label: 'Chatbot components'\n    },\n    recordEditorInputs: {\n      label: 'Record editor inputs'\n    }\n  },\n  inspectorTabs: {\n    viewProperties: {\n      tabId: 0\n    },\n    componentProperties: {\n      tabId: 1\n    },\n    validationIssues: {\n      tabId: 2\n    }\n  }\n};\nclass ViewDesignerPaletteComponent {\n  constructor(stringService) {\n    this.stringService = stringService;\n    this.allowedDropListIds = [];\n    this.filterFormControl = new FormControl();\n    this.componentsSubject$ = new ReplaySubject(1);\n  }\n  set components(value) {\n    this.componentsSubject$.next(value);\n  }\n  ngOnInit() {\n    this.viewComponentGroups$ = combineLatest([this.filterFormControl.valueChanges.pipe(debounceTime(200), startWith(null)), this.componentsSubject$]).pipe(map$1(([componentNameFilterText, viewComponentDescriptors]) => flow(descriptors => groupBy(descriptors, component => component.group), groupsByName => map(groupsByName, (components, groupName) => ({\n      name: groupName,\n      components: sortBy(components, component => isFinite(component.index) ? component.index : component.name)\n    })), groups => sortBy(groups, group => {\n      if (group.name === RX_VIEW_DESIGNER.stencilGroups.basicComponents.label) {\n        return '1';\n      } else if (group.name === RX_VIEW_DESIGNER.stencilGroups.recordEditorInputs.label) {\n        return '2';\n      } else {\n        return '3' + lowerCase(group.name);\n      }\n    }), groups => componentNameFilterText ? groups.map(group => Object.assign(Object.assign({}, group), {\n      components: group.components.filter(component => this.stringService.caseInsensitiveSearch(component.name, componentNameFilterText))\n    })).filter(group => group.components.length) : groups)(viewComponentDescriptors)));\n  }\n  getViewComponentDragData(descriptor) {\n    return {\n      draggedViewComponentDescriptor: descriptor\n    };\n  }\n  trackByNameFn(index, item) {\n    return item.name;\n  }\n  ngOnDestroy() {\n    this.componentsSubject$.complete();\n  }\n}\nViewDesignerPaletteComponent.ɵfac = function ViewDesignerPaletteComponent_Factory(t) {\n  return new (t || ViewDesignerPaletteComponent)(i0.ɵɵdirectiveInject(i2$1.RxStringService));\n};\nViewDesignerPaletteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ViewDesignerPaletteComponent,\n  selectors: [[\"rx-view-designer-palette\"]],\n  inputs: {\n    components: \"components\",\n    allowedDropListIds: \"allowedDropListIds\"\n  },\n  decls: 5,\n  vars: 9,\n  consts: [[1, \"search-field-container\"], [\"rx-id\", \"stencil-search-field\", \"placeholder\", \"Search\", 3, \"formControl\"], [3, \"config\"], [3, \"title\", \"isOpen\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"title\", \"isOpen\"], [\"cdkDropList\", \"\", \"cdkDropListSortingDisabled\", \"\", 1, \"group-items-container\", 3, \"cdkDropListConnectedTo\"], [\"class\", \"group-item\", \"cdkDrag\", \"\", 3, \"cdkDragData\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"cdkDrag\", \"\", 1, \"group-item\", 3, \"cdkDragData\"], [1, \"group-item-inner\"], [1, \"item-name\", 3, \"title\"]],\n  template: function ViewDesignerPaletteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"adapt-rx-search\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"adapt-accordion\", 2);\n      i0.ɵɵtemplate(3, ViewDesignerPaletteComponent_adapt_accordion_tab_3_Template, 3, 6, \"adapt-accordion-tab\", 3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.filterFormControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction1(7, _c5, i0.ɵɵpureFunction0(6, _c4)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 4, ctx.viewComponentGroups$))(\"ngForTrackBy\", ctx.trackByNameFn);\n    }\n  },\n  directives: [i3$3.AdaptRxSearchComponent, i3$2.NgControlStatus, i3$2.FormControlDirective, i3$3.AdaptAccordionComponent, i4.NgForOf, i3$3.AdaptAccordionTabComponent, i4$1.CdkDropList, i4$1.CdkDrag],\n  pipes: [i4.AsyncPipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}[_nghost-%COMP%]{display:block}.group-items-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.group-items-container[_ngcontent-%COMP%]   .group-item.cdk-drag-placeholder[_ngcontent-%COMP%]{width:33.3%}.group-item[_ngcontent-%COMP%]{border-right:1px solid #d6d7d8;border-bottom:1px solid #d6d7d8;text-align:center;width:33.3%;cursor:move;height:90px;padding:3px 0}.group-item.cdk-drag-preview[_ngcontent-%COMP%]{background:white;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.group-item.cdk-drag-placeholder[_ngcontent-%COMP%]{border:0;width:100px;height:40px;padding:0;position:relative;z-index:3}.group-item.cdk-drag-placeholder[_ngcontent-%COMP%]   .group-item-inner[_ngcontent-%COMP%]{border:1px solid #d6d7d8;background:#fff}.group-item[_ngcontent-%COMP%]:nth-child(3n){border-right:none}.group-item-inner[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column}.item-image[_ngcontent-%COMP%]{color:#626668;font-size:40px;height:54px;flex-grow:1}.item-name[_ngcontent-%COMP%]{font-size:10px;overflow:hidden;height:34px}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:1!important}adapt-accordion-tab[_ngcontent-%COMP%]     .card-block{padding:0}.form-group[_ngcontent-%COMP%]{margin:10px 20px}.search-field-container[_ngcontent-%COMP%]{padding:.9375rem}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerPaletteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-designer-palette',\n      templateUrl: './view-designer-palette.component.html',\n      styleUrls: ['./view-designer-palette.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i2$1.RxStringService\n    }];\n  }, {\n    components: [{\n      type: Input\n    }],\n    allowedDropListIds: [{\n      type: Input\n    }]\n  });\n})();\nconst RX_VIEW_MODEL = new InjectionToken('RX_VIEW_MODEL');\nclass RxViewDesignerComponent {\n  constructor(viewDesignerFacade, rxNotificationService, rxDefinitionPickerCacheService, rxNamedListDefinitionCacheService, rxModalService, translateService, rxUtilityModalsService, rxViewDesignerHelperService, rxExpressionEditorService, rxViewDefinitionService, rxComponentCanDeactivateGuard, rxViewDefinitionGeneratorService, rxViewDesignerModels, rxLogService, injector, renderer, rxRecordDefinitionCacheService, rxAssociationDefinitionCacheService, rxProcessDefinitionCacheService, rxViewDefinitionCacheService, rxGainsightConfiguratorService, rxDefinitionNameService, rxFeatureService) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxNotificationService = rxNotificationService;\n    this.rxDefinitionPickerCacheService = rxDefinitionPickerCacheService;\n    this.rxNamedListDefinitionCacheService = rxNamedListDefinitionCacheService;\n    this.rxModalService = rxModalService;\n    this.translateService = translateService;\n    this.rxUtilityModalsService = rxUtilityModalsService;\n    this.rxViewDesignerHelperService = rxViewDesignerHelperService;\n    this.rxExpressionEditorService = rxExpressionEditorService;\n    this.rxViewDefinitionService = rxViewDefinitionService;\n    this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n    this.rxViewDefinitionGeneratorService = rxViewDefinitionGeneratorService;\n    this.rxViewDesignerModels = rxViewDesignerModels;\n    this.rxLogService = rxLogService;\n    this.injector = injector;\n    this.renderer = renderer;\n    this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n    this.rxAssociationDefinitionCacheService = rxAssociationDefinitionCacheService;\n    this.rxProcessDefinitionCacheService = rxProcessDefinitionCacheService;\n    this.rxViewDefinitionCacheService = rxViewDefinitionCacheService;\n    this.rxGainsightConfiguratorService = rxGainsightConfiguratorService;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxFeatureService = rxFeatureService;\n    this.viewDefinitionSaved = new EventEmitter();\n    this.viewDefinitionErrorLoading = new EventEmitter();\n    this.closeDesigner = new EventEmitter();\n    this.destroyed$ = new ReplaySubject(1);\n    this.inspectorFocusEditorSubject = new Subject();\n    this.isViewDefinitionChanged$ = new BehaviorSubject(false);\n    this.validationIssues$ = this.rxViewDesignerHelperService.validationIssues$.pipe(shareReplay(1), takeUntil(this.destroyed$));\n    this.breadcrumbItems$ = this.rxViewDesignerHelperService.breadcrumbItems$;\n    this.canvasLayout$ = this.rxViewDesignerHelperService.canvasLayout$;\n    this.canvasDndListIds = this.rxViewDesignerHelperService.canvasDndListIds;\n    this.extensionViewRootComponentType = RxViewComponentType.RecordEditor;\n    // Component UI State\n    this.isDesignMode = true;\n    this.isStencilExpanded = true;\n    this.isInspectorExpanded = true;\n    this.inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n    this.viewComponentInspectorEmptyText$ = this.viewDesignerFacade.selectedComponentInspectorLayout$.pipe(switchMap(selectedComponentLayout => selectedComponentLayout ? of(null) : this.viewDesignerFacade.selectedComponentGuid$.pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), map$1(([selectedComponentGuid, viewModel]) => selectedComponentGuid && selectedComponentGuid !== viewModel.guid ? 'Selected component has no properties.' : 'Select a component to view its properties here.'))), shareReplay({\n      refCount: true,\n      bufferSize: 1\n    }));\n    this.selectedComponentModel$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(map$1(guid => this.rxViewDesignerModels.get(guid)));\n    this.isReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n    this.paletteComponents$ = combineLatest([this.viewDesignerFacade.isExtensionView$.pipe(tap(isExtensionView => this.isExtensionView = isExtensionView)), this.viewDesignerFacade.isExtensionContainerSet$.pipe(tap(isExtensionContainerSet => this.isExtensionContainerSet = isExtensionContainerSet)), this.rxViewDesignerHelperService.getLicensedComponents().pipe(map$1(descriptors => this.configuration.paletteComponentsPredicate ? descriptors.filter(descriptor => this.configuration.paletteComponentsPredicate(descriptor)) : descriptors))]).pipe(switchMap(([isExtensionView, isExtensionContainerSet, componentDescriptors]) => isExtensionView ? this.viewDesignerFacade.firstViewComponentModelType$.pipe(map$1(firstViewComponentType => firstViewComponentType === this.extensionViewRootComponentType ? componentDescriptors.filter(({\n      type\n    }) => type !== this.extensionViewRootComponentType && this.rxViewDesignerHelperService.extensionViewAllowedComponentTypes.has(type)) : componentDescriptors.filter(({\n      type\n    }) => type === this.extensionViewRootComponentType))) : of(componentDescriptors)));\n    const customViewModel = this.injector.get(RX_VIEW_MODEL, null, InjectFlags.Optional);\n    this.rxViewModel = customViewModel || this.injector.get(RxViewModel);\n    this.rxDefinitionPickerCacheService.registerConsumer();\n    this.rxNamedListDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n    this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n  }\n  ngOnInit() {\n    this.isPreviewAvailable$ = this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(map$1(lastUpdateTime => !this.configuration.disablePreview && (Boolean(lastUpdateTime) || !isUndefined(this.configuration.viewDefinitionName))), takeUntil(this.destroyed$));\n    this.viewDefinitionName$ = this.viewDesignerFacade.getViewPropertyValue('name');\n    this.viewDesignerFacade.getViewPropertyValue('pageComponent').pipe(takeUntil(this.destroyed$)).subscribe(pageComponent => {\n      this.isPageView = Boolean(pageComponent);\n    });\n    this.viewDesignerFacade.viewDefinitionSaveSuccess$.pipe(takeUntil(this.destroyed$)).subscribe(({\n      viewDefinitionName\n    }) => {\n      this.rxNotificationService.addSuccessMessage('View definition saved successfully.');\n      this.viewDefinitionSaved.emit(viewDefinitionName);\n      this.initViewDesigner();\n    });\n    this.viewDesignerFacade.viewDefinitionLoadError$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.viewDefinitionErrorLoading.emit());\n    this.hasValidationErrors$ = this.validationIssues$.pipe(map$1(validationIssues => Boolean(filter$1(validationIssues, {\n      issues: [{\n        type: ValidationIssueType.Error\n      }]\n    }).length)), distinctUntilChanged());\n    this.hasValidationWarning$ = this.validationIssues$.pipe(map$1(validationIssues => Boolean(filter$1(validationIssues, {\n      issues: [{\n        type: ValidationIssueType.Warning\n      }]\n    }).length)), distinctUntilChanged());\n    this.isSaveButtonDisabled$ = combineLatest([this.hasValidationErrors$, this.viewDesignerFacade.areViewModelsReady$, this.isViewDefinitionChanged$, this.isReadOnly$]).pipe(map$1(([hasValidationErrors, areViewModelsReady, isChanged, isReadOnly]) => hasValidationErrors || !areViewModelsReady || !isChanged || isReadOnly), startWith(true));\n    this.isReadOnly$.pipe(takeUntil(this.destroyed$)).subscribe(isReadOnly => {\n      if (isReadOnly) {\n        this.rxNotificationService.addWarningMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message'));\n      }\n    });\n    if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      this.viewDefinitionName$.pipe(take(1)).subscribe(viewDefinitionName => {\n        this.rxGainsightConfiguratorService.updateGlobalContext({\n          subProductLevel1: {\n            name: 'Design'\n          },\n          subProductLevel2: {\n            name: this.rxDefinitionNameService.getDisplayName(viewDefinitionName) == RX_APPLICATION.shellDefinitionName ? 'Shell designer' : 'View designer'\n          }\n        });\n      });\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes.configuration.currentValue) {\n      this.initViewDesigner(true);\n    }\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.inspectorFocusEditorSubject.complete();\n    this.isViewDefinitionChanged$.complete();\n    this.rxDefinitionPickerCacheService.unRegisterConsumer();\n    this.viewDesignerFacade.destroyViewDesigner();\n    this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n  }\n  initViewDesigner(dispatchInitViewDesignerAction = false) {\n    var _a;\n    // Mark view definition as not changed if it's not. This needs for scenario when view designer\n    // will be reinitialized with another view definition name and current view is dirty.\n    if (this.isViewDefinitionChanged$.getValue()) {\n      this.isViewDefinitionChanged$.next(false);\n    }\n    (_a = this.viewDefinitionChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    if (dispatchInitViewDesignerAction) {\n      this.viewDesignerFacade.initViewDesigner(pick(this.configuration, ['bundleId', 'viewDefinitionName', 'layoutTemplate']));\n    }\n    this.initViewDefinitionChangeSubscription();\n  }\n  initViewDefinitionChangeSubscription() {\n    this.viewDefinitionChangeSubscription = this.viewDesignerFacade.areViewModelsReady$.pipe(\n    // Wait until models state will be updated with view and view components data.\n    filter(Boolean), take(1), switchMap(() => combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$]).pipe(map$1(([viewModel, viewComponentModels]) => this.rxViewDefinitionGeneratorService.generate(viewModel, viewComponentModels)), distinctUntilChanged(isEqual),\n    // Skip first emit from distinctUntilChanged.\n    skip(1),\n    // Complete after first emit, it's considered that view definition gets changed so no needs for further emits.\n    take(1), takeUntil(this.destroyed$))), takeUntil(this.destroyed$)).subscribe(() => {\n      this.isViewDefinitionChanged$.next(true);\n    });\n  }\n  onSelectComponent(guid) {\n    this.viewDesignerFacade.selectComponent(guid);\n  }\n  onDropComponent(data) {\n    this.viewDesignerFacade.insertComponent(data);\n  }\n  onRemoveComponent(guid) {\n    this.rxUtilityModalsService.confirm('Are you sure you want to delete this view component?').then(isConfirmed => {\n      if (isConfirmed) {\n        this.viewDesignerFacade.removeViewComponents([guid], true);\n        if (this.isPageView) {\n          this.viewDesignerFacade.updateViewProperties({\n            pageComponent: null\n          });\n        }\n      }\n    });\n  }\n  onInspectorTabChange(event) {\n    this.viewDesignerFacade.selectInspectorTab({\n      tabId: event.index\n    });\n  }\n  toggleDesignMode() {\n    if (this.isDesignMode) {\n      this.viewDesignerFacade.generateViewDefinition();\n    }\n    this.isDesignMode = !this.isDesignMode;\n  }\n  onComponentPropertiesChange(properties) {\n    this.viewDesignerFacade.updateSelectedComponentProperties(properties);\n  }\n  onEditorEvent(event, inspectorElementRef) {\n    if (event.type === RX_VALIDATION_FORM_CONTROL.events.correctValidationIssue) {\n      this.correctValidationIssue(event.payload.componentGuid, event.payload.propertyName);\n    }\n    if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n      this.revertCustomization();\n    }\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(event.payload, inspectorElementRef);\n    }\n  }\n  getExpressionProperties(inspectorElementRef) {\n    return (this.viewComponentPropertyInspectorElementRef === inspectorElementRef ? this.viewDesignerFacade.selectedComponentProperties$ : this.viewDesignerFacade.viewModel$).pipe(map$1(properties => Array.from(this.renderer.selectRootElement(inspectorElementRef.nativeElement, true).querySelectorAll('rx-expression-form-control')).map(element => {\n      const propertyPath = element.getAttribute('property-path');\n      return {\n        path: propertyPath,\n        value: get(properties, propertyPath),\n        label: element.getAttribute('property-label')\n      };\n    })));\n  }\n  openExpressionEditor(payload, inspectorElementRef) {\n    const isComponentInspectorChange = this.viewComponentPropertyInspectorElementRef === inspectorElementRef;\n    const props$ = isComponentInspectorChange ? this.viewDesignerFacade.selectedComponentProperties$ : this.viewDesignerFacade.viewModel$;\n    combineLatest([this.viewDesignerFacade.selectedComponentGuid$, props$]).pipe(take(1), switchMap(([componentGuid, properties]) => {\n      const model = isComponentInspectorChange ? this.rxViewDesignerModels.get(componentGuid) : this.rxViewModel;\n      const expressionConfigurator = model === null || model === void 0 ? void 0 : model.expressionConfigurator;\n      if (expressionConfigurator) {\n        return this.rxExpressionEditorService.openEditor({\n          property: {\n            path: payload.propertyPath,\n            value: get(properties, payload.propertyPath),\n            label: payload.propertyLabel\n          },\n          isReadOnly: payload.isReadOnly,\n          expressionConfigurator,\n          legend: [{\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n            icon: 'd-icon-mathematical_function'\n          }, {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n            icon: 'd-icon-dollar'\n          }, {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'),\n            icon: 'd-icon-file_o'\n          }, {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'),\n            icon: 'd-icon-file_o_gear'\n          }, {\n            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'),\n            icon: 'd-icon-arrow_right_square_input'\n          }],\n          expressionPropertyNavigator: {\n            getProperties: this.getExpressionProperties.bind(this, inspectorElementRef)\n          }\n        }).pipe(withLatestFrom(props$), map$1(([{\n          path,\n          value\n        }, props]) => {\n          if (props.hasOwnProperty(path)) {\n            return {\n              [path]: value\n            };\n          } else {\n            // Don't override nested model properties e.g,\n            // when 'path' = \"outputParams[1].source\" and 'value' = \"${bar}\", model will be updated from:\n            // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: null}] } to:\n            // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: ${bar}}] }\n            const headPropertyName = toPath(path)[0];\n            // clone value because \"set\" mutates object, otherwise expression\n            // form control component will not be updated with new value.\n            return set({\n              [headPropertyName]: cloneDeep(props[headPropertyName])\n            }, path, value);\n          }\n        }));\n      } else {\n        this.rxLogService.debug('View designer: Expression editor cannot be opened without expression configurator.');\n        return EMPTY;\n      }\n    }), takeUntil(this.destroyed$)).subscribe(value => isComponentInspectorChange ? this.viewDesignerFacade.updateSelectedComponentProperties(value) : this.viewDesignerFacade.updateViewProperties(value));\n  }\n  saveViewDefinition() {\n    this.viewDesignerFacade.viewModel$.pipe(take(1), switchMap(viewModel => {\n      const message = viewModel.type === ViewDefinitionType.Shell ? 'If you save your changes now, you will not be able to run this application using the old UI. Do you want to continue?' : 'If you save this view definition, you will not be able to open it in the old view designer. Do you want to continue?';\n      if (viewModel.isAngularJsView) {\n        return this.rxModalService.confirm({\n          title: 'Warning',\n          modalStyle: RX_MODAL.modalStyles.warning,\n          message\n        });\n      } else {\n        return of(true);\n      }\n    }), filter(Boolean), takeUntil(this.destroyed$)).subscribe(() => {\n      this.viewDesignerFacade.saveViewDefinition();\n    });\n  }\n  onCorrectIssue(validationIssue) {\n    this.correctValidationIssue(validationIssue.data.guid, validationIssue.data.propertyName, validationIssue.data.data);\n  }\n  correctValidationIssue(guid, propertyName, data) {\n    this.viewDesignerFacade.selectComponent(guid);\n    // need to wait until inspector will be visible\n    // there are no way to focus to invisible elements\n    setTimeout(() => this.inspectorFocusEditorSubject.next({\n      editorName: propertyName,\n      data\n    }), 10);\n  }\n  revertCustomization() {\n    this.viewDefinitionName$.pipe(switchMap(viewDefinitionName => this.rxViewDefinitionService.revertCustomization(viewDefinitionName)), takeUntil(this.destroyed$)).subscribe(() => {\n      this.rxComponentCanDeactivateGuard.disable();\n      window.location.reload();\n    });\n  }\n  onViewPropertiesChange(properties) {\n    this.viewDesignerFacade.updateViewProperties(properties);\n  }\n  showPreview() {\n    this.viewDesignerFacade.runPreview();\n  }\n  canDeactivate() {\n    let canDeactivate = true;\n    combineLatest([this.isViewDefinitionChanged$, this.isReadOnly$]).pipe(map$1(([isChanged, isReadOnly]) => !isChanged || isReadOnly), take(1)).subscribe(isPristineOrReadOnly => {\n      canDeactivate = isPristineOrReadOnly;\n    });\n    return canDeactivate;\n  }\n  onBeforeComponentDropInRoot(event) {\n    if (this.isExtensionView) {\n      if (!this.isExtensionContainerSet) {\n        this.rxNotificationService.addWarningMessage('Select Extension container before adding view components.');\n        event.preventDrop = true;\n      } else if (event.draggedViewComponentDescriptor.type !== RxViewComponentType.RecordEditor) {\n        this.rxNotificationService.addWarningMessage('This view component can only be added inside a Record editor.');\n        event.preventDrop = true;\n      }\n    }\n  }\n}\nRxViewDesignerComponent.ɵfac = function RxViewDesignerComponent_Factory(t) {\n  return new (t || RxViewDesignerComponent)(i0.ɵɵdirectiveInject(ViewDesignerFacade), i0.ɵɵdirectiveInject(i3.RxNotificationService), i0.ɵɵdirectiveInject(i3$1.RxDefinitionPickerCacheService), i0.ɵɵdirectiveInject(i4$2.RxNamedListDefinitionCacheService), i0.ɵɵdirectiveInject(i5$1.RxModalService), i0.ɵɵdirectiveInject(i6.TranslateService), i0.ɵɵdirectiveInject(i5$1.RxUtilityModalsService), i0.ɵɵdirectiveInject(RxViewDesignerHelperService), i0.ɵɵdirectiveInject(i3$1.RxExpressionEditorService), i0.ɵɵdirectiveInject(i5.RxViewDefinitionService), i0.ɵɵdirectiveInject(i3.RxComponentCanDeactivateGuard), i0.ɵɵdirectiveInject(RxViewDefinitionGeneratorService), i0.ɵɵdirectiveInject(RxViewDesignerModels), i0.ɵɵdirectiveInject(i3.RxLogService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i11.RxRecordDefinitionCacheService), i0.ɵɵdirectiveInject(i12.RxAssociationDefinitionCacheService), i0.ɵɵdirectiveInject(i13.RxProcessDefinitionCacheService), i0.ɵɵdirectiveInject(i5.RxViewDefinitionCacheService), i0.ɵɵdirectiveInject(i3$1.RxGainsightConfiguratorService), i0.ɵɵdirectiveInject(i3.RxDefinitionNameService), i0.ɵɵdirectiveInject(i3.RxFeatureService));\n};\nRxViewDesignerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RxViewDesignerComponent,\n  selectors: [[\"rx-view-designer\"]],\n  viewQuery: function RxViewDesignerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 5, ElementRef);\n      i0.ɵɵviewQuery(_c7, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPropertyInspectorElementRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewComponentPropertyInspectorElementRef = _t.first);\n    }\n  },\n  inputs: {\n    configuration: \"configuration\"\n  },\n  outputs: {\n    viewDefinitionSaved: \"viewDefinitionSaved\",\n    viewDefinitionErrorLoading: \"viewDefinitionErrorLoading\",\n    closeDesigner: \"closeDesigner\"\n  },\n  features: [i0.ɵɵProvidersFeature([RxViewModel]), i0.ɵɵNgOnChangesFeature],\n  decls: 45,\n  vars: 87,\n  consts: [[3, \"bundleName\", \"breadcrumbItems\", \"isDesignMode\", \"isPreviewAvailable\", \"isSaveButtonDisabled\", \"breadcrumbSelected\", \"toggleDesignMode\", \"showPreview\", \"save\", \"closeDesigner\"], [1, \"rx-component-view-designer\", 3, \"hidden\"], [\"rx-id\", \"palette\", 3, \"title\", \"isExpanded\", \"toggle\"], [3, \"components\", \"allowedDropListIds\", 4, \"ngIf\"], [\"class\", \"p-3\", 3, \"config\", 4, \"ngIf\"], [1, \"rx-view-designer-container\"], [1, \"flex-grow-1\", 3, \"layout\", \"isReadOnly\", \"componentSelect\", \"componentRemove\", \"componentDrop\", \"beforeComponentDropInRoot\"], [\"dockTo\", \"right\", \"rx-id\", \"properties\", 3, \"title\", \"isExpanded\", \"toggle\"], [\"customCssTabContent\", \"p-0\", \"justify\", \"justified\", 3, \"tab-active\", \"tab-active-changed\"], [\"icon\", \"d-icon-pencil\"], [3, \"focusEditor$\", \"config\", \"model\", \"isReadOnly\", \"modelChange\", \"editorEvent\"], [\"viewPropertyInspector\", \"\"], [\"icon\", \"d-icon-gear\"], [\"rxInspector\", \"\", 3, \"designerItemModel\", \"focusEditor$\", \"config\", \"model\", \"guid\", \"isReadOnly\", \"modelChange\", \"editorEvent\"], [\"viewComponentPropertyInspector\", \"\"], [1, \"p-3\", 3, \"hidden\", \"config\"], [\"icon\", \"d-icon-exclamation_triangle\"], [3, \"definitionTypeDisplayName\", \"issueSections\", \"correctIssue\"], [\"class\", \"full-size\", 3, \"code\", \"lang\", \"hasToolbar\", \"theme\", 4, \"ngIf\"], [3, \"components\", \"allowedDropListIds\"], [1, \"p-3\", 3, \"config\"], [1, \"full-size\", 3, \"code\", \"lang\", \"hasToolbar\", \"theme\"]],\n  template: function RxViewDesignerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"rx-designer-header\", 0);\n      i0.ɵɵlistener(\"breadcrumbSelected\", function RxViewDesignerComponent_Template_rx_designer_header_breadcrumbSelected_0_listener($event) {\n        return ctx.onSelectComponent($event.data.guid);\n      })(\"toggleDesignMode\", function RxViewDesignerComponent_Template_rx_designer_header_toggleDesignMode_0_listener() {\n        return ctx.toggleDesignMode();\n      })(\"showPreview\", function RxViewDesignerComponent_Template_rx_designer_header_showPreview_0_listener() {\n        return ctx.showPreview();\n      })(\"save\", function RxViewDesignerComponent_Template_rx_designer_header_save_0_listener() {\n        return ctx.saveViewDefinition();\n      })(\"closeDesigner\", function RxViewDesignerComponent_Template_rx_designer_header_closeDesigner_0_listener() {\n        return ctx.closeDesigner.emit();\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1);\n      i0.ɵɵelementStart(6, \"rx-blade\", 2);\n      i0.ɵɵlistener(\"toggle\", function RxViewDesignerComponent_Template_rx_blade_toggle_6_listener() {\n        return ctx.isStencilExpanded = !ctx.isStencilExpanded;\n      });\n      i0.ɵɵtemplate(7, RxViewDesignerComponent_rx_view_designer_palette_7_Template, 2, 4, \"rx-view-designer-palette\", 3);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵtemplate(9, RxViewDesignerComponent_adapt_alert_9_Template, 1, 2, \"adapt-alert\", 4);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵtemplate(11, RxViewDesignerComponent_adapt_alert_11_Template, 1, 2, \"adapt-alert\", 4);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"section\", 5);\n      i0.ɵɵelementStart(15, \"rx-view-designer-canvas\", 6);\n      i0.ɵɵlistener(\"componentSelect\", function RxViewDesignerComponent_Template_rx_view_designer_canvas_componentSelect_15_listener($event) {\n        return ctx.onSelectComponent($event);\n      })(\"componentRemove\", function RxViewDesignerComponent_Template_rx_view_designer_canvas_componentRemove_15_listener($event) {\n        return ctx.onRemoveComponent($event);\n      })(\"componentDrop\", function RxViewDesignerComponent_Template_rx_view_designer_canvas_componentDrop_15_listener($event) {\n        return ctx.onDropComponent($event);\n      })(\"beforeComponentDropInRoot\", function RxViewDesignerComponent_Template_rx_view_designer_canvas_beforeComponentDropInRoot_15_listener($event) {\n        return ctx.onBeforeComponentDropInRoot($event);\n      });\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"rx-blade\", 7);\n      i0.ɵɵlistener(\"toggle\", function RxViewDesignerComponent_Template_rx_blade_toggle_18_listener() {\n        return ctx.isInspectorExpanded = !ctx.isInspectorExpanded;\n      });\n      i0.ɵɵelementStart(19, \"adapt-tabset\", 8);\n      i0.ɵɵlistener(\"tab-active-changed\", function RxViewDesignerComponent_Template_adapt_tabset_tab_active_changed_19_listener($event) {\n        return ctx.onInspectorTabChange($event);\n      });\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵpipe(22, \"async\");\n      i0.ɵɵelementStart(23, \"adapt-tab-panel\", 9);\n      i0.ɵɵelementStart(24, \"rx-form-builder\", 10, 11);\n      i0.ɵɵlistener(\"modelChange\", function RxViewDesignerComponent_Template_rx_form_builder_modelChange_24_listener($event) {\n        return ctx.onViewPropertiesChange($event);\n      })(\"editorEvent\", function RxViewDesignerComponent_Template_rx_form_builder_editorEvent_24_listener($event) {\n        return ctx.onEditorEvent($event, ctx.viewPropertyInspectorElementRef);\n      });\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵpipe(27, \"async\");\n      i0.ɵɵpipe(28, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"adapt-tab-panel\", 12);\n      i0.ɵɵelementStart(30, \"rx-form-builder\", 13, 14);\n      i0.ɵɵlistener(\"modelChange\", function RxViewDesignerComponent_Template_rx_form_builder_modelChange_30_listener($event) {\n        return ctx.onComponentPropertiesChange($event);\n      })(\"editorEvent\", function RxViewDesignerComponent_Template_rx_form_builder_editorEvent_30_listener($event) {\n        return ctx.onEditorEvent($event, ctx.viewComponentPropertyInspectorElementRef);\n      });\n      i0.ɵɵpipe(32, \"async\");\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵpipe(34, \"async\");\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵpipe(36, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"adapt-alert\", 15);\n      i0.ɵɵpipe(38, \"async\");\n      i0.ɵɵpipe(39, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"adapt-tab-panel\", 16);\n      i0.ɵɵelementStart(41, \"rx-validation-issues\", 17);\n      i0.ɵɵlistener(\"correctIssue\", function RxViewDesignerComponent_Template_rx_validation_issues_correctIssue_41_listener($event) {\n        return ctx.onCorrectIssue($event);\n      });\n      i0.ɵɵpipe(42, \"translate\");\n      i0.ɵɵpipe(43, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(44, RxViewDesignerComponent_adapt_code_viewer_44_Template, 3, 8, \"adapt-code-viewer\", 18);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"bundleName\", i0.ɵɵpipeBind1(1, 35, ctx.viewDesignerFacade.bundleFriendlyName$))(\"breadcrumbItems\", i0.ɵɵpipeBind1(2, 37, ctx.breadcrumbItems$))(\"isDesignMode\", ctx.isDesignMode)(\"isPreviewAvailable\", i0.ɵɵpipeBind1(3, 39, ctx.isPreviewAvailable$))(\"isSaveButtonDisabled\", i0.ɵɵpipeBind1(4, 41, ctx.isSaveButtonDisabled$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"hidden\", !ctx.isDesignMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"title\", \"Palette\")(\"isExpanded\", ctx.isStencilExpanded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isPageView && !i0.ɵɵpipeBind1(8, 43, ctx.isReadOnly$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isPageView && !i0.ɵɵpipeBind1(10, 45, ctx.isReadOnly$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 47, !i0.ɵɵpipeBind1(13, 49, ctx.viewDesignerFacade.isViewDefinitionLoading$) && ctx.isReadOnly$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"layout\", i0.ɵɵpipeBind1(16, 51, ctx.canvasLayout$))(\"isReadOnly\", i0.ɵɵpipeBind1(17, 53, ctx.isReadOnly$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"title\", \"Properties\")(\"isExpanded\", ctx.isInspectorExpanded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"has-validation-warning\", i0.ɵɵpipeBind1(20, 55, ctx.hasValidationWarning$))(\"has-validation-errors\", i0.ɵɵpipeBind1(21, 57, ctx.hasValidationErrors$));\n      i0.ɵɵproperty(\"tab-active\", i0.ɵɵpipeBind1(22, 59, ctx.viewDesignerFacade.selectedInspectorTabId$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"focusEditor$\", ctx.inspectorFocusEditor$)(\"config\", i0.ɵɵpipeBind1(26, 61, ctx.viewDesignerFacade.viewInspectorLayout$))(\"model\", i0.ɵɵpipeBind1(27, 63, ctx.viewDesignerFacade.viewModel$))(\"isReadOnly\", i0.ɵɵpipeBind1(28, 65, ctx.isReadOnly$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"designerItemModel\", i0.ɵɵpipeBind1(32, 67, ctx.selectedComponentModel$))(\"focusEditor$\", ctx.inspectorFocusEditor$)(\"config\", i0.ɵɵpipeBind1(33, 69, ctx.viewDesignerFacade.selectedComponentInspectorLayout$))(\"model\", i0.ɵɵpipeBind1(34, 71, ctx.viewDesignerFacade.selectedComponentProperties$))(\"guid\", i0.ɵɵpipeBind1(35, 73, ctx.viewDesignerFacade.selectedComponentGuid$))(\"isReadOnly\", i0.ɵɵpipeBind1(36, 75, ctx.isReadOnly$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"hidden\", !i0.ɵɵpipeBind1(38, 77, ctx.viewComponentInspectorEmptyText$))(\"config\", i0.ɵɵpureFunction1(85, _c12, i0.ɵɵpipeBind1(39, 79, ctx.viewComponentInspectorEmptyText$)));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"definitionTypeDisplayName\", i0.ɵɵpipeBind1(42, 81, \"com.bmc.arsys.rx.client.view-definition.label\"))(\"issueSections\", i0.ɵɵpipeBind1(43, 83, ctx.validationIssues$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isDesignMode);\n    }\n  },\n  directives: [i3$1.RxDesignerHeaderComponent, i5$1.RxBladeComponent, i4.NgIf, ViewDesignerCanvasComponent, i3$3.AdaptTabsComponent, i3$3.AdaptTabsPanelComponent, i3$1.FormBuilderComponent, i3$1.InspectorDirective, i3$3.AdaptAlertComponent, i5$1.RxValidationIssuesComponent, ViewDesignerPaletteComponent, i3$3.AdaptCodeViewerComponent],\n  pipes: [i4.AsyncPipe, i6.TranslatePipe, i4.JsonPipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%}.rx-component-view-designer[_ngcontent-%COMP%]{display:flex;flex-grow:1;height:calc(100% - 50px);overflow:hidden}.rx-view-designer-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1;overflow:auto;padding:2.2rem 1rem 1rem}[_nghost-%COMP%]     .has-validation-warning:not(.has-validation-errors) .nav-link .d-icon-exclamation_triangle{color:#f1b521}[_nghost-%COMP%]     .has-validation-errors .nav-link .d-icon-exclamation_triangle{color:#f83200}[_nghost-%COMP%]     adapt-tabset .nav-tabs .nav-link-icon{margin-right:0}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-designer',\n      templateUrl: './view-designer.component.html',\n      styleUrls: ['./view-designer.component.scss'],\n      providers: [RxViewModel]\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }, {\n      type: i3.RxNotificationService\n    }, {\n      type: i3$1.RxDefinitionPickerCacheService\n    }, {\n      type: i4$2.RxNamedListDefinitionCacheService\n    }, {\n      type: i5$1.RxModalService\n    }, {\n      type: i6.TranslateService\n    }, {\n      type: i5$1.RxUtilityModalsService\n    }, {\n      type: RxViewDesignerHelperService\n    }, {\n      type: i3$1.RxExpressionEditorService\n    }, {\n      type: i5.RxViewDefinitionService\n    }, {\n      type: i3.RxComponentCanDeactivateGuard\n    }, {\n      type: RxViewDefinitionGeneratorService\n    }, {\n      type: RxViewDesignerModels\n    }, {\n      type: i3.RxLogService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i11.RxRecordDefinitionCacheService\n    }, {\n      type: i12.RxAssociationDefinitionCacheService\n    }, {\n      type: i13.RxProcessDefinitionCacheService\n    }, {\n      type: i5.RxViewDefinitionCacheService\n    }, {\n      type: i3$1.RxGainsightConfiguratorService\n    }, {\n      type: i3.RxDefinitionNameService\n    }, {\n      type: i3.RxFeatureService\n    }];\n  }, {\n    configuration: [{\n      type: Input\n    }],\n    viewDefinitionSaved: [{\n      type: Output\n    }],\n    viewDefinitionErrorLoading: [{\n      type: Output\n    }],\n    closeDesigner: [{\n      type: Output\n    }],\n    viewPropertyInspectorElementRef: [{\n      type: ViewChild,\n      args: ['viewPropertyInspector', {\n        read: ElementRef\n      }]\n    }],\n    viewComponentPropertyInspectorElementRef: [{\n      type: ViewChild,\n      args: ['viewComponentPropertyInspector', {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\nclass ViewDesignerCanvasModule {}\nViewDesignerCanvasModule.ɵfac = function ViewDesignerCanvasModule_Factory(t) {\n  return new (t || ViewDesignerCanvasModule)();\n};\nViewDesignerCanvasModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ViewDesignerCanvasModule,\n  declarations: [ViewDesignerCanvasComponent, CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent],\n  imports: [CommonModule, DragDropModule],\n  exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent]\n});\nViewDesignerCanvasModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DragDropModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerCanvasModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DragDropModule],\n      exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent],\n      declarations: [ViewDesignerCanvasComponent, CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent],\n      entryComponents: [CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent]\n    }]\n  }], null, null);\n})();\nclass DesignerModule {}\nDesignerModule.ɵfac = function DesignerModule_Factory(t) {\n  return new (t || DesignerModule)();\n};\nDesignerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DesignerModule,\n  declarations: [DesignerComponent],\n  imports: [ViewDesignerCanvasModule, CommonModule]\n});\nDesignerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ViewDesignerCanvasModule, CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DesignerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ViewDesignerCanvasModule, CommonModule],\n      declarations: [DesignerComponent],\n      entryComponents: [DesignerComponent]\n    }]\n  }], null, null);\n})();\nclass RxViewDesignerPaletteModule {}\nRxViewDesignerPaletteModule.ɵfac = function RxViewDesignerPaletteModule_Factory(t) {\n  return new (t || RxViewDesignerPaletteModule)();\n};\nRxViewDesignerPaletteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RxViewDesignerPaletteModule,\n  declarations: [ViewDesignerPaletteComponent],\n  imports: [CommonModule, DragDropModule, ReactiveFormsModule, AdaptAccordionModule, AdaptTextFieldModule, AdaptRxSearchModule],\n  exports: [ViewDesignerPaletteComponent]\n});\nRxViewDesignerPaletteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DragDropModule, ReactiveFormsModule, AdaptAccordionModule, AdaptTextFieldModule, AdaptRxSearchModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerPaletteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DragDropModule, ReactiveFormsModule, AdaptAccordionModule, AdaptTextFieldModule, AdaptRxSearchModule],\n      exports: [ViewDesignerPaletteComponent],\n      declarations: [ViewDesignerPaletteComponent]\n    }]\n  }], null, null);\n})();\nclass RuntimeViewParamsModalComponent extends RxModalClass {\n  constructor(activeModalRef, injector) {\n    super(activeModalRef, injector);\n    this.activeModalRef = activeModalRef;\n    this.injector = injector;\n    this.inputParams = {};\n    this.inputParamNames = this.activeModalRef.getData().inputParams;\n  }\n  isDirty() {\n    return values(this.inputParams).some(paramValue => paramValue);\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\nRuntimeViewParamsModalComponent.ɵfac = function RuntimeViewParamsModalComponent_Factory(t) {\n  return new (t || RuntimeViewParamsModalComponent)(i0.ɵɵdirectiveInject(i3$3.ActiveModalRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\nRuntimeViewParamsModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RuntimeViewParamsModalComponent,\n  selectors: [[\"rx-runtime-view-params-modal\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"modal-body\"], [4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"btn-type\", \"primary\", \"rx-id\", \"ok-button\", 3, \"click\"], [\"btn-type\", \"secondary\", \"rx-id\", \"cancel-button\", 3, \"click\"], [3, \"label\", \"autofocus\", \"ngModel\", \"ngModelChange\"]],\n  template: function RuntimeViewParamsModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, RuntimeViewParamsModalComponent_div_1_Template, 2, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"adapt-button\", 3);\n      i0.ɵɵlistener(\"click\", function RuntimeViewParamsModalComponent_Template_adapt_button_click_3_listener() {\n        return ctx.activeModalRef.close(ctx.inputParams);\n      });\n      i0.ɵɵtext(4, \" OK \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"adapt-button\", 4);\n      i0.ɵɵlistener(\"click\", function RuntimeViewParamsModalComponent_Template_adapt_button_click_5_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(6, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.inputParamNames);\n    }\n  },\n  directives: [i4.NgForOf, i3$3.AdaptButtonComponent, i3$3.AdaptRxTextfieldComponent, i3$2.NgControlStatus, i3$2.NgModel],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.modal-body[_ngcontent-%COMP%]{padding:20px}.modal-footer[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;border-top:1px solid #d6d7d8;padding:10px 15px}.modal-footer[_ngcontent-%COMP%]   adapt-button[_ngcontent-%COMP%]{margin-right:5px}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RuntimeViewParamsModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-runtime-view-params-modal',\n      templateUrl: './runtime-view-params-modal.component.html',\n      styleUrls: ['./runtime-view-params-modal.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: i3$3.ActiveModalRef\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RuntimeViewParamsModalModule {}\nRuntimeViewParamsModalModule.ɵfac = function RuntimeViewParamsModalModule_Factory(t) {\n  return new (t || RuntimeViewParamsModalModule)();\n};\nRuntimeViewParamsModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RuntimeViewParamsModalModule,\n  declarations: [RuntimeViewParamsModalComponent],\n  imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule],\n  exports: [RuntimeViewParamsModalComponent]\n});\nRuntimeViewParamsModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RuntimeViewParamsModalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule],\n      exports: [RuntimeViewParamsModalComponent],\n      declarations: [RuntimeViewParamsModalComponent],\n      entryComponents: [RuntimeViewParamsModalComponent]\n    }]\n  }], null, null);\n})();\nclass RxViewActionExpressionConfigurator extends RxViewExpressionConfigurator {\n  constructor(injector, actionType, actionGuid) {\n    super(injector);\n    this.injector = injector;\n    this.actionType = actionType;\n    this.actionGuid = actionGuid;\n    this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n    this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n    this.rxViewActionRegistryService = this.injector.get(RxViewActionRegistryService);\n    this.commonDataDictionary$ = this.rxViewDataDictionaryService.getActionDataDictionary(this.actionGuid);\n  }\n  getExpressionEvaluator(propertyName) {\n    const propertyDescriptor = this.rxViewActionRegistryService.get(this.actionType).parameters.find(param => param.name === propertyName);\n    return get(propertyDescriptor, 'evaluatorService', this.rxDefaultExpressionEvaluatorService);\n  }\n}\nclass NamedListFilterExpressionConfigurator extends RxViewExpressionConfigurator {\n  constructor(fieldDefinition, injector) {\n    super(injector);\n    this.fieldDefinition = fieldDefinition;\n    this.injector = injector;\n    this.rxNamedListDefinitionCacheService = this.injector.get(RxNamedListDefinitionCacheService);\n    this.rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n    this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n    this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n    this.commonDataDictionary$ = this.rxNamedListDefinitionCacheService.getNamedListDefinition(this.fieldDefinition.namedListDefinition).pipe(switchMap(namedListDefinition => this.rxRecordDefinitionCacheService.getRecordDefinition(namedListDefinition.recordDefinitionName)), switchMap(recordDefinition => this.getNamedListBranch(recordDefinition)), withLatestFrom(this.rxViewDataDictionaryService.getCommonDataDictionary()), map$1(([namedListBranch, dataDictionary]) => [namedListBranch, ...dataDictionary]));\n  }\n  getExpressionEvaluator() {\n    return this.rxDefaultExpressionEvaluatorService;\n  }\n  getDefaultConfig() {\n    return Object.assign(Object.assign({}, super.getDefaultConfig()), {\n      operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllServer)\n    });\n  }\n  getNamedListBranch(recordDefinition) {\n    const namedListDictionaryNodes = chain(recordDefinition.fieldDefinitions).reject({\n      resourceType: RX_RECORD_DEFINITION.resourceTypes.attachment\n    }).map(fieldDefinition => ({\n      label: fieldDefinition.name,\n      expression: `'${fieldDefinition.id}'`,\n      icon: 'd-icon-file_o_gear',\n      children: fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection ? [{\n        label: 'Options',\n        children: map(fieldDefinition.optionNamesById, (optionName, optionValue) => ({\n          label: optionName,\n          expression: optionValue,\n          icon: 'd-icon-file_o_gear'\n        }))\n      }] : []\n    })).sortBy('label').value();\n    return of({\n      label: 'Filter by',\n      expanded: true,\n      children: namedListDictionaryNodes\n    });\n  }\n}\nclass ActionSandbox {\n  constructor(injector, descriptor, guid, initialProps) {\n    this.injector = injector;\n    this.descriptor = descriptor;\n    this.guid = guid;\n    this.initialProps = initialProps;\n    this.destroyedSubject = new Subject();\n    this.viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n    this.actionPropertyEditorConfigSubject = new BehaviorSubject([]);\n    this.actionPropertiesSubject = new BehaviorSubject(this.initialProps);\n    this.children = [];\n    this.children$ = this.viewDesignerFacade.getChildComponents(this.guid);\n    this.destroyed$ = this.destroyedSubject.asObservable();\n    this.actionPropertyEditorConfig$ = this.actionPropertyEditorConfigSubject.pipe(takeUntil(this.destroyed$));\n    this.actionProperties$ = this.actionPropertiesSubject.pipe(map$1(() => omit(this.getActionProperties(), ['name'])), distinctUntilChanged(isEqual), takeUntil(this.destroyed$));\n    this.children$.pipe(first(), takeUntil(this.destroyed$)).subscribe(children => {\n      this.setChildren(children);\n    });\n  }\n  updateActionProperties(props) {\n    this.actionPropertiesSubject.next(Object.assign(Object.assign({}, this.actionPropertiesSubject.getValue()), props));\n  }\n  setActionProperties(props) {\n    const {\n      name,\n      index\n    } = this.actionPropertiesSubject.getValue();\n    this.actionPropertiesSubject.next(Object.assign(Object.assign({\n      $condition$: null\n    }, props), {\n      name,\n      index\n    }));\n  }\n  getActionProperties() {\n    return this.actionPropertiesSubject.getValue();\n  }\n  getActionPropertyValue(propertyName) {\n    return this.actionPropertiesSubject.getValue()[propertyName];\n  }\n  setActionPropertyEditorConfig(actionEditorConfig) {\n    const expressionConfigurator = new RxViewActionExpressionConfigurator(this.injector, this.descriptor.name, this.guid);\n    actionEditorConfig = [{\n      name: '$condition$',\n      component: ExpressionFormControlComponent,\n      options: {\n        label: 'Condition',\n        tooltip: new Tooltip('The action will execute if the condition is true, or if no condition is defined.'),\n        dataDictionary$: expressionConfigurator.getDataDictionary(),\n        operators: expressionConfigurator.getOperators()\n      }\n    }, ...actionEditorConfig];\n    this.actionPropertyEditorConfigSubject.next(actionEditorConfig);\n  }\n  getActionPropertyEditorConfig() {\n    return this.actionPropertyEditorConfigSubject.getValue();\n  }\n  setActionOutputDataDictionary(dataDictionary) {\n    // check why index is coming as a string for existing actions\n    this.viewDesignerFacade.setActionDataDictionaryBranch(this.guid, this.getActionPropertyValue('index'), this.descriptor.label, dataDictionary);\n  }\n  setChildren(data) {\n    this.children = data;\n  }\n  getChildren() {\n    return this.children;\n  }\n  onDestroy() {\n    this.destroyedSubject.next();\n    this.destroyedSubject.complete();\n  }\n}\nclass RxViewDesignerActionModel {\n  constructor(injector, sandbox) {\n    this.injector = injector;\n    this.sandbox = sandbox;\n    this.guid = this.sandbox.guid;\n    this.expressionConfigurator = new RxViewActionExpressionConfigurator(this.injector, this.sandbox.descriptor.name, this.sandbox.guid);\n  }\n  getExpressionConfigurator() {\n    return this.expressionConfigurator;\n  }\n  getPropertiesByName() {\n    return this.sandbox.getActionProperties();\n  }\n  getChildren() {\n    return this.sandbox.getChildren();\n  }\n  getOutputExpressionForPropertyPath(propertyPath) {\n    return `\\${view.components.${this.guid}.output.${propertyPath}}`;\n  }\n}\nclass RxViewDesignerDefaultActionModel extends RxViewDesignerActionModel {\n  constructor(injector, sandbox) {\n    super(injector, sandbox);\n    this.injector = injector;\n    this.sandbox = sandbox;\n    this.defaultProps = this.sandbox.descriptor.parameters.reduce((initialProps, param) => {\n      initialProps[param.name] = param.defaultValue;\n      return initialProps;\n    }, {});\n    this.sandbox.actionProperties$.pipe(take(1)).subscribe(props => {\n      this.sandbox.updateActionProperties(Object.assign(Object.assign({}, this.defaultProps), props));\n      this.sandbox.setActionPropertyEditorConfig(this.getActionEditorConfig());\n    });\n  }\n  getActionEditorConfig() {\n    return this.sandbox.descriptor.parameters.filter(param => param.editor).map(param => ({\n      name: param.name,\n      component: param.editor,\n      options: Object.assign({\n        label: param.label,\n        isRequired: param.isRequired,\n        tooltip: param.tooltip\n      }, param.editor === ExpressionFormControlComponent ? {\n        dataDictionary$: this.expressionConfigurator.getDataDictionary(param.name),\n        operators: this.expressionConfigurator.getOperators(param.name)\n      } : param.editorOptions || {})\n    }));\n  }\n}\nclass RxActionListModelManagerService {\n  constructor(injector) {\n    this.injector = injector;\n    this.models = new Map();\n  }\n  create(descriptor, guid, initialProps) {\n    var _a;\n    const sandbox = new ActionSandbox(this.injector, descriptor, guid, isFunction((_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.designModel) === null || _a === void 0 ? void 0 : _a.getInitialProperties) ? Object.assign(Object.assign({}, descriptor.designModel.getInitialProperties(omit(initialProps, ['index', 'name']))), {\n      name: initialProps.name,\n      index: initialProps.index\n    }) : initialProps);\n    const Model = descriptor.designModel || RxViewDesignerDefaultActionModel;\n    const actionModel = new Model(this.injector, sandbox);\n    this.models.set(guid, actionModel);\n    return actionModel;\n  }\n  remove(guid) {\n    this.models.delete(guid);\n  }\n  get(guid) {\n    return this.models.get(guid);\n  }\n  ngOnDestroy() {\n    this.models.forEach(model => model.sandbox.onDestroy());\n    this.models.clear();\n  }\n}\nRxActionListModelManagerService.ɵfac = function RxActionListModelManagerService_Factory(t) {\n  return new (t || RxActionListModelManagerService)(i0.ɵɵinject(i0.Injector));\n};\nRxActionListModelManagerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxActionListModelManagerService,\n  factory: RxActionListModelManagerService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxActionListModelManagerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass ActionListEditorDialogComponent extends RxModalClass {\n  constructor(rxViewActionRegistryService, rxStringService, activeModalRef, viewDesignerFacade, rxActionListModelManagerService, rxExpressionEditorService, rxGuidService, translateService, injector) {\n    super(activeModalRef, injector);\n    this.rxViewActionRegistryService = rxViewActionRegistryService;\n    this.rxStringService = rxStringService;\n    this.activeModalRef = activeModalRef;\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxActionListModelManagerService = rxActionListModelManagerService;\n    this.rxExpressionEditorService = rxExpressionEditorService;\n    this.rxGuidService = rxGuidService;\n    this.translateService = translateService;\n    this.injector = injector;\n    this.availableActionDescriptors$ = this.rxViewActionRegistryService.getLicensedActions();\n    this.selectedActions = [];\n    this.config = this.activeModalRef.getData();\n    this.treeWrap = TreeWrap.WrapAll;\n    this.destroyed$ = new ReplaySubject(1);\n    this.isEditorDirtySubject = new BehaviorSubject(false);\n    this.isSaveButtonDisabled$ = this.isEditorDirtySubject.asObservable().pipe(map$1(isDirty => !isDirty));\n    this.availableActionTreeNodes$ = this.availableActionDescriptors$.pipe(map$1(actions => actions.filter(action => !action.hidden).sort((a, b) => a.label.localeCompare(b.label)).map(action => ({\n      data: action,\n      label: action.label\n    }))));\n    this.actionLabelsMap$ = this.availableActionDescriptors$.pipe(map$1(actions => transform(actions, (result, action) => {\n      result[action.name] = action.label;\n    }, {})));\n    this.config.selectedActions = map(this.config.selectedActions, action => Object.assign(Object.assign({}, action), {\n      data: Object.assign(Object.assign({}, action.data), {\n        index: toNumber(action.data.index)\n      })\n    }));\n    this.selectedActions = flow(actions => sortBy(actions, action => action.data.index), actions => map(actions, action => {\n      const descriptor = this.rxViewActionRegistryService.get(action.data.name);\n      this.viewDesignerFacade.setActionDataDictionaryBranch(action.guid, action.data.index, action.data.name);\n      const model = this.rxActionListModelManagerService.create(descriptor, action.guid, action.data);\n      return {\n        isOpen: Boolean(this.config.actionToEdit) && action.guid === this.config.actionToEdit.guid,\n        model,\n        config$: model.sandbox.actionPropertyEditorConfig$.pipe(map$1(config => [{\n          controls: config\n        }])),\n        name: descriptor.name\n      };\n    }))(this.config.selectedActions);\n  }\n  isDirty() {\n    return this.isEditorDirtySubject.getValue();\n  }\n  addAction(actionDescriptor, index = this.selectedActions.length) {\n    const guid = this.rxGuidService.generate();\n    this.viewDesignerFacade.setActionDataDictionaryBranch(guid, index, actionDescriptor.name);\n    const model = this.rxActionListModelManagerService.create(actionDescriptor, guid, {\n      name: actionDescriptor.name,\n      index\n    });\n    this.selectedActions.splice(index, 0, {\n      isOpen: true,\n      model,\n      config$: model.sandbox.actionPropertyEditorConfig$.pipe(map$1(config => [{\n        controls: config\n      }])),\n      name: actionDescriptor.name\n    });\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n    setTimeout(() => {\n      this.accordionTabEls.toArray()[index].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n  }\n  onSave() {\n    const result = this.selectedActions.map(action => {\n      var _a, _b, _c;\n      return {\n        guid: action.model.guid,\n        data: action.model.getPropertiesByName(),\n        children: (_c = (_b = (_a = action.model).getChildren) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : null\n      };\n    });\n    this.activeModalRef.close(result);\n  }\n  removeAction(action) {\n    pull(this.selectedActions, action);\n    this.rxActionListModelManagerService.remove(action.model.guid);\n    this.viewDesignerFacade.removeActionDataDictionaryBranch(action.model.guid);\n    this.markEditorAsDirty();\n  }\n  moveAction(fromIndex, toIndex) {\n    moveItemInArray(this.selectedActions, fromIndex, toIndex);\n    this.updateIndexProp();\n    this.markEditorAsDirty();\n  }\n  toggleOpen(expandAll) {\n    this.selectedActions.forEach(action => action.isOpen = expandAll);\n  }\n  onSelectedActionsListDrop(event) {\n    var _a;\n    const data = event.item.data;\n    if ((_a = data.model) === null || _a === void 0 ? void 0 : _a.guid) {\n      this.moveAction(event.previousIndex, event.currentIndex);\n    } else {\n      this.addAction(data, event.currentIndex);\n    }\n  }\n  openExpressionEditor(model, propertyPath, propertyLabel, isReadOnly = false, element) {\n    this.rxExpressionEditorService.openEditor({\n      property: {\n        path: propertyPath,\n        value: get(model.sandbox.getActionProperties(), propertyPath),\n        label: propertyLabel\n      },\n      isReadOnly,\n      expressionConfigurator: model.getExpressionConfigurator(),\n      legend: [{\n        label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n        icon: 'd-icon-mathematical_function'\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n        icon: 'd-icon-dollar'\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'),\n        icon: 'd-icon-file_o'\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'),\n        icon: 'd-icon-file_o_gear'\n      }, {\n        label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'),\n        icon: 'd-icon-arrow_right_square_input'\n      }],\n      expressionPropertyNavigator: {\n        getProperties: () => {\n          const properties = Array.from(element.querySelectorAll('rx-expression-form-control')).map(controlElement => {\n            const path = controlElement.getAttribute('property-path');\n            return {\n              path,\n              value: get(model.sandbox.getActionProperties(), path),\n              label: controlElement.getAttribute('property-label')\n            };\n          });\n          return of(properties);\n        }\n      }\n    }).pipe(map$1(({\n      path,\n      value\n    }) => {\n      const props = model.sandbox.getActionProperties();\n      const headPropertyName = path in props ? path : toPath(path)[0];\n      return set({\n        [headPropertyName]: cloneDeep(props[headPropertyName])\n      }, path, value);\n    })).subscribe(props => {\n      model.sandbox.updateActionProperties(props);\n      this.markEditorAsDirty();\n    });\n  }\n  onEvent(event, model, element) {\n    if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n      this.openExpressionEditor(model, event.payload.propertyPath, event.payload.propertyLabel, event.payload.isReadOnly, element);\n    }\n  }\n  updateIndexProp() {\n    this.selectedActions.forEach((action, index) => {\n      action.model.sandbox.updateActionProperties({\n        index\n      });\n    });\n    this.viewDesignerFacade.updateActionDataDictionaryBranchOrder(this.selectedActions.reduce((result, action, index) => {\n      result[action.model.guid] = index;\n      return result;\n    }, {}));\n  }\n  markEditorAsDirty() {\n    this.isEditorDirtySubject.next(true);\n  }\n  ngAfterViewInit() {\n    const openActionIndex = findIndex(this.selectedActions, 'isOpen');\n    if (openActionIndex !== -1) {\n      this.accordionTabEls.toArray()[openActionIndex].nativeElement.scrollIntoView({\n        block: 'nearest'\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.isEditorDirtySubject.complete();\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n    this.viewDesignerFacade.removeAllActionDataDictionaryBranches();\n  }\n  cancel() {\n    this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n  }\n}\nActionListEditorDialogComponent.ɵfac = function ActionListEditorDialogComponent_Factory(t) {\n  return new (t || ActionListEditorDialogComponent)(i0.ɵɵdirectiveInject(i5.RxViewActionRegistryService), i0.ɵɵdirectiveInject(i2$1.RxStringService), i0.ɵɵdirectiveInject(i3$3.ActiveModalRef), i0.ɵɵdirectiveInject(ViewDesignerFacade), i0.ɵɵdirectiveInject(RxActionListModelManagerService), i0.ɵɵdirectiveInject(i3$1.RxExpressionEditorService), i0.ɵɵdirectiveInject(i2$1.RxGuidService), i0.ɵɵdirectiveInject(i6.TranslateService), i0.ɵɵdirectiveInject(i0.Injector));\n};\nActionListEditorDialogComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionListEditorDialogComponent,\n  selectors: [[\"rx-action-list-editor-dialog\"]],\n  viewQuery: function ActionListEditorDialogComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AdaptAccordionTabComponent, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accordionTabEls = _t);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([RxActionListModelManagerService]), i0.ɵɵInheritDefinitionFeature],\n  decls: 22,\n  vars: 20,\n  consts: [[1, \"designer-modal-body\", \"modal-body\", \"d-flex\", \"mh-100\"], [1, \"row\", \"flex-grow-1\", \"w-100\"], [\"class\", \"col-4 border-right d-flex flex-column mh-100\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-start\", \"justify-content-between\"], [1, \"d-flex\", \"align-items-center\"], [1, \"mt-2\"], [\"name\", \"question_circle_o\", \"appendToBody\", \"true\", 1, \"ml-2\", 3, \"adaptPopover\"], [\"class\", \"btn-group\", 4, \"ngIf\"], [\"id\", \"selected-action-list\", \"cdkDropList\", \"\", 1, \"designer-modal-accordion-wrapper\", 3, \"cdkDropListDropped\"], [3, \"multiselect\"], [\"class\", \"designer-modal-accordion-content\", \"cdkDrag\", \"\", \"cdkDragLockAxis\", \"y\", 3, \"cdkDragData\", \"cdkDragDisabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"d-flex justify-content-center h-100 align-items-center mt-2\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"adapt-button\", \"\", \"btn-type\", \"primary\", \"type\", \"button\", \"rx-id\", \"save-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"adapt-button\", \"\", \"btn-type\", \"secondary\", \"type\", \"button\", \"rx-id\", \"cancel-button\", 3, \"click\"], [1, \"col-4\", \"border-right\", \"d-flex\", \"flex-column\", \"mh-100\"], [1, \"rx-card\", \"card\", \"flex-grow-1\", \"mt-2\"], [\"class\", \"card-block\", 4, \"ngIf\"], [1, \"card-block\"], [\"cdkDropList\", \"\", \"cdkDropListSortingDisabled\", \"\", 3, \"cdkDropListConnectedTo\", 4, \"ngIf\", \"ngIfElse\"], [\"adaptTreeEmptyStateTemplate\", \"\"], [\"cdkDropList\", \"\", \"cdkDropListSortingDisabled\", \"\", 3, \"cdkDropListConnectedTo\"], [\"filter\", \"true\", 3, \"value\", \"wrap\"], [\"adaptTreeNodeTemplate\", \"\"], [\"class\", \"rx-tree-draggable-node\", \"cdkDrag\", \"\", 3, \"cdkDragData\", 4, \"ngIf\"], [\"cdkDrag\", \"\", 1, \"rx-tree-draggable-node\", 3, \"cdkDragData\"], [3, \"dblclick\"], [\"type\", \"button\", 1, \"rx-button-unstyled\", \"d-icon-plus_circle\", 3, \"click\"], [1, \"rx-tree-node-label\", \"ml-3\"], [1, \"d-flex\", \"justify-content-center\", \"h-100\", \"align-items-center\", \"mt-2\"], [\"type\", \"search\", 1, \"w-100\", 3, \"label\"], [1, \"btn-group\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"expand-all-button\", 3, \"click\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"type\", \"button\", \"rx-id\", \"collapse-all-button\", 3, \"click\"], [\"cdkDrag\", \"\", \"cdkDragLockAxis\", \"y\", 1, \"designer-modal-accordion-content\", 3, \"cdkDragData\", \"cdkDragDisabled\"], [\"container\", \"\"], [\"class\", \"designer-modal-drag-handle d-icon-left-dots\", \"cdkDragHandle\", \"\", 4, \"ngIf\"], [1, \"d-block\", 3, \"isOpen\", \"open\", \"close\"], [1, \"card-title-text\", \"w-100\"], [1, \"designer-modal-card-title-content\"], [1, \"left-header-block\"], [\"class\", \"rx-ellipsis\", \"rx-id\", \"card-title\", 3, \"title\", 4, \"ngIf\"], [\"class\", \"right-header-block\", 4, \"ngIf\"], [1, \"d-block\", 3, \"config\", \"model\", \"isReadOnly\", \"modelChange\", \"editorEvent\"], [\"cdkDragHandle\", \"\", 1, \"designer-modal-drag-handle\", \"d-icon-left-dots\"], [\"rx-id\", \"card-title\", 1, \"rx-ellipsis\", 3, \"title\"], [1, \"right-header-block\"], [1, \"designer-modal-card-title-index-buttons\"], [\"type\", \"button\", \"rx-id\", \"move-down-button\", 1, \"d-icon-left-triangle_down\", \"rx-button-unstyled\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"rx-id\", \"move-up-button\", 1, \"d-icon-left-triangle_up\", \"rx-button-unstyled\", 3, \"disabled\", \"click\"], [\"adapt-button\", \"\", \"size\", \"small\", \"type\", \"button\", \"rx-id\", \"remove-button\", 1, \"d-icon-left-cross_adapt\", \"p-1\", \"pr-4\", \"ml-3\", 3, \"click\"], [\"type\", \"config\", 1, \"w-100\", 3, \"label\"], [\"adapt-button\", \"\", \"btn-type\", \"primary\", \"type\", \"button\", \"rx-id\", \"save-button\", 3, \"disabled\", \"click\"]],\n  template: function ActionListEditorDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ActionListEditorDialogComponent_div_2_Template, 8, 6, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"h4\", 5);\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"adapt-icon\", 6);\n      i0.ɵɵpipe(10, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ActionListEditorDialogComponent_div_11_Template, 7, 6, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 8);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function ActionListEditorDialogComponent_Template_div_cdkDropListDropped_12_listener($event) {\n        return ctx.onSelectedActionsListDrop($event);\n      });\n      i0.ɵɵelementStart(13, \"adapt-accordion\", 9);\n      i0.ɵɵtemplate(14, ActionListEditorDialogComponent_div_14_Template, 13, 17, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, ActionListEditorDialogComponent_div_15_Template, 3, 3, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 12);\n      i0.ɵɵtemplate(17, ActionListEditorDialogComponent_button_17_Template, 4, 6, \"button\", 13);\n      i0.ɵɵelementStart(18, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ActionListEditorDialogComponent_Template_button_click_18_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"translate\");\n      i0.ɵɵpipe(21, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.config.isReadOnly);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"d-flex flex-column mh-100 \", ctx.config.isReadOnly ? \"col\" : \"col-8\", \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 12, \"com.bmc.arsys.rx.client.view-components.action-list.selected-actions.title\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"adaptPopover\", i0.ɵɵpipeBind1(10, 14, \"com.bmc.arsys.rx.client.view-components.action-list.selected-actions.tooltip\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedActions.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"multiselect\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectedActions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.selectedActions.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.config.isReadOnly);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.config.isReadOnly ? i0.ɵɵpipeBind1(20, 16, \"com.bmc.arsys.rx.client.common.close.label\") : i0.ɵɵpipeBind1(21, 18, \"com.bmc.arsys.rx.client.common.cancel.label\"), \" \");\n    }\n  },\n  directives: [i4.NgIf, i3$3.AdaptIconComponent, i3$3.AdaptPopoverDirective, i4$1.CdkDropList, i3$3.AdaptAccordionComponent, i4.NgForOf, i3$3.AdaptButtonComponent, i3$3.AdaptTreeComponent, i3$3.AdaptTreeNodeTemplateDirective, i4$1.CdkDrag, i3$3.AdaptEmptyStateComponent, i3$3.AdaptAccordionTabComponent, i3$1.FormBuilderComponent, i4$1.CdkDragHandle],\n  pipes: [i6.TranslatePipe, i4.AsyncPipe],\n  styles: [\"[_ngcontent-%COMP%]:root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body[_ngcontent-%COMP%]{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content[_ngcontent-%COMP%]{position:relative}.designer-modal-accordion-content.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.designer-modal-drag-handle[_ngcontent-%COMP%]{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content[_ngcontent-%COMP%]{width:100%;display:flex}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%], .designer-modal-card-title-content[_ngcontent-%COMP%]   .right-header-block[_ngcontent-%COMP%]{display:flex;align-items:center}.designer-modal-card-title-content[_ngcontent-%COMP%]   .left-header-block[_ngcontent-%COMP%]{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title[_ngcontent-%COMP%]{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons[_ngcontent-%COMP%]{display:flex;font-size:19px}.rx-card[_ngcontent-%COMP%]{overflow:auto}.rx-tree-draggable-node[_ngcontent-%COMP%]{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview[_ngcontent-%COMP%]{z-index:1200!important}.rx-tree-draggable-node.cdk-drag[_ngcontent-%COMP%]{opacity:1}.rx-tree-node-label[_ngcontent-%COMP%]{word-break:break-all}rx-form-builder[_ngcontent-%COMP%]{max-width:400px}[_nghost-%COMP%]  .a-tree__node_leaf .a-tree__toggle{display:none}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListEditorDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-action-list-editor-dialog',\n      templateUrl: './action-list-editor-dialog.component.html',\n      styleUrls: ['./action-list-editor-dialog.component.scss'],\n      providers: [RxActionListModelManagerService]\n    }]\n  }], function () {\n    return [{\n      type: i5.RxViewActionRegistryService\n    }, {\n      type: i2$1.RxStringService\n    }, {\n      type: i3$3.ActiveModalRef\n    }, {\n      type: ViewDesignerFacade\n    }, {\n      type: RxActionListModelManagerService\n    }, {\n      type: i3$1.RxExpressionEditorService\n    }, {\n      type: i2$1.RxGuidService\n    }, {\n      type: i6.TranslateService\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    accordionTabEls: [{\n      type: ViewChildren,\n      args: [AdaptAccordionTabComponent, {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\nclass ActionListEditorDialogModule {}\nActionListEditorDialogModule.ɵfac = function ActionListEditorDialogModule_Factory(t) {\n  return new (t || ActionListEditorDialogModule)();\n};\nActionListEditorDialogModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ActionListEditorDialogModule,\n  declarations: [ActionListEditorDialogComponent],\n  imports: [CommonModule, AdaptRxSearchModule, AdaptButtonModule, AdaptAccordionModule, DragDropModule, AdaptEmptyStateModule, ExpressionEditorModule, FormsModule, RxFormBuilderModule, AdaptIconModule, AdaptPopoverModule, TranslateModule, AdaptTreeModule],\n  exports: [ActionListEditorDialogComponent]\n});\nActionListEditorDialogModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AdaptRxSearchModule, AdaptButtonModule, AdaptAccordionModule, DragDropModule, AdaptEmptyStateModule, ExpressionEditorModule, FormsModule, RxFormBuilderModule, AdaptIconModule, AdaptPopoverModule, TranslateModule, AdaptTreeModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListEditorDialogModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ActionListEditorDialogComponent],\n      exports: [ActionListEditorDialogComponent],\n      entryComponents: [ActionListEditorDialogComponent],\n      imports: [CommonModule, AdaptRxSearchModule, AdaptButtonModule, AdaptAccordionModule, DragDropModule, AdaptEmptyStateModule, ExpressionEditorModule, FormsModule, RxFormBuilderModule, AdaptIconModule, AdaptPopoverModule, TranslateModule, AdaptTreeModule]\n    }]\n  }], null, null);\n})();\nclass ActionListControlComponent extends ValueAccessor {\n  constructor(rxModalService, rxViewActionRegistryService) {\n    super();\n    this.rxModalService = rxModalService;\n    this.rxViewActionRegistryService = rxViewActionRegistryService;\n    this.availableActions$ = this.rxViewActionRegistryService.getLicensedActions();\n    this.selectedActions = [];\n    this.availableActions$.subscribe(actions => {\n      this.actionLabelsMap = transform(actions, (result, action) => {\n        result[action.name] = action.label;\n      }, {});\n    });\n  }\n  focus(data) {\n    if ((data === null || data === void 0 ? void 0 : data.actionIndex) >= 0) {\n      this.openActionSelector(this.selectedActions.find(item => item.data.index === data.actionIndex));\n    } else {\n      this.openActionSelector();\n    }\n  }\n  openActionSelector(actionToEdit) {\n    this.rxModalService.openModal({\n      title: 'Edit actions',\n      data: {\n        selectedActions: this.value,\n        actionToEdit,\n        isReadOnly: this.isDisabled\n      },\n      content: ActionListEditorDialogComponent,\n      size: OpenViewActionModalSize.Large,\n      testID: 'edit-actions'\n    }).then(actions => {\n      this.value = actions;\n    }).catch(noop);\n  }\n  onSetValue() {\n    this.updateSortedActionsList();\n  }\n  onWriteValue(value) {\n    this.updateSortedActionsList();\n  }\n  removeAction(action) {\n    this.value = without(this.value, action);\n  }\n  editAction(action) {\n    this.openActionSelector(action);\n  }\n  updateSortedActionsList() {\n    this.selectedActions = sortBy(this.value, action => action.data.index);\n  }\n}\nActionListControlComponent.ɵfac = function ActionListControlComponent_Factory(t) {\n  return new (t || ActionListControlComponent)(i0.ɵɵdirectiveInject(i5$1.RxModalService), i0.ɵɵdirectiveInject(i5.RxViewActionRegistryService));\n};\nActionListControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionListControlComponent,\n  selectors: [[\"rx-action-list-control\"]],\n  inputs: {\n    options: \"options\",\n    tooltip: \"tooltip\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: ActionListControlComponent,\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 3,\n  consts: [[\"rx-id\", \"open-modal-button\", \"btn-type\", \"tertiary\", 1, \"px-0\", \"py-0\", \"pb-1\", 3, \"click\"], [\"name\", \"plus_circle\", 1, \"mr-1\"], [\"class\", \"align-middle\", 4, \"ngIf\"], [\"rx-id\", \"columns\"], [\"class\", \"text-tertiary\", 4, \"ngIf\"], [\"class\", \"list-unstyled mb-0\", 4, \"ngIf\"], [1, \"align-middle\"], [1, \"letter-space\"], [\"appendToBody\", \"true\", 3, \"name\", \"adaptPopover\"], [1, \"text-tertiary\"], [1, \"list-unstyled\", \"mb-0\"], [\"class\", \"border px-2 py-1 mb-1 d-flex align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"px-2\", \"py-1\", \"mb-1\", \"d-flex\", \"align-items-center\"], [1, \"mr-auto\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"size\", \"small\", \"type\", \"button\", 1, \"d-icon-left-pencil\", \"p-1\", 3, \"click\"], [\"class\", \"d-icon-left-cross_adapt p-1\", \"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"size\", \"small\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"adapt-button\", \"\", \"btn-type\", \"tertiary\", \"size\", \"small\", \"type\", \"button\", 1, \"d-icon-left-cross_adapt\", \"p-1\", 3, \"click\"]],\n  template: function ActionListControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"adapt-button\", 0);\n      i0.ɵɵlistener(\"click\", function ActionListControlComponent_Template_adapt_button_click_0_listener() {\n        return ctx.openActionSelector();\n      });\n      i0.ɵɵelement(1, \"adapt-icon\", 1);\n      i0.ɵɵtext(2, \" Edit actions\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ActionListControlComponent_span_3_Template, 3, 2, \"span\", 2);\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ActionListControlComponent_span_5_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, ActionListControlComponent_ul_6_Template, 2, 1, \"ul\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.tooltip);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedActions.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedActions.length > 0);\n    }\n  },\n  directives: [i3$3.AdaptButtonComponent, i3$3.AdaptIconComponent, i4.NgIf, i3$3.AdaptPopoverDirective, i4.NgForOf],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-action-list-control',\n      templateUrl: './action-list-control.component.html',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ActionListControlComponent,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i5$1.RxModalService\n    }, {\n      type: i5.RxViewActionRegistryService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }]\n  });\n})();\nclass ActionListControlModule {}\nActionListControlModule.ɵfac = function ActionListControlModule_Factory(t) {\n  return new (t || ActionListControlModule)();\n};\nActionListControlModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ActionListControlModule,\n  declarations: [ActionListControlComponent],\n  imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule],\n  exports: [ActionListControlComponent]\n});\nActionListControlModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListControlModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ActionListControlComponent],\n      exports: [ActionListControlComponent],\n      entryComponents: [ActionListControlComponent],\n      imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]\n    }]\n  }], null, null);\n})();\nclass RxComponentPermissionEditorWidgetComponent {\n  constructor(viewDesignerFacade) {\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.permissions = [];\n    this.destroyed$ = new ReplaySubject(1);\n  }\n  ngOnInit() {\n    this.viewDesignerFacade.getComponentPermissions(this.options.componentGuid).pipe(takeUntil(this.destroyed$)).subscribe(permissions => {\n      this.permissions = permissions;\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n  onPermissionsChange(permissions) {\n    this.viewDesignerFacade.updateComponentModel(this.options.componentGuid, {\n      permissions\n    });\n  }\n}\nRxComponentPermissionEditorWidgetComponent.ɵfac = function RxComponentPermissionEditorWidgetComponent_Factory(t) {\n  return new (t || RxComponentPermissionEditorWidgetComponent)(i0.ɵɵdirectiveInject(ViewDesignerFacade));\n};\nRxComponentPermissionEditorWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RxComponentPermissionEditorWidgetComponent,\n  selectors: [[\"rx-component-permission-editor-widget\"]],\n  inputs: {\n    options: \"options\",\n    isDisabled: \"isDisabled\"\n  },\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"options\", \"disabled\", \"ngModel\", \"ngModelChange\"]],\n  template: function RxComponentPermissionEditorWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"rx-permission-editor\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function RxComponentPermissionEditorWidgetComponent_Template_rx_permission_editor_ngModelChange_0_listener($event) {\n        return ctx.permissions = $event;\n      })(\"ngModelChange\", function RxComponentPermissionEditorWidgetComponent_Template_rx_permission_editor_ngModelChange_0_listener($event) {\n        return ctx.onPermissionsChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.options)(\"disabled\", ctx.isDisabled)(\"ngModel\", ctx.permissions);\n    }\n  },\n  directives: [i3$1.RxPermissionEditorComponent, i3$2.NgControlStatus, i3$2.NgModel],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxComponentPermissionEditorWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-component-permission-editor-widget',\n      templateUrl: './component-permission-editor-widget.component.html'\n    }]\n  }], function () {\n    return [{\n      type: ViewDesignerFacade\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }]\n  });\n})();\nclass RxComponentPermissionEditorWidgetModule {}\nRxComponentPermissionEditorWidgetModule.ɵfac = function RxComponentPermissionEditorWidgetModule_Factory(t) {\n  return new (t || RxComponentPermissionEditorWidgetModule)();\n};\nRxComponentPermissionEditorWidgetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RxComponentPermissionEditorWidgetModule,\n  declarations: [RxComponentPermissionEditorWidgetComponent],\n  imports: [CommonModule, FormsModule, RxPermissionEditorModule]\n});\nRxComponentPermissionEditorWidgetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, RxPermissionEditorModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxComponentPermissionEditorWidgetModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RxComponentPermissionEditorWidgetComponent],\n      imports: [CommonModule, FormsModule, RxPermissionEditorModule]\n    }]\n  }], null, null);\n})();\nclass RxViewCustomizationOptionsModule {}\nRxViewCustomizationOptionsModule.ɵfac = function RxViewCustomizationOptionsModule_Factory(t) {\n  return new (t || RxViewCustomizationOptionsModule)();\n};\nRxViewCustomizationOptionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RxViewCustomizationOptionsModule,\n  declarations: [RxViewCustomizationOptionsComponent],\n  imports: [CommonModule, FormsModule, CustomizationOptionsModule]\n});\nRxViewCustomizationOptionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, CustomizationOptionsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewCustomizationOptionsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, CustomizationOptionsModule],\n      declarations: [RxViewCustomizationOptionsComponent]\n    }]\n  }], null, null);\n})();\nclass ActionListWidgetComponent extends InspectorWidgetBase {\n  constructor(injector) {\n    super(injector);\n    this.injector = injector;\n    this.actions = [];\n    // @ts-ignore\n    this.modelSandbox = this.designerItemModel.sandbox;\n    this.destroyed$ = new ReplaySubject(1);\n  }\n  ngOnInit() {\n    const actions$ = this.modelSandbox.getChildComponents();\n    actions$.pipe(takeUntil(this.destroyed$)).subscribe(actions => {\n      this.actions = actions;\n    });\n  }\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n  onActionsChange(actions) {\n    this.modelSandbox.setChildren(this.getActionComponentPayloads(actions));\n  }\n  focus(data) {\n    this.actionListControlComponent.focus(data);\n  }\n  getActionComponentPayloads(actionInspectorModels) {\n    return actionInspectorModels.map(model => Object.assign({\n      type: RxViewComponentType.Action\n    }, model));\n  }\n}\nActionListWidgetComponent.ɵfac = function ActionListWidgetComponent_Factory(t) {\n  return new (t || ActionListWidgetComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n};\nActionListWidgetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionListWidgetComponent,\n  selectors: [[\"rx-action-list-widget\"]],\n  viewQuery: function ActionListWidgetComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(ActionListControlComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionListControlComponent = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[3, \"disabled\", \"ngModel\", \"tooltip\", \"ngModelChange\"]],\n  template: function ActionListWidgetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"rx-action-list-control\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ActionListWidgetComponent_Template_rx_action_list_control_ngModelChange_0_listener($event) {\n        return ctx.actions = $event;\n      })(\"ngModelChange\", function ActionListWidgetComponent_Template_rx_action_list_control_ngModelChange_0_listener($event) {\n        return ctx.onActionsChange($event);\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(1, 3, ctx.modelSandbox.isViewReadOnly$))(\"ngModel\", ctx.actions)(\"tooltip\", ctx.options == null ? null : ctx.options.tooltip);\n    }\n  },\n  directives: [ActionListControlComponent, i3$2.NgControlStatus, i3$2.NgModel],\n  pipes: [i4.AsyncPipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListWidgetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-action-list-widget',\n      templateUrl: './action-list-widget.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, {\n    actionListControlComponent: [{\n      type: ViewChild,\n      args: [ActionListControlComponent]\n    }]\n  });\n})();\nclass ActionListWidgetModule {}\nActionListWidgetModule.ɵfac = function ActionListWidgetModule_Factory(t) {\n  return new (t || ActionListWidgetModule)();\n};\nActionListWidgetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ActionListWidgetModule,\n  declarations: [ActionListWidgetComponent],\n  imports: [CommonModule, ActionListControlModule, FormsModule]\n});\nActionListWidgetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ActionListControlModule, FormsModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionListWidgetModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ActionListWidgetComponent],\n      imports: [CommonModule, ActionListControlModule, FormsModule]\n    }]\n  }], null, null);\n})();\nclass ViewDesignerComponentModel {\n  constructor(injector, sandbox) {\n    this.injector = injector;\n    this.sandbox = sandbox;\n  }\n  get expressionConfigurator() {\n    if (!this._expressionConfigurator) {\n      this._expressionConfigurator = new (this.sandbox.descriptor.expressionConfigurator || RxViewComponentExpressionConfigurator)(this.injector, this.sandbox.guid, this, this.sandbox.descriptor.type);\n    }\n    return this._expressionConfigurator;\n  }\n  getExpressionForProperty(propertyPath) {\n    return `\\${view.components.${this.sandbox.guid}.${propertyPath}}`;\n  }\n}\nconst RX_AVAILABLE_ON_DEVICES_OPTIONS = [{\n  id: RxDevice.Desktop,\n  name: 'Desktop'\n}, {\n  id: RxDevice.Tablet,\n  name: 'Tablet'\n}, {\n  id: RxDevice.Mobile,\n  name: 'Mobile'\n}];\nfunction getAvailableOnDevicesInspectorConfig() {\n  return {\n    name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n    component: SelectFormControlComponent,\n    options: {\n      label: 'Available on devices',\n      options: RX_AVAILABLE_ON_DEVICES_OPTIONS,\n      multiple: true,\n      required: true,\n      hideSelectAllButton: true,\n      hideDeselectAllButton: true\n    }\n  };\n}\nfunction getHiddenFieldInspectorConfig() {\n  return {\n    name: RX_HIDDEN_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Hidden'\n    }\n  };\n}\nfunction getDisabledFieldInspectorConfig() {\n  return {\n    name: RX_DISABLED_PROP_NAME,\n    component: OptionalExpressionInspectorControlComponent,\n    options: {\n      label: 'Disabled'\n    }\n  };\n}\nfunction getStylesFieldInspectorConfig(autocompleteValues = []) {\n  return {\n    name: RX_STYLES_PROP_NAME,\n    component: TagsFormControlComponent,\n    options: {\n      label: 'CSS classes',\n      placeholder: 'Add CSS classes',\n      tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n      errorCheck: validateCssClassName,\n      autocompleteValues: autocompleteValues\n    }\n  };\n}\nfunction getStandardPropsInspectorConfigs() {\n  return [getHiddenFieldInspectorConfig(), getAvailableOnDevicesInspectorConfig(), getStylesFieldInspectorConfig()];\n}\nclass RxViewActionValidatorService {\n  constructor(rxViewActionRegistryService, rxStringService, rxLogService, rxViewExpressionValidatorService) {\n    this.rxViewActionRegistryService = rxViewActionRegistryService;\n    this.rxStringService = rxStringService;\n    this.rxLogService = rxLogService;\n    this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n  }\n  validate(actionsDesignData, propertyName) {\n    const issues = flow(actions => actions.map(({\n      data\n    }) => {\n      const descriptor = this.rxViewActionRegistryService.get(data.name);\n      return [of(this.validateRequiredProps(data, descriptor, propertyName)), this.performCustomValidation(data, descriptor, propertyName), this.validateExpressions(data, descriptor, propertyName)];\n    }), flatten)(actionsDesignData);\n    return combineLatest([of(this.validateActionSequence(actionsDesignData, propertyName)), ...issues]).pipe(map$1(flatten));\n  }\n  performCustomValidation(actionProps, descriptor, issuePropertyName) {\n    const designManager = this.rxViewActionRegistryService.getDesignManager(descriptor.name);\n    return designManager ? designManager.validate(actionProps, issuePropertyName).pipe(map$1(issues => issues.map(issue => Object.assign(Object.assign({}, issue), {\n      data: {\n        actionIndex: actionProps.index\n      }\n    })))) : of([]);\n  }\n  validateRequiredProps(actionProps, descriptor, issuePropertyName) {\n    return flow(descriptorParams => descriptorParams.filter(param => param.isRequired === true && this.rxStringService.isEmptySafe(actionProps[param.name])), descriptorParams => descriptorParams.map(param => ({\n      type: 'error',\n      description: `${descriptor.label} action: ${param.label || param.name} cannot be blank.`,\n      propertyName: issuePropertyName,\n      data: {\n        actionIndex: actionProps.index\n      }\n    })))(descriptor.parameters);\n  }\n  validateExpressions(actionProps, descriptor, issuePropertyName) {\n    const actionIssues = descriptor.parameters.filter(paramDescriptor => paramDescriptor.enableExpressionEvaluation === true && actionProps[paramDescriptor.name]).map(paramDescriptor => this.rxViewExpressionValidatorService.validate(actionProps[paramDescriptor.name], issuePropertyName, paramDescriptor.label || paramDescriptor.name, paramDescriptor.evaluatorService).pipe(map$1(issues => issues.map(issue => Object.assign(Object.assign({}, issue), {\n      description: `${descriptor.label} action: ${issue.description}`,\n      data: {\n        actionIndex: actionProps.index\n      }\n    })))));\n    return actionIssues.length ? combineLatest(actionIssues).pipe(map$1(flatten)) : of([]);\n  }\n  validateActionSequence(actions, issuePropertyName) {\n    return flow(actionsDesignData => map(actionsDesignData, ({\n      data\n    }) => {\n      const descriptor = this.rxViewActionRegistryService.get(data.name);\n      return descriptor ? map(data, (propertyValue, propertyName) => {\n        var _a;\n        if (((_a = descriptor.parameters.find(param => param.name === propertyName)) === null || _a === void 0 ? void 0 : _a.enableExpressionEvaluation) && this.rxStringService.isNonEmptyString(propertyValue)) {\n          // Extract <ID> from ${view.components.<ID>.<Path>}\n          const matches = propertyValue.match(/\\${view\\.components\\.([0-9a-z-]+)\\..+}/);\n          if (matches && matches[1]) {\n            const referencedAction = find(actionsDesignData, {\n              guid: matches[1]\n            });\n            if (Number(referencedAction === null || referencedAction === void 0 ? void 0 : referencedAction.data.index) > Number(data.index)) {\n              return {\n                type: 'error',\n                description: `${descriptor.label} action: invalid expression for ${propertyName}.`,\n                propertyName: issuePropertyName\n              };\n            }\n          }\n        }\n      }) : [];\n    }), flatten, compact)(actions);\n  }\n}\nRxViewActionValidatorService.ɵfac = function RxViewActionValidatorService_Factory(t) {\n  return new (t || RxViewActionValidatorService)(i0.ɵɵinject(i5.RxViewActionRegistryService), i0.ɵɵinject(i2$1.RxStringService), i0.ɵɵinject(i3.RxLogService), i0.ɵɵinject(RxViewExpressionValidatorService));\n};\nRxViewActionValidatorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewActionValidatorService,\n  factory: RxViewActionValidatorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewActionValidatorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i5.RxViewActionRegistryService\n    }, {\n      type: i2$1.RxStringService\n    }, {\n      type: i3.RxLogService\n    }, {\n      type: RxViewExpressionValidatorService\n    }];\n  }, null);\n})();\nclass ComponentSandbox {\n  constructor(injector, guid, descriptor) {\n    this.injector = injector;\n    this.guid = guid;\n    this.descriptor = descriptor;\n    this.viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n    this.systemActions$ = this.injector.get(Actions);\n    this.viewDesignerDispatcher = this.injector.get(ViewDesignerDispatcher);\n    this.rxViewDesignerModels = this.injector.get(RxViewDesignerModels);\n    this.childModelsInitialized$ = new BehaviorSubject(false);\n    this.dispatcher$ = new Subject();\n    this.breadcrumbs$ = new ReplaySubject(1);\n    this.setUpPublicStreams();\n    this.viewDesignerFacade.getComponentType(guid).pipe(take(1)).subscribe(componentType => this.componentType = componentType);\n    this.viewDesignerFacade.getComponentModel(this.guid).pipe(map$1(model => Boolean(model.lastUpdateTime || model.name)), switchMap(isExistingViewComponent => {\n      if (isExistingViewComponent) {\n        return this.viewDesignerFacade.viewModelsInitialized$;\n      } else {\n        return of(null);\n      }\n    }), take(1), takeUntil(this.destroyed$)).subscribe(() => {\n      this.childModelsInitialized$.next(true);\n    });\n    this.viewModelsInitialized$ = this.viewDesignerFacade.viewModelsInitialized$.pipe(takeUntil(this.destroyed$));\n    // for optimization reasons postpone emit of breadcrumbs till component gets selected\n    this.isComponentSelected$.pipe(filter(isSelected => isSelected), first(), switchMap(() => this.breadcrumbs$), distinctUntilChanged(), takeUntil(this.destroyed$)).subscribe(label => {\n      this.dispatcher$.next(setBreadcrumbs({\n        guid: this.guid,\n        label\n      }));\n    });\n    merge(\n    // skip initial batch of setValidationIssues actions that are emitted during view designer initialization with empty payload\n    this.dispatcher$.pipe(ofType(setValidationIssues), skipWhile(action => action.issues.length === 0)), this.dispatcher$.pipe(filter(action => action.type !== setValidationIssues.type))).pipe(takeUntil(this.destroyed$)).subscribe(action => this.viewDesignerDispatcher.dispatch(action));\n    // complete created subjects\n    this.destroyed$.subscribe(() => {\n      this.childModelsInitialized$.complete();\n      this.dispatcher$.complete();\n      this.breadcrumbs$.complete();\n    });\n  }\n  createError(description, propertyName, disableCorrection) {\n    return {\n      type: 'error',\n      description,\n      propertyName,\n      disableCorrection\n    };\n  }\n  createWarning(description, propertyName, disableCorrection) {\n    return {\n      type: 'warning',\n      description,\n      propertyName,\n      disableCorrection\n    };\n  }\n  getComponent(guid) {\n    return this.viewDesignerFacade.getComponent(guid);\n  }\n  getChildComponents(filterPredicate) {\n    return this.childModelsInitialized$.asObservable().pipe(filter(Boolean), switchMapTo(this.viewDesignerFacade.getChildComponents(this.guid, filterPredicate)), takeUntil(this.destroyed$));\n  }\n  getChildComponentsTree() {\n    return this.childModelsInitialized$.asObservable().pipe(filter(isInitialized => isInitialized), switchMapTo(this.viewDesignerFacade.getChildComponentTree(this.guid)), shareReplay(1), takeUntil(this.destroyed$));\n  }\n  getChildComponentGuids(filterPredicate, recursive = false) {\n    return this.childModelsInitialized$.asObservable().pipe(filter(Boolean), switchMapTo(this.viewDesignerFacade.getChildComponentGuids(this.guid, recursive, filterPredicate)), takeUntil(this.destroyed$));\n  }\n  setChildren(data, parentGuid) {\n    this.dispatcher$.next(setChildComponents({\n      payload: {\n        guid: parentGuid || this.guid,\n        data\n      }\n    }));\n  }\n  setChildrenByType(data, types) {\n    this.dispatcher$.next(setChildComponents({\n      payload: {\n        guid: this.guid,\n        data,\n        types\n      }\n    }));\n  }\n  getParentComponentGuid(componentType) {\n    return this.viewDesignerFacade.getParentComponentGuid(this.guid, componentType).pipe(distinctUntilChanged(), takeUntil(this.destroyed$));\n  }\n  setValidationIssues(issues) {\n    this.dispatcher$.next(setValidationIssues({\n      issues,\n      guid: this.guid\n    }));\n  }\n  updateComponentProperties(properties) {\n    this.viewDesignerFacade.updateComponentProperties(this.guid, properties);\n  }\n  getComponentPropertyValue(propertyName, componentGuid = this.guid) {\n    return this.viewDesignerFacade.getComponentPropertyValue(componentGuid, propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n  getViewPropertyValue(propertyName) {\n    return this.viewDesignerFacade.getViewPropertyValue(propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n  updateInspectorConfig(inspectorConfig) {\n    this.viewDesignerFacade.setComponentInspector(this.guid, inspectorConfig);\n  }\n  setBreadcrumbs(label) {\n    this.breadcrumbs$.next(label);\n  }\n  addComponent(data) {\n    const dataArray = castArray(data);\n    const actionPayload = dataArray.map(component => Object.assign(Object.assign({}, component), {\n      parentGuid: this.guid\n    }));\n    this.dispatcher$.next(addNewComponents({\n      payload: actionPayload\n    }));\n  }\n  selectComponent(guid) {\n    this.dispatcher$.next(selectComponent({\n      guid\n    }));\n  }\n  removeComponents(guids, selectParent) {\n    this.viewDesignerFacade.removeViewComponents(guids, selectParent);\n  }\n  moveComponent(guid, insertIndex, targetGuid) {\n    const data = {\n      guid\n    };\n    const columnIndex = 0;\n    const outletName = RX_VIEW_DEFINITION.defaultOutletName;\n    this.dispatcher$.next(insertComponent({\n      data,\n      insertIndex,\n      columnIndex,\n      outletName,\n      targetGuid\n    }));\n  }\n  setLayout(cols) {\n    this.dispatcher$.next(setComponentLayout({\n      guid: this.guid,\n      cols\n    }));\n  }\n  getLayout(guid) {\n    return this.viewDesignerFacade.getComponentLayout(guid).pipe(shareReplay(1), takeUntil(this.destroyed$));\n  }\n  setCommonDataDictionary(dataDictionaryBranch) {\n    this.viewDesignerFacade.setComponentCommonDataDictionaryBranch(this.guid, dataDictionaryBranch);\n  }\n  setSettablePropertiesDataDictionary(componentName, dataDictionary) {\n    this.viewDesignerFacade.setComponentSettablePropertiesDataDictionary(this.guid, componentName, dataDictionary);\n  }\n  getComponentModel(guid) {\n    return this.rxViewDesignerModels.get(guid);\n  }\n  getComponentsByType(type) {\n    return this.viewDesignerFacade.getComponentsByType(type).pipe(takeUntil(this.destroyed$));\n  }\n  setUpPublicStreams() {\n    const viewComponentsRemovedAction$ = this.systemActions$.pipe(ofType(componentsRemoved), filter(action => action.guids.includes(this.guid)));\n    this.destroyed$ = merge(viewComponentsRemovedAction$, this.viewDesignerFacade.initViewDesigner$, this.viewDesignerFacade.destroyViewDesigner$).pipe(mapTo(true), first());\n    this.componentProperties$ = this.viewDesignerFacade.getComponentProperties(this.guid).pipe(filter(Boolean), takeUntil(this.destroyed$), shareReplay(1));\n    this.isComponentSelected$ = this.systemActions$.pipe(ofType(selectComponent), map$1(({\n      guid\n    }) => guid === this.guid), distinctUntilChanged(), startWith(false), takeUntil(this.destroyed$), shareReplay(1));\n    this.isViewReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n  }\n}\nclass RxViewExpressionValidatorRegistryService {\n  constructor(rxViewComponentRegistryService, viewDesignerFacade, rxViewExpressionValidatorService) {\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.viewDesignerFacade = viewDesignerFacade;\n    this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n    this.issuesObservableMap = new Map();\n  }\n  registerComponents(guids) {\n    guids.forEach(guid => this.issuesObservableMap.set(guid, this.getComponentValidationIssues(guid)));\n    this.initValidation();\n  }\n  unregisterComponents(guids) {\n    guids.forEach(guid => this.issuesObservableMap.delete(guid));\n    this.initValidation();\n  }\n  unregisterAllComponents() {\n    var _a;\n    this.issuesObservableMap.clear();\n    (_a = this.validateSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n  initValidation() {\n    var _a;\n    (_a = this.validateSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this.validateSubscription = combineLatest(Array.from(this.issuesObservableMap.entries()).map(([guid, issues$]) => issues$.pipe(map$1(issues => ({\n      [guid]: issues\n    }))))).pipe(map$1(issuesByComponentGuid => merge$1({}, ...issuesByComponentGuid)), skipWhile(issuesByComponentGuid => every(Object.values(issuesByComponentGuid), isEmpty)),\n    // debounceTime will allow Set expression validation issues action to be executed once for improved performance.\n    debounceTime(0)).subscribe(issues => {\n      this.viewDesignerFacade.setExpressionValidationIssues(issues);\n    });\n  }\n  getComponentValidationIssues(guid) {\n    return this.viewDesignerFacade.getComponentType(guid).pipe(take(1), switchMap(componentType => {\n      const descriptor = this.rxViewComponentRegistryService.get(componentType);\n      const expressionProps = filter$1(descriptor === null || descriptor === void 0 ? void 0 : descriptor.properties, {\n        enableExpressionEvaluation: true\n      });\n      const expressionPropertyNames = map(expressionProps, 'name');\n      const descriptorPropMap = new Map(expressionProps.map(prop => [prop.name, prop]));\n      return expressionPropertyNames.length ? combineLatest(expressionPropertyNames.map(propertyName => this.viewDesignerFacade.getComponentPropertyValue(guid, propertyName).pipe(switchMap(propertyValue => this.rxViewExpressionValidatorService.validate(propertyValue, propertyName, descriptorPropMap.get(propertyName).label, descriptorPropMap.get(propertyName).evaluatorService).pipe(takeUntil(this.viewDesignerFacade.allComponentGuids$.pipe(filter(guids => !guids.has(guid))))))))).pipe(map$1(flatten)) : of([]);\n    }), publishReplay(1), refCount());\n  }\n}\nRxViewExpressionValidatorRegistryService.ɵfac = function RxViewExpressionValidatorRegistryService_Factory(t) {\n  return new (t || RxViewExpressionValidatorRegistryService)(i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(ViewDesignerFacade), i0.ɵɵinject(RxViewExpressionValidatorService));\n};\nRxViewExpressionValidatorRegistryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewExpressionValidatorRegistryService,\n  factory: RxViewExpressionValidatorRegistryService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewExpressionValidatorRegistryService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: ViewDesignerFacade\n    }, {\n      type: RxViewExpressionValidatorService\n    }];\n  }, null);\n})();\nclass RxViewDesignerStateHelperService {\n  getInitialComponentProperties(initialProperties, componentDescriptor) {\n    var _a;\n    let result = initialProperties;\n    if (isFunction((_a = componentDescriptor.designComponentModel) === null || _a === void 0 ? void 0 : _a.getInitialProperties)) {\n      result = componentDescriptor.designComponentModel.getInitialProperties(initialProperties);\n    }\n    return result;\n  }\n  getDefaultComponentPermissions(componentDescriptor) {\n    var _a;\n    let permissions = null;\n    if (isFunction((_a = componentDescriptor.designComponentModel) === null || _a === void 0 ? void 0 : _a.getDefaultPermissions)) {\n      permissions = componentDescriptor.designComponentModel.getDefaultPermissions();\n    }\n    return permissions;\n  }\n}\nRxViewDesignerStateHelperService.ɵfac = function RxViewDesignerStateHelperService_Factory(t) {\n  return new (t || RxViewDesignerStateHelperService)();\n};\nRxViewDesignerStateHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxViewDesignerStateHelperService,\n  factory: RxViewDesignerStateHelperService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxViewDesignerStateHelperService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ViewDesignerComponentEffects {\n  constructor(actions$, injector, viewDesignerModels, rxGuidService, store$, rxViewComponentRegistryService, rxViewDesignerInspectorService, rxViewExpressionValidatorRegistryService, rxViewDesignerStateHelperService, rxViewDataDictionaryStoreService) {\n    this.actions$ = actions$;\n    this.injector = injector;\n    this.viewDesignerModels = viewDesignerModels;\n    this.rxGuidService = rxGuidService;\n    this.store$ = store$;\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n    this.rxViewExpressionValidatorRegistryService = rxViewExpressionValidatorRegistryService;\n    this.rxViewDesignerStateHelperService = rxViewDesignerStateHelperService;\n    this.rxViewDataDictionaryStoreService = rxViewDataDictionaryStoreService;\n    this.initializeComponentModel$ = this.actions$.pipe(ofType(initializeComponentModels), tap(action => {\n      action.payload.forEach(({\n        componentModel\n      }) => {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n        const sandbox = new ComponentSandbox(this.injector, componentModel.guid, componentDescriptor);\n        const model = new componentDescriptor.designComponentModel(this.injector, sandbox);\n        if (isFunction(model.rxInit)) {\n          model.rxInit();\n        }\n        this.viewDesignerModels.set(componentModel.guid, model);\n      });\n    }), map$1(() => viewModelsInitialized()));\n    this.registerComponentsValidation$ = this.actions$.pipe(ofType(initializeDataComponentModels, initializeComponentModels), tap(action => this.rxViewExpressionValidatorRegistryService.registerComponents(map(action.payload, payload => payload.componentModel.guid))));\n    this.onComponentsRemoved$ = this.actions$.pipe(ofType(componentsRemoved), tap(({\n      guids\n    }) => {\n      this.rxViewExpressionValidatorRegistryService.unregisterComponents(guids);\n      this.rxViewDataDictionaryStoreService.removeDataDictionaryForComponents(guids);\n    }));\n    this.unregisterAllComponentsValidation$ = this.actions$.pipe(ofType(initViewDesigner, destroyViewDesigner), tap(() => this.rxViewExpressionValidatorRegistryService.unregisterAllComponents()));\n    this.insertComponent$ = this.actions$.pipe(ofType(insertComponent), map$1(payload => {\n      const newPayload = {\n        insertIndex: payload.insertIndex,\n        columnIndex: payload.columnIndex,\n        outletName: payload.outletName,\n        parentGuid: payload.targetGuid\n      };\n      return payload.data.guid ? moveComponent(Object.assign(Object.assign({}, newPayload), {\n        guid: payload.data.guid\n      })) : addNewComponents({\n        payload: [Object.assign(Object.assign({}, newPayload), {\n          type: payload.data.type,\n          selectComponent: true,\n          propertiesByName: payload.data.initialPropertiesByName\n        })]\n      });\n    }));\n    this.addNewComponent$ = this.actions$.pipe(ofType(addNewComponents), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([action, viewComponentsState]) => {\n      const initializeComponentModelPayloads = [];\n      const initializeDataComponentModelPayloads = [];\n      const componentGuidsToSelect = [];\n      action.payload.forEach(component => {\n        this.processAddComponentPayload(component, initializeComponentModelPayloads, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState);\n      });\n      return [initializeComponentModelPayloads.length ? initializeComponentModels({\n        payload: initializeComponentModelPayloads\n      }) : null, initializeDataComponentModelPayloads.length ? initializeDataComponentModels({\n        payload: initializeDataComponentModelPayloads\n      }) : null, componentGuidsToSelect.length ? selectComponent({\n        guid: last(componentGuidsToSelect)\n      }) : null].filter(Boolean);\n    }));\n    this.removeComponent$ = this.actions$.pipe(ofType(removeComponents), filter(({\n      guids\n    }) => !isEmpty(guids)), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([payload, viewComponentsState]) => {\n      const guidsToRemove = payload.guids.reduce((result, guid) => {\n        const removedComponentModel = viewComponentsState[guid];\n        if (removedComponentModel) {\n          result.push(guid, ...getAllChildGuids(removedComponentModel, viewComponentsState));\n        }\n        return result;\n      }, []);\n      const removeGuidsSet = new Set(guidsToRemove);\n      removeGuidsSet.forEach(guid => {\n        this.viewDesignerModels.delete(guid);\n        this.rxViewDesignerInspectorService.delete(guid);\n      });\n      const actions = [componentsRemoved({\n        guids: [...removeGuidsSet]\n      })];\n      if (payload.selectParent) {\n        const lastRemovedModel = viewComponentsState[last(payload.guids)];\n        if (lastRemovedModel === null || lastRemovedModel === void 0 ? void 0 : lastRemovedModel.parentGuid) {\n          actions.push(selectComponent({\n            guid: lastRemovedModel.parentGuid\n          }));\n        }\n      }\n      return actions;\n    }));\n    this.setChildren$ = this.actions$.pipe(ofType(setChildComponents), map$1(action => action.payload), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([actionPayload, viewComponentsState]) => {\n      const actions = [];\n      const componentGuidsToRemove = [];\n      const addComponentsPayloadAll = [];\n      const editComponentPayloadAll = [];\n      processChildComponents(actionPayload);\n      function processChildComponents(payload) {\n        const componentsToSet = payload.data;\n        const componentsGuidsToSet = componentsToSet.map(component => component.guid);\n        const hostComponent = viewComponentsState[payload.guid];\n        let existingChildGuids = getChildGuidsFromModel(hostComponent);\n        if (payload.types) {\n          existingChildGuids = existingChildGuids.filter(guid => payload.types.includes(viewComponentsState[guid].type));\n        }\n        const componentGuidsToRemoveLocal = difference(existingChildGuids, componentsGuidsToSet);\n        const componentGuidsToAdd = difference(componentsGuidsToSet, existingChildGuids);\n        const componentsGuidsToUpdate = difference(existingChildGuids, componentGuidsToAdd, componentGuidsToRemoveLocal);\n        componentGuidsToRemove.push(...componentGuidsToRemoveLocal);\n        const addComponentsPayload = componentsToSet.reduce((result, action) => {\n          if (includes(componentGuidsToAdd, action.guid)) {\n            result.push(getAddComponentPayload(action, payload.guid));\n          }\n          return result;\n        }, []);\n        addComponentsPayloadAll.push(...addComponentsPayload);\n        const editComponentPayload = componentsToSet.reduce((result, action) => {\n          if (includes(componentsGuidsToUpdate, action.guid)) {\n            const existingModel = viewComponentsState[action.guid];\n            if (!isEqual(existingModel.propertiesByName, action.data || {})) {\n              result.push({\n                guid: action.guid,\n                data: action.data\n              });\n            }\n            if (action.children) {\n              processChildComponents({\n                guid: action.guid,\n                data: action.children\n              });\n            }\n          }\n          return result;\n        }, []);\n        editComponentPayloadAll.push(...editComponentPayload);\n      }\n      function getAddComponentPayload(action, parentGuid) {\n        const result = {\n          propertiesByName: action.data,\n          guid: action.guid,\n          parentGuid,\n          type: action.type,\n          columnIndex: action.columnIndex || 0,\n          insertIndex: action.insertIndex,\n          outletName: action.outletName || RX_VIEW_DEFINITION.defaultOutletName\n        };\n        if (action.children) {\n          result.children = map(action.children, child => getAddComponentPayload(child, action.guid));\n        }\n        return result;\n      }\n      if (componentGuidsToRemove.length) {\n        actions.push(removeComponents({\n          guids: componentGuidsToRemove\n        }));\n      }\n      if (addComponentsPayloadAll.length) {\n        actions.push(addNewComponents({\n          payload: addComponentsPayloadAll\n        }));\n      }\n      if (editComponentPayloadAll.length) {\n        actions.push(setComponentData({\n          payload: editComponentPayloadAll\n        }));\n      }\n      return actions;\n    }));\n  }\n  processAddComponentPayload(component, initializeComponentModelPayload, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState) {\n    const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n    const payloadParent = initializeComponentModelPayload.find(payload => payload.componentModel.guid === component.parentGuid);\n    const modelParent = viewComponentsState[component.parentGuid];\n    const parentWithoutLayout = payloadParent && !payloadParent.componentModel.layout || modelParent && !modelParent.layout;\n    const componentModel = {\n      guid: component.guid || this.rxGuidService.generate(),\n      type: component.type,\n      parentGuid: component.parentGuid,\n      propertiesByName: this.rxViewDesignerStateHelperService.getInitialComponentProperties(component.propertiesByName, componentDescriptor),\n      permissions: this.rxViewDesignerStateHelperService.getDefaultComponentPermissions(componentDescriptor)\n    };\n    if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || parentWithoutLayout) {\n      componentModel.resourceType = componentDescriptor.isContainerComponent ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n      initializeDataComponentModelPayloads.push({\n        componentModel: componentModel\n      });\n    } else {\n      componentModel.resourceType = componentDescriptor.outlets || componentDescriptor.isContainerComponent ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n      if (componentDescriptor.outlets) {\n        componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutletNames(componentDescriptor.outlets);\n      }\n      initializeComponentModelPayload.push({\n        componentModel: componentModel,\n        insertIndex: component.insertIndex,\n        columnIndex: component.columnIndex || 0,\n        outletName: component.outletName || RX_VIEW_DEFINITION.defaultOutletName\n      });\n      if (component.selectComponent) {\n        componentGuidsToSelect.push(componentModel.guid);\n      }\n    }\n    forEach(component.children, child => {\n      this.processAddComponentPayload(Object.assign(Object.assign({}, child), {\n        parentGuid: componentModel.guid\n      }), initializeComponentModelPayload, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState);\n    });\n  }\n}\nViewDesignerComponentEffects.ɵfac = function ViewDesignerComponentEffects_Factory(t) {\n  return new (t || ViewDesignerComponentEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(RxViewDesignerModels), i0.ɵɵinject(i2$1.RxGuidService), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(RxViewDesignerInspectorService), i0.ɵɵinject(RxViewExpressionValidatorRegistryService), i0.ɵɵinject(RxViewDesignerStateHelperService), i0.ɵɵinject(RxViewDataDictionaryStoreService));\n};\nViewDesignerComponentEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewDesignerComponentEffects,\n  factory: ViewDesignerComponentEffects.ɵfac\n});\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"initializeComponentModel$\", void 0);\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"registerComponentsValidation$\", void 0);\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"onComponentsRemoved$\", void 0);\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"unregisterAllComponentsValidation$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"insertComponent$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"addNewComponent$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"removeComponent$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerComponentEffects.prototype, \"setChildren$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerComponentEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Actions\n    }, {\n      type: i0.Injector\n    }, {\n      type: RxViewDesignerModels\n    }, {\n      type: i2$1.RxGuidService\n    }, {\n      type: i2.Store\n    }, {\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: RxViewDesignerInspectorService\n    }, {\n      type: RxViewExpressionValidatorRegistryService\n    }, {\n      type: RxViewDesignerStateHelperService\n    }, {\n      type: RxViewDataDictionaryStoreService\n    }];\n  }, {\n    initializeComponentModel$: [],\n    registerComponentsValidation$: [],\n    onComponentsRemoved$: [],\n    unregisterAllComponentsValidation$: [],\n    insertComponent$: [],\n    addNewComponent$: [],\n    removeComponent$: [],\n    setChildren$: []\n  });\n})();\nclass ViewDesignerEffects {\n  constructor(actions$, store$, rxBundleCacheService, rxDefinitionNameService, rxDefinitionUpdateService, rxGlobalCacheService, rxJsonParserService, rxViewComponentRegistryService, rxViewActionRegistryService, rxViewDefinitionService, viewDesignerModels, rxOldViewLayoutAdapterService, rxViewDefinitionParserService, rxLogService, rxModalService, errorHandler, rxUtilityModalsService, rxDefinitionAdapterRegistryService, rxViewDesignerInspectorService, rxViewDefinitionGeneratorService, rxViewDesignerStateHelperService, rxViewActionDefinitionAdapterRegistryService, rxGuidService, rxViewDataDictionaryStoreService) {\n    this.actions$ = actions$;\n    this.store$ = store$;\n    this.rxBundleCacheService = rxBundleCacheService;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxDefinitionUpdateService = rxDefinitionUpdateService;\n    this.rxGlobalCacheService = rxGlobalCacheService;\n    this.rxJsonParserService = rxJsonParserService;\n    this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n    this.rxViewActionRegistryService = rxViewActionRegistryService;\n    this.rxViewDefinitionService = rxViewDefinitionService;\n    this.viewDesignerModels = viewDesignerModels;\n    this.rxOldViewLayoutAdapterService = rxOldViewLayoutAdapterService;\n    this.rxViewDefinitionParserService = rxViewDefinitionParserService;\n    this.rxLogService = rxLogService;\n    this.rxModalService = rxModalService;\n    this.errorHandler = errorHandler;\n    this.rxUtilityModalsService = rxUtilityModalsService;\n    this.rxDefinitionAdapterRegistryService = rxDefinitionAdapterRegistryService;\n    this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n    this.rxViewDefinitionGeneratorService = rxViewDefinitionGeneratorService;\n    this.rxViewDesignerStateHelperService = rxViewDesignerStateHelperService;\n    this.rxViewActionDefinitionAdapterRegistryService = rxViewActionDefinitionAdapterRegistryService;\n    this.rxGuidService = rxGuidService;\n    this.rxViewDataDictionaryStoreService = rxViewDataDictionaryStoreService;\n    this.initViewDesigner$ = this.actions$.pipe(ofType(initViewDesigner), switchMap(({\n      payload\n    }) => {\n      const {\n        viewDefinitionName,\n        layoutTemplate\n      } = payload;\n      this.clearStorages();\n      return [loadFriendlyBundleName(), loadViewDefinition({\n        viewDefinitionName,\n        layoutTemplate\n      })];\n    }));\n    this.destroyViewDesigner$ = this.actions$.pipe(ofType(destroyViewDesigner), tap(() => this.clearStorages()));\n    this.loadFriendlyBundleName$ = this.actions$.pipe(ofType(loadFriendlyBundleName), switchMap(() => this.rxGlobalCacheService.getBundleDescriptor(this.rxBundleCacheService.bundleId)), switchMap(descriptor => {\n      let result$;\n      if (descriptor) {\n        result$ = of(friendlyBundleNameLoadSuccess({\n          friendlyBundleName: descriptor.friendlyName\n        }));\n      } else {\n        result$ = throwError(`Bundle \"${this.rxBundleCacheService.bundleId}\" not found`);\n      }\n      return result$.pipe(catchError(error => {\n        this.errorHandler.handleError(error);\n        return of(friendlyBundleNameLoadError({\n          payload: error\n        }));\n      }));\n    }));\n    this.loadViewDefinition$ = this.actions$.pipe(ofType(loadViewDefinition), switchMap(({\n      viewDefinitionName,\n      layoutTemplate\n    }) => {\n      const viewDefinition$ = viewDefinitionName ? this.rxViewDefinitionService.get(viewDefinitionName) : this.rxViewDefinitionService.getNew(layoutTemplate);\n      return viewDefinition$.pipe(map$1(viewDefinition => viewDefinitionLoadSuccess({\n        viewDefinition\n      })), catchError(error => {\n        this.errorHandler.handleError(error);\n        return of(viewDefinitionLoadError());\n      }));\n    }));\n    this.viewDefinitionLoadSuccess$ = this.actions$.pipe(ofType(viewDefinitionLoadSuccess), withLatestFrom(this.store$.select(viewModelSelector)), mergeMap(([payload, viewModel]) => {\n      // If viewModel isn't empty it's considered that view definition is loaded after save to update\n      // existing view models with properties added by server e.g 'lastChangedBy', 'lastUpdateTime' and etc.\n      return viewModel ? this.getActionsToUpdateExistingViewModels(payload.viewDefinition) : this.getActionsToInitializeViewModels(payload.viewDefinition);\n    }));\n    this.selectViewComponent$ = this.actions$.pipe(ofType(selectComponent), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(selectedInspectorTabIdSelector)), mergeMap(([action, viewModel, currentInspectorTabId]) => {\n      const selectedInspectorTab = viewModel.guid === action.guid ? 0 : 1;\n      if (selectedInspectorTab !== currentInspectorTabId) {\n        return [selectInspectorTab({\n          tabId: selectedInspectorTab\n        })];\n      } else {\n        return [];\n      }\n    }));\n    this.generateViewDefinition$ = this.actions$.pipe(ofType(generateViewDefinition), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(viewComponentModelsSelector), (action, viewModel, componentModels) => ({\n      viewModel,\n      componentModels\n    })), map$1(({\n      viewModel,\n      componentModels\n    }) => this.rxViewDefinitionGeneratorService.generate(viewModel, componentModels)), map$1(viewDefinition => setGeneratedViewDefinition({\n      payload: viewDefinition\n    })));\n    this.saveViewDefinition$ = this.actions$.pipe(ofType(saveViewDefinition), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(viewComponentModelsSelector), (action, viewModel, components) => ({\n      viewModel,\n      components\n    })), switchMap(({\n      viewModel,\n      components\n    }) => {\n      const viewDefinition = this.rxViewDefinitionGeneratorService.generate(viewModel, components, true);\n      return (viewDefinition.lastUpdateTime ? this.rxDefinitionUpdateService.execute(this.rxViewDefinitionService.update.bind(this.rxViewDefinitionService, viewDefinition.name, viewDefinition)) : this.rxViewDefinitionService.create(viewDefinition)).pipe(switchMap(response => {\n        const definitionName = decodeURIComponent(last(response === null || response === void 0 ? void 0 : response.headers.get('Location').split('/')) || '') || viewDefinition.name;\n        return [viewDefinitionSaveSuccess({\n          viewDefinitionName: definitionName\n        }), viewDefinition.lastUpdateTime ? loadViewDefinition({\n          viewDefinitionName: viewDefinition.name\n        }) : null].filter(Boolean);\n      }), catchError(error => {\n        this.errorHandler.handleError(error);\n        return of(viewDefinitionSaveError());\n      }));\n    }));\n    this.clearCanvas$ = this.actions$.pipe(ofType(clearCanvas), withLatestFrom(this.store$.select(viewModelSelector)), map$1(([action, viewModel]) => removeComponents({\n      guids: getChildGuidsFromModel(viewModel)\n    })));\n    this.runPreview$ = this.actions$.pipe(ofType(runPreview), withLatestFrom(this.store$.select(viewModelSelector), (action, viewModel) => viewModel), switchMap(viewModel => viewModel.targetViewDefinitionName ? this.rxViewDefinitionService.get(viewModel.targetViewDefinitionName) : of(viewModel)), tap(viewModel => {\n      const encodedViewDefinitionName = encodeURIComponent(viewModel.name);\n      let url = `/helix/index.html#/${this.rxBundleCacheService.bundleId}/preview/${encodedViewDefinitionName}`;\n      if (viewModel.inputParams.length) {\n        this.rxModalService.openModal({\n          title: 'Enter view parameter values',\n          content: RuntimeViewParamsModalComponent,\n          data: {\n            inputParams: map(viewModel.inputParams, 'name')\n          },\n          size: 'sm'\n        }).catch(noop$1).then(params => {\n          const inputConfig = map(params, (value, name) => {\n            return `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n          });\n          url += `?${inputConfig.join('&')}`;\n          if (params) {\n            window.open(url);\n          }\n        });\n      } else {\n        window.open(url);\n      }\n    }));\n  }\n  clearStorages() {\n    this.viewDesignerModels.clear();\n    this.rxViewDesignerInspectorService.clear();\n    this.rxViewDataDictionaryStoreService.clear();\n  }\n  convertViewDefinitionToModel(viewDefinition) {\n    const isAngularJsView = Boolean(viewDefinition.lastUpdateTime) && !includes(viewDefinition.layout, '\"outlets\"');\n    this.rxViewDefinitionParserService.getComponents(viewDefinition).forEach(definition => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n    const viewModel = omit(viewDefinition, ['componentDefinitions', 'layout']);\n    const layout = this.rxJsonParserService.tryParseJson(viewDefinition.layout);\n    viewModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    viewModel.displayName = decodeURIComponent(this.rxDefinitionNameService.getDisplayName(viewModel.name));\n    viewModel.layoutName = RxViewLayout.getLayoutName(viewModel.layout);\n    viewModel.isAngularJsView = isAngularJsView;\n    return viewModel;\n  }\n  convertComponentDefinitionToModel(definition, parentGuid, descriptor) {\n    const componentModel = omit(definition, ['componentDefinitions', 'layout']);\n    componentModel.parentGuid = parentGuid;\n    this.processComponentDefinitionProperties(componentModel, descriptor);\n    if (this.isComponentHasLayout(definition)) {\n      const layout = this.rxJsonParserService.tryParseJson(definition.layout);\n      componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n    }\n    return componentModel;\n  }\n  processComponentDefinitionProperties(componentModel, descriptor) {\n    componentModel.propertiesByName = transform(componentModel.propertiesByName, (result, propertyValue, propertyKey) => {\n      const propertyDescriptor = find(descriptor.properties || descriptor.parameters, {\n        name: propertyKey\n      });\n      if (propertyDescriptor && propertyDescriptor.designType) {\n        switch (true) {\n          case propertyDescriptor.designType === ViewComponentPropertyType.String:\n            result[propertyKey] = propertyValue;\n            break;\n          default:\n            result[propertyKey] = this.rxJsonParserService.tryParseJson(propertyValue, propertyValue);\n            break;\n        }\n      } else {\n        result[propertyKey] = propertyValue;\n      }\n      return result;\n    }, {});\n    if (!this.rxGuidService.isGuid(componentModel.name)) {\n      componentModel.propertiesByName.name = componentModel.name;\n    }\n    if ('type' in descriptor) {\n      componentModel.propertiesByName = this.rxViewDesignerStateHelperService.getInitialComponentProperties(componentModel.propertiesByName, descriptor);\n    }\n  }\n  traverseByComponents(component, predicate) {\n    const componentLayout = this.rxJsonParserService.tryParseJson(component.layout);\n    const childComponentDefinitions = component.componentDefinitions;\n    if (componentLayout) {\n      componentLayout.outlets.forEach(outlet => {\n        outlet.columns.forEach((column, colIndex) => {\n          column.children.forEach((childComponentGuid, index) => {\n            const childComponentDefinition = childComponentDefinitions.find(definition => definition.guid === childComponentGuid);\n            if (childComponentDefinition) {\n              predicate(childComponentDefinition, component.guid, outlet.name, index, colIndex, column.span);\n              if (childComponentDefinition.componentDefinitions) {\n                this.traverseByComponents(childComponentDefinition, predicate);\n              }\n            }\n          });\n        });\n      });\n    }\n    childComponentDefinitions.filter(definition => {\n      const descriptor = this.rxViewComponentRegistryService.get(definition.type);\n      return (descriptor === null || descriptor === void 0 ? void 0 : descriptor.isDataComponent) || (descriptor === null || descriptor === void 0 ? void 0 : descriptor.isPageComponent);\n    }).forEach((childComponentDefinition, index) => {\n      predicate(childComponentDefinition, component.guid, null, index, 0, 0);\n      if (childComponentDefinition.componentDefinitions) {\n        this.traverseByComponents(childComponentDefinition, predicate);\n      }\n    });\n  }\n  isComponentHasLayout(definition) {\n    return Boolean(definition.layout);\n  }\n  getActionsToInitializeViewModels(viewDefinition) {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n    const viewModel = this.convertViewDefinitionToModel(viewDefinitionClone);\n    const initComponentModelsPayload = [];\n    const initDataComponentModelsPayload = [];\n    this.traverseByComponents(viewDefinitionClone, (componentDefinition, parentGuid, outletName, insertIndex, columnIndex, columnSpan) => {\n      const componentDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n      if (componentDescriptor && !componentDescriptor.isPageComponent) {\n        const adapter = componentDefinition.type === RxViewComponentType.Action ? this.rxViewActionDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.propertiesByName.name) : this.rxDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.type);\n        adapter === null || adapter === void 0 ? void 0 : adapter.adaptDefinition(componentDefinition, viewDefinitionClone);\n        let actionDescriptor;\n        if (componentDefinition.type === RxViewComponentType.Action) {\n          actionDescriptor = this.rxViewActionRegistryService.get(componentDefinition.propertiesByName.name);\n          if (!actionDescriptor) {\n            actionDescriptor = this.rxViewActionRegistryService.registerUnknownAction(componentDefinition.propertiesByName.name);\n          }\n        }\n        const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, actionDescriptor || componentDescriptor);\n        if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || outletName === null) {\n          initDataComponentModelsPayload.push({\n            componentModel\n          });\n        } else {\n          initComponentModelsPayload.push({\n            insertIndex,\n            columnIndex,\n            componentModel,\n            outletName,\n            columnSpan\n          });\n        }\n      } else if (this.rxViewDefinitionService.isPageView(viewDefinitionClone)) {\n        let pageComponentChildDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n        if (!pageComponentChildDescriptor) {\n          pageComponentChildDescriptor = {\n            type: componentDefinition.type,\n            name: RX_VIEW_DEFINITION.unknownPageComponent.name\n          };\n        }\n        const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, pageComponentChildDescriptor);\n        initDataComponentModelsPayload.push({\n          componentModel\n        });\n      } else {\n        const unknownComponentDescriptor = Object.assign(Object.assign({}, this.rxViewComponentRegistryService.get(RxViewComponentType.Unknown)), {\n          type: componentDefinition.type\n        });\n        this.rxViewComponentRegistryService.registerSync(unknownComponentDescriptor);\n        const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, unknownComponentDescriptor);\n        initComponentModelsPayload.push({\n          insertIndex,\n          columnIndex,\n          componentModel,\n          outletName,\n          columnSpan\n        });\n        this.rxLogService.warning(`Cannot initialize view component. View Component Descriptor for ${componentDefinition.type} not found.`);\n      }\n    });\n    return [setViewModel({\n      payload: viewModel\n    }), initComponentModelsPayload.length ? initializeComponentModels({\n      payload: initComponentModelsPayload\n    }) : null, initDataComponentModelsPayload.length ? initializeDataComponentModels({\n      payload: initDataComponentModelsPayload\n    }) : null, initComponentModelsPayload.length ? null : viewModelsInitialized()].filter(Boolean);\n  }\n  getActionsToUpdateExistingViewModels(viewDefinition) {\n    const viewDefinitionClone = cloneDeep(viewDefinition);\n    const updateComponentModelPayloads = this.rxViewDefinitionParserService.getComponents(viewDefinitionClone, true).map(({\n      componentDefinition\n    }) => ({\n      guid: componentDefinition.guid,\n      partialModel: omit(componentDefinition, ['layout', 'propertiesByName', 'componentDefinitions'])\n    }));\n    return [updateViewModel({\n      payload: omit(viewDefinitionClone, ['layout', 'componentDefinitions'])\n    }), updateComponentModelPayloads.length ? updateComponentModel({\n      payload: updateComponentModelPayloads\n    }) : null, viewModelsUpdatedAfterSave()].filter(Boolean);\n  }\n}\nViewDesignerEffects.ɵfac = function ViewDesignerEffects_Factory(t) {\n  return new (t || ViewDesignerEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.RxBundleCacheService), i0.ɵɵinject(i3.RxDefinitionNameService), i0.ɵɵinject(i3.RxDefinitionUpdateService), i0.ɵɵinject(i3.RxGlobalCacheService), i0.ɵɵinject(i2$1.RxJsonParserService), i0.ɵɵinject(i5.RxViewComponentRegistryService), i0.ɵɵinject(i5.RxViewActionRegistryService), i0.ɵɵinject(i5.RxViewDefinitionService), i0.ɵɵinject(RxViewDesignerModels), i0.ɵɵinject(i5.RxOldViewLayoutAdapterService), i0.ɵɵinject(i5.RxViewDefinitionParserService), i0.ɵɵinject(i3.RxLogService), i0.ɵɵinject(i5$1.RxModalService), i0.ɵɵinject(i0.ErrorHandler), i0.ɵɵinject(i5$1.RxUtilityModalsService), i0.ɵɵinject(i3.RxDefinitionAdapterRegistryService), i0.ɵɵinject(RxViewDesignerInspectorService), i0.ɵɵinject(RxViewDefinitionGeneratorService), i0.ɵɵinject(RxViewDesignerStateHelperService), i0.ɵɵinject(i5.RxViewActionDefinitionAdapterRegistryService), i0.ɵɵinject(i2$1.RxGuidService), i0.ɵɵinject(RxViewDataDictionaryStoreService));\n};\nViewDesignerEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewDesignerEffects,\n  factory: ViewDesignerEffects.ɵfac\n});\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"initViewDesigner$\", void 0);\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"destroyViewDesigner$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"loadFriendlyBundleName$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"loadViewDefinition$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"viewDefinitionLoadSuccess$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"selectViewComponent$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"generateViewDefinition$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"saveViewDefinition$\", void 0);\n__decorate([Effect(), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"clearCanvas$\", void 0);\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Object)], ViewDesignerEffects.prototype, \"runPreview$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Actions\n    }, {\n      type: i2.Store\n    }, {\n      type: i3.RxBundleCacheService\n    }, {\n      type: i3.RxDefinitionNameService\n    }, {\n      type: i3.RxDefinitionUpdateService\n    }, {\n      type: i3.RxGlobalCacheService\n    }, {\n      type: i2$1.RxJsonParserService\n    }, {\n      type: i5.RxViewComponentRegistryService\n    }, {\n      type: i5.RxViewActionRegistryService\n    }, {\n      type: i5.RxViewDefinitionService\n    }, {\n      type: RxViewDesignerModels\n    }, {\n      type: i5.RxOldViewLayoutAdapterService\n    }, {\n      type: i5.RxViewDefinitionParserService\n    }, {\n      type: i3.RxLogService\n    }, {\n      type: i5$1.RxModalService\n    }, {\n      type: i0.ErrorHandler\n    }, {\n      type: i5$1.RxUtilityModalsService\n    }, {\n      type: i3.RxDefinitionAdapterRegistryService\n    }, {\n      type: RxViewDesignerInspectorService\n    }, {\n      type: RxViewDefinitionGeneratorService\n    }, {\n      type: RxViewDesignerStateHelperService\n    }, {\n      type: i5.RxViewActionDefinitionAdapterRegistryService\n    }, {\n      type: i2$1.RxGuidService\n    }, {\n      type: RxViewDataDictionaryStoreService\n    }];\n  }, {\n    initViewDesigner$: [],\n    destroyViewDesigner$: [],\n    loadFriendlyBundleName$: [],\n    loadViewDefinition$: [],\n    viewDefinitionLoadSuccess$: [],\n    selectViewComponent$: [],\n    generateViewDefinition$: [],\n    saveViewDefinition$: [],\n    clearCanvas$: [],\n    runPreview$: []\n  });\n})();\nfunction getInitialState$4() {\n  return null;\n}\nconst reducer$4 = createReducer(getInitialState$4(), on(initViewDesigner, getInitialState$4), on(destroyViewDesigner, getInitialState$4), on(setGeneratedViewDefinition, (state, {\n  payload\n}) => {\n  return payload;\n}));\nfunction viewDefinitionReducer(state, action) {\n  return reducer$4(state, action);\n}\nfunction getInitialState$3() {\n  return {};\n}\nconst reducer$3 = createReducer(getInitialState$3(), on(initViewDesigner, getInitialState$3), on(destroyViewDesigner, getInitialState$3), on(setBreadcrumbs, (state, {\n  guid,\n  label\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    [guid]: label\n  });\n}), on(componentsRemoved, (state, {\n  guids\n}) => {\n  let newState = state;\n  if (guids.some(guid => has(state, guid))) {\n    newState = omit(state, guids);\n  }\n  return newState;\n}));\nfunction viewDesignerBreadcrumbsReducer(state, action) {\n  return reducer$3(state, action);\n}\nfunction getInitialState$2() {\n  return {\n    viewDesignModel: null,\n    viewComponentDesignModels: {}\n  };\n}\nfunction initializeComponentModel(newState, payload) {\n  newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), {\n    [payload.componentModel.guid]: payload.componentModel\n  });\n  // update parent layout\n  if (payload.componentModel.parentGuid === newState.viewDesignModel.guid) {\n    newState.viewDesignModel = addChildComponent(newState.viewDesignModel, payload.componentModel.guid, payload.outletName, payload.insertIndex, payload.columnIndex, payload.columnSpan);\n  } else {\n    const parentComponentModel = newState.viewComponentDesignModels[payload.componentModel.parentGuid];\n    if (parentComponentModel) {\n      const newParentComponentModel = addChildComponent(parentComponentModel, payload.componentModel.guid, payload.outletName, payload.insertIndex, payload.columnIndex, payload.columnSpan);\n      newState.viewComponentDesignModels[newParentComponentModel.guid] = newParentComponentModel;\n    }\n  }\n}\nconst reducer$2 = createReducer(getInitialState$2(), on(initViewDesigner, getInitialState$2), on(destroyViewDesigner, getInitialState$2), on(initializeComponentModels, (state, {\n  payload\n}) => {\n  const newState = Object.assign({}, state);\n  payload.forEach(data => initializeComponentModel(newState, data));\n  return newState;\n}), on(initializeDataComponentModels, (state, {\n  payload\n}) => {\n  const newState = Object.assign(Object.assign({}, state), {\n    viewComponentDesignModels: Object.assign({}, state.viewComponentDesignModels)\n  });\n  payload.forEach(item => {\n    const parentComponentModel = newState.viewComponentDesignModels[item.componentModel.parentGuid];\n    if (parentComponentModel) {\n      // add new component model\n      newState.viewComponentDesignModels[item.componentModel.guid] = item.componentModel;\n      // update parent to contain child reference\n      const newParentComponentModel = Object.assign(Object.assign({}, parentComponentModel), {\n        childDataComponentGuids: [...(parentComponentModel.childDataComponentGuids || []), item.componentModel.guid]\n      });\n      newState.viewComponentDesignModels[newParentComponentModel.guid] = newParentComponentModel;\n    }\n  });\n  return newState;\n}), on(moveComponent, (state, payload) => {\n  const newState = Object.assign({}, state);\n  // remove component from old parent layout\n  if (isComponentContainsChild(payload.guid, state.viewDesignModel)) {\n    newState.viewDesignModel = removeChildComponent(payload.guid, newState.viewDesignModel);\n  } else {\n    let oldParentComponentModel = findParentComponentModel(payload.guid, newState.viewComponentDesignModels);\n    oldParentComponentModel = removeChildComponent(payload.guid, oldParentComponentModel);\n    newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), {\n      [oldParentComponentModel.guid]: oldParentComponentModel\n    });\n  }\n  // add component to new parent layout\n  if (payload.parentGuid === newState.viewDesignModel.guid) {\n    newState.viewDesignModel = addChildComponent(newState.viewDesignModel, payload.guid, payload.outletName, payload.insertIndex, payload.columnIndex);\n  } else {\n    let newParentComponentModel = newState.viewComponentDesignModels[payload.parentGuid];\n    newParentComponentModel = addChildComponent(newParentComponentModel, payload.guid, payload.outletName, payload.insertIndex, payload.columnIndex);\n    newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), {\n      [newParentComponentModel.guid]: newParentComponentModel\n    });\n  }\n  // updating parentGuid for moved component\n  newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), {\n    [payload.guid]: Object.assign(Object.assign({}, newState.viewComponentDesignModels[payload.guid]), {\n      parentGuid: payload.parentGuid\n    })\n  });\n  return newState;\n}), on(componentsRemoved, (state, {\n  guids\n}) => {\n  const newState = Object.assign(Object.assign({}, state), {\n    viewComponentDesignModels: omit(state.viewComponentDesignModels, guids)\n  });\n  guids.forEach(guid => {\n    if (isComponentContainsChild(guid, state.viewDesignModel)) {\n      newState.viewDesignModel = removeChildComponent(guid, newState.viewDesignModel);\n    } else {\n      let oldParentComponentModel = findParentComponentModel(guid, state.viewComponentDesignModels);\n      if (oldParentComponentModel && newState.viewComponentDesignModels[oldParentComponentModel.guid]) {\n        oldParentComponentModel = removeChildComponent(guid, newState.viewComponentDesignModels[oldParentComponentModel.guid]);\n        newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), {\n          [oldParentComponentModel.guid]: oldParentComponentModel\n        });\n      }\n    }\n  });\n  return newState;\n}), on(setComponentLayout, (state, {\n  guid,\n  cols\n}) => {\n  const componentModel = state.viewComponentDesignModels[guid];\n  const defaultOutlet = componentModel.layout.outlets.find(item => item.name === RX_VIEW_DEFINITION.defaultOutletName);\n  const existingColumns = cloneDeep(defaultOutlet.columns);\n  const removedColumns = existingColumns.splice(cols.length);\n  cols.forEach((colSpan, i) => {\n    if (existingColumns[i]) {\n      existingColumns[i].span = colSpan;\n    } else {\n      existingColumns[i] = {\n        span: colSpan,\n        children: []\n      };\n    }\n  });\n  const removedColumnChildComponents = removedColumns.reduce((guids, col) => {\n    guids.push(...col.children);\n    return guids;\n  }, []);\n  if (removedColumnChildComponents.length) {\n    const lastExistingCol = last(existingColumns);\n    lastExistingCol.children = lastExistingCol.children.concat(removedColumnChildComponents);\n  }\n  return Object.assign(Object.assign({}, state), {\n    viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), {\n      [guid]: Object.assign(Object.assign({}, componentModel), {\n        layout: Object.assign(Object.assign({}, componentModel.layout), {\n          outlets: componentModel.layout.outlets.map(outlet => Object.assign(Object.assign({}, outlet), {\n            columns: existingColumns\n          }))\n        })\n      })\n    })\n  });\n}), on(setViewModel, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    viewDesignModel: payload\n  });\n}), on(updateViewModel, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    viewDesignModel: Object.assign(Object.assign({}, state.viewDesignModel), payload)\n  });\n}), on(viewDefinitionSaveSuccess, state => {\n  if (state.viewDesignModel.isAngularJsView) {\n    return Object.assign(Object.assign({}, state), {\n      viewDesignModel: Object.assign(Object.assign({}, state.viewDesignModel), {\n        isAngularJsView: false\n      })\n    });\n  } else {\n    return state;\n  }\n}), on(setComponentData, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), payload.reduce((res, {\n      guid,\n      data\n    }) => {\n      res[guid] = Object.assign(Object.assign({}, state.viewComponentDesignModels[guid]), {\n        propertiesByName: data\n      });\n      return res;\n    }, {}))\n  });\n}), on(updateComponentModel, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), payload.filter(payload => state.viewComponentDesignModels[payload.guid]).reduce((res, {\n      guid,\n      partialModel\n    }) => {\n      res[guid] = Object.assign(Object.assign(Object.assign({}, state.viewComponentDesignModels[guid]), partialModel), {\n        propertiesByName: Object.assign(Object.assign({}, state.viewComponentDesignModels[guid].propertiesByName), partialModel.propertiesByName)\n      });\n      return res;\n    }, {}))\n  });\n}));\nfunction viewDesignerModelReducer(state, action) {\n  return reducer$2(state, action);\n}\nfunction getInitialState$1() {\n  return {\n    selectedComponentGuid: null,\n    selectedInspectorTabId: 0,\n    currentBundleId: null,\n    isViewDefinitionLoading: false,\n    areViewModelsReady: false,\n    friendlyBundleName: null\n  };\n}\nconst reducer$1 = createReducer(getInitialState$1(), on(initViewDesigner, (_, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, getInitialState$1()), {\n    currentBundleId: payload.bundleId\n  });\n}), on(destroyViewDesigner, getInitialState$1), on(selectComponent, (state, {\n  guid\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    selectedComponentGuid: guid\n  });\n}), on(selectInspectorTab, (state, {\n  tabId\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    selectedInspectorTabId: tabId\n  });\n}), on(componentsRemoved, (state, {\n  guids\n}) => {\n  if (guids.includes(state.selectedComponentGuid)) {\n    return Object.assign(Object.assign({}, state), {\n      selectedComponentGuid: null\n    });\n  } else {\n    return Object.assign({}, state);\n  }\n}), on(friendlyBundleNameLoadSuccess, (state, {\n  friendlyBundleName\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    friendlyBundleName: friendlyBundleName\n  });\n}), on(friendlyBundleNameLoadError, state => {\n  return Object.assign(Object.assign({}, state), {\n    friendlyBundleName: null\n  });\n}), on(saveViewDefinition, loadViewDefinition, state => {\n  return Object.assign(Object.assign({}, state), {\n    isViewDefinitionLoading: true,\n    areViewModelsReady: false\n  });\n}), on(viewDefinitionSaveSuccess, viewDefinitionLoadSuccess, viewDefinitionLoadError, state => {\n  return Object.assign(Object.assign({}, state), {\n    isViewDefinitionLoading: false\n  });\n}), on(viewDefinitionSaveError, state => {\n  return Object.assign(Object.assign({}, state), {\n    isViewDefinitionLoading: false,\n    areViewModelsReady: true\n  });\n}), on(viewModelsUpdatedAfterSave, viewModelsInitialized, state => {\n  return Object.assign(Object.assign({}, state), {\n    areViewModelsReady: true\n  });\n}), on(initializeComponentModels, state => {\n  return Object.assign(Object.assign({}, state), {\n    areViewModelsReady: false\n  });\n}));\nfunction viewDesignerUiReducer(state, action) {\n  return reducer$1(state, action);\n}\nfunction getInitialState() {\n  return {\n    issues: {},\n    expressionIssues: {}\n  };\n}\nconst reducer = createReducer(getInitialState(), on(initViewDesigner, destroyViewDesigner, getInitialState), on(setValidationIssues, (state, {\n  guid,\n  issues\n}) => {\n  if (issues.length) {\n    return Object.assign(Object.assign({}, state), {\n      issues: Object.assign(Object.assign({}, state.issues), {\n        [guid]: issues\n      })\n    });\n  } else {\n    let newState = state;\n    if (has(newState.issues, guid)) {\n      newState = Object.assign(Object.assign({}, state), {\n        issues: omit(state.issues, [guid])\n      });\n    }\n    return newState;\n  }\n}), on(setExpressionValidationIssues, (state, {\n  issues\n}) => {\n  return isEmpty(issues) ? state : Object.assign(Object.assign({}, state), {\n    expressionIssues: Object.assign(Object.assign({}, omit(state.expressionIssues, Object.keys(issues))), omitBy(issues, isEmpty))\n  });\n}), on(componentsRemoved, (state, {\n  guids\n}) => {\n  let newState = state;\n  if (guids.some(guid => has(state.issues, guid))) {\n    newState = Object.assign(Object.assign({}, state), {\n      issues: omit(state.issues, guids)\n    });\n  }\n  if (guids.some(guid => has(state.expressionIssues, guid))) {\n    newState = Object.assign(Object.assign({}, state), {\n      expressionIssues: omit(state.expressionIssues, guids)\n    });\n  }\n  return newState;\n}));\nfunction viewDesignerValidationReducer(state, action) {\n  return reducer(state, action);\n}\nclass ViewDesignerModule {}\nViewDesignerModule.ɵfac = function ViewDesignerModule_Factory(t) {\n  return new (t || ViewDesignerModule)();\n};\nViewDesignerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ViewDesignerModule,\n  declarations: [RxViewDesignerComponent],\n  imports: [CommonModule, AdaptCodeViewerModule, i3$3.AdaptTabsModule, RxBladeModule, RxFormBuilderModule, RxValidationIssuesModule, RxJsonViewerModule, RxViewDesignerPaletteModule, ViewDesignerCanvasModule, DesignerModule, FormControlsModule, RxPermissionEditorModule, RxRevertCustomizationModule, ViewActionDesignModule, RuntimeViewParamsModalModule, RxDesignerHeaderModule, AdaptAlertModule, RxInspectorModule, RxViewCustomizationOptionsModule, RxViewRevertCustomizationModule, TranslateModule, i2.StoreFeatureModule, i1.EffectsFeatureModule],\n  exports: [RxViewDesignerComponent]\n});\nViewDesignerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AdaptCodeViewerModule, AdaptTabsModule.forRoot(), RxBladeModule, RxFormBuilderModule, RxValidationIssuesModule, RxJsonViewerModule, RxViewDesignerPaletteModule, ViewDesignerCanvasModule, DesignerModule, FormControlsModule, RxPermissionEditorModule, RxRevertCustomizationModule, ViewActionDesignModule, RuntimeViewParamsModalModule, RxDesignerHeaderModule, AdaptAlertModule, RxInspectorModule, RxViewCustomizationOptionsModule, RxViewRevertCustomizationModule, TranslateModule, StoreModule.forFeature('viewDesigner', {\n    model: viewDesignerModelReducer,\n    viewDefinition: viewDefinitionReducer,\n    validation: viewDesignerValidationReducer,\n    ui: viewDesignerUiReducer,\n    breadcrumbs: viewDesignerBreadcrumbsReducer\n  }), EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewDesignerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AdaptCodeViewerModule, AdaptTabsModule.forRoot(), RxBladeModule, RxFormBuilderModule, RxValidationIssuesModule, RxJsonViewerModule, RxViewDesignerPaletteModule, ViewDesignerCanvasModule, DesignerModule, FormControlsModule, RxPermissionEditorModule, RxRevertCustomizationModule, ViewActionDesignModule, RuntimeViewParamsModalModule, RxDesignerHeaderModule, AdaptAlertModule, RxInspectorModule, RxViewCustomizationOptionsModule, RxViewRevertCustomizationModule, TranslateModule, StoreModule.forFeature('viewDesigner', {\n        model: viewDesignerModelReducer,\n        viewDefinition: viewDefinitionReducer,\n        validation: viewDesignerValidationReducer,\n        ui: viewDesignerUiReducer,\n        breadcrumbs: viewDesignerBreadcrumbsReducer\n      }), EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])],\n      declarations: [RxViewDesignerComponent],\n      exports: [RxViewDesignerComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionListControlComponent, ActionListControlModule, ActionListEditorDialogComponent, ActionListEditorDialogModule, ActionListWidgetComponent, ActionListWidgetModule, CanvasItemApi, CanvasItemColumnComponent, CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasOutletHelperService, DesignerComponent, DesignerModule, DropComponentData, NamedListFilterExpressionConfigurator, RX_AVAILABLE_ON_DEVICES_OPTIONS, RX_VIEW_DESIGNER, RX_VIEW_MODEL, RuntimeViewParamsModalComponent, RuntimeViewParamsModalModule, RxComponentPermissionEditorWidgetComponent, RxComponentPermissionEditorWidgetModule, RxViewActionExpressionConfigurator, RxViewActionValidatorService, RxViewComponentExpressionConfigurator, RxViewCustomizationOptionsComponent, RxViewCustomizationOptionsModule, RxViewDataDictionaryService, RxViewDesignerActionModel, RxViewDesignerComponent, RxViewDesignerDefaultActionModel, RxViewDesignerHelperService, RxViewDesignerPaletteModule, RxViewExpressionConfigurator, RxViewExpressionValidatorService, RxViewModel, RxViewRevertCustomizationComponent, RxViewRevertCustomizationModule, ViewDesignerCanvasComponent, ViewDesignerCanvasItemApiToken, ViewDesignerCanvasModule, ViewDesignerComponentModel, ViewDesignerFacade, ViewDesignerModule, ViewDesignerPaletteComponent, getAvailableOnDevicesInspectorConfig, getDisabledFieldInspectorConfig, getHiddenFieldInspectorConfig, getStandardPropsInspectorConfigs, getStylesFieldInspectorConfig, validateAvailableOnDevicesProp, validateCssClassName, validateCssClassNames, validateStandardProps };\n//# sourceMappingURL=helix-platform-view-designer.js.map","map":{"version":3,"names":["i0","Injectable","Component","Input","EventEmitter","Output","NgModule","InjectionToken","ViewContainerRef","Inject","ViewChild","ChangeDetectionStrategy","SkipSelf","Optional","InjectFlags","ElementRef","ViewChildren","i12","i4$2","RxNamedListDefinitionCacheService","i13","i11","RX_RECORD_DEFINITION","RxRecordDefinitionCacheService","i3","ExpressionParserToken","RxExpressionConfigurator","ExpressionOperatorRowsByGroup","ExpressionOperatorGroup","Tooltip","RX_APPLICATION","i3$1","RxRevertCustomizationModule","SelectFormControlComponent","TextFormControlComponent","TextareaFormControlComponent","RxDefinitionPickerComponent","RxDefinitionPickerType","TagsFormControlComponent","RxPermissionEditorComponent","ListFormControlComponent","RX_VALIDATION_FORM_CONTROL","RX_REVERT_CUSTOMIZATION","RX_EXPRESSION_EDITOR","ExpressionFormControlComponent","ExpressionEditorModule","RxFormBuilderModule","ValueAccessor","RxPermissionEditorModule","CustomizationOptionsModule","InspectorWidgetBase","OptionalExpressionInspectorControlComponent","FormControlsModule","RxDesignerHeaderModule","RxInspectorModule","i5$1","RX_MODAL","ValidationIssueType","RxModalClass","RxBladeModule","RxValidationIssuesModule","RxJsonViewerModule","i5","RxViewLayout","RxViewComponentType","RX_AVAILABLE_ON_DEVICES_PROP_NAME","RX_STYLES_PROP_NAME","RX_EXPRESSION_FUNCTIONS","RxExpressionHelperService","RxDefaultExpressionEvaluatorService","RxViewComponentRegistryService","RX_VIEW_DEFINITION","BwfViewComponentType","ViewDefinitionType","RxViewActionRegistryService","OpenViewActionModalSize","RxDevice","RX_HIDDEN_PROP_NAME","RX_DISABLED_PROP_NAME","ViewComponentPropertyType","ViewActionDesignModule","i6","TranslateModule","includes","some","uniq","map","flow","compact","isEmpty","omit","has","reject","sortBy","get","isFinite","isFinite$1","flatten","filter","filter$1","isFunction","transform","isUndefined","isObject","isPlainObject","isBoolean","isNumber","isArray","isEqual","find","take","take$1","findIndex","throttle","isString","mergeWith","reduce","groupBy","lowerCase","pick","toPath","set","cloneDeep","values","chain","pull","noop","without","castArray","merge","merge$1","every","last","difference","forEach","omitBy","ReplaySubject","Subject","of","combineLatest","EMPTY","asapScheduler","BehaviorSubject","throwError","noop$1","map$1","shareReplay","switchMap","withLatestFrom","distinctUntilChanged","bufferToggle","takeUntil","switchMapTo","concatMapTo","skip","first","tap","concatMap","debounceTime","startWith","skipWhile","mapTo","publishReplay","refCount","mergeMap","catchError","i2$1","i1","ofType","Actions","Effect","EffectsModule","i2","createAction","props","createFeatureSelector","createSelector","createReducer","on","StoreModule","i3$2","FormControl","ReactiveFormsModule","FormsModule","NG_VALUE_ACCESSOR","i4","CommonModule","i4$1","CdkDropList","DragDropModule","moveItemInArray","i3$3","AdaptAccordionModule","AdaptRxSearchModule","DismissReasons","AdaptButtonModule","AdaptModalModule","AdaptRxTextfieldModule","TreeWrap","toNumber","AdaptAccordionTabComponent","AdaptEmptyStateModule","AdaptIconModule","AdaptPopoverModule","AdaptTreeModule","AdaptCodeViewerModule","AdaptAlertModule","AdaptTabsModule","AdaptTextFieldModule","__decorate","__metadata","_c0","ViewDesignerCanvasComponent_rx_canvas_item_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","layout","isReadOnly","CanvasItemColumnComponent_div_1_button_8_Template","_r6","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","CanvasItemColumnComponent_div_1_button_8_Template_button_click_0_listener","$event","ɵɵrestoreView","layout_r1","$implicit","ctx_r4","remove","ɵɵelementEnd","CanvasItemColumnComponent_div_1_Template","_r8","CanvasItemColumnComponent_div_1_Template_div_cdkDragEntered_0_listener","ctx_r7","onDragEntered","CanvasItemColumnComponent_div_1_Template_div_cdkDragStarted_0_listener","ctx_r9","onDragStarted","CanvasItemColumnComponent_div_1_Template_div_click_1_listener","restoredCtx","ctx_r10","onSelectComponent","ɵɵpipe","ɵɵtext","ɵɵtemplate","ɵɵclassMapInterpolate1","descriptor","type","getViewComponentDragData","options","static","ɵɵadvance","ɵɵclassProp","ɵɵpipeBind1","isSelected$","ɵɵtextInterpolate","label","_c1","a0","columnIndex","_c2","_c3","CanvasItemContainerComponent_div_1_Template","_r5","CanvasItemContainerComponent_div_1_Template_rx_canvas_item_column_dropListDropped_1_listener","onDropListDropped","column_r1","colIndex_r2","index","isLastCol_r3","ɵɵclassMap","span","ɵɵpureFunction1","DesignerComponent_rx_canvas_outlet_0_Template","_r3","DesignerComponent_rx_canvas_outlet_0_Template_rx_canvas_outlet_beforeViewComponentDrop_0_listener","ctx_r2","viewDesignerCanvasComponent","beforeComponentDropInRoot","emit","outlet_r1","canvasItemComponent","outlets","length","name","defaultOutletName","ViewDesignerPaletteComponent_adapt_accordion_tab_3_div_2_Template","viewComponent_r3","ɵɵattribute","icon","ɵɵpropertyInterpolate","ɵɵtextInterpolate1","ViewDesignerPaletteComponent_adapt_accordion_tab_3_Template","viewComponentsGroup_r1","stringService","toRxId","allowedDropListIds","components","trackByNameFn","_c4","_c5","a1","multiselect","tabs","_c6","_c7","RxViewDesignerComponent_rx_view_designer_palette_7_Template","paletteComponents$","canvasDndListIds","_c8","_c9","content","variant","RxViewDesignerComponent_adapt_alert_9_Template","ɵɵpureFunction0","_c10","_c11","RxViewDesignerComponent_adapt_alert_11_Template","RxViewDesignerComponent_adapt_code_viewer_44_Template","ctx_r5","viewDesignerFacade","viewDefinition$","_c12","RuntimeViewParamsModalComponent_div_1_Template","RuntimeViewParamsModalComponent_div_1_Template_adapt_rx_textfield_ngModelChange_1_listener","inputParam_r1","inputParams","isFirst_r2","i_r3","ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template","_r15","ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template_div_dblclick_1_listener","action_r11","ctx_r13","addAction","data","ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_div_0_Template_button_click_2_listener","ctx_r16","ActionListEditorDialogComponent_div_2_div_6_div_1_ng_template_2_Template","ActionListEditorDialogComponent_div_2_div_6_div_1_Template","availableActionTreeNodes_r6","ngIf","treeWrap","ActionListEditorDialogComponent_div_2_div_6_ng_template_2_Template","ActionListEditorDialogComponent_div_2_div_6_Template","ɵɵtemplateRefExtractor","ɵɵreference","ActionListEditorDialogComponent_div_2_Template","availableActionTreeNodes$","ActionListEditorDialogComponent_div_11_Template","_r21","ActionListEditorDialogComponent_div_11_Template_button_click_1_listener","ctx_r20","toggleOpen","ActionListEditorDialogComponent_div_11_Template_button_click_4_listener","ctx_r22","ActionListEditorDialogComponent_div_14_div_2_Template","ActionListEditorDialogComponent_div_14_div_7_Template","actionLabelsMap_r31","action_r23","ActionListEditorDialogComponent_div_14_div_9_Template","_r35","ActionListEditorDialogComponent_div_14_div_9_Template_button_click_2_listener","index_r24","ctx_r33","stopPropagation","moveAction","ActionListEditorDialogComponent_div_14_div_9_Template_button_click_3_listener","ctx_r36","ActionListEditorDialogComponent_div_14_div_9_Template_button_click_4_listener","ctx_r38","removeAction","ctx_r40","last_r26","first_r25","ActionListEditorDialogComponent_div_14_Template","_r42","ActionListEditorDialogComponent_div_14_Template_adapt_accordion_tab_open_3_listener","isOpen","ActionListEditorDialogComponent_div_14_Template_adapt_accordion_tab_close_3_listener","ActionListEditorDialogComponent_div_14_Template_rx_form_builder_modelChange_10_listener","ctx_r44","model","sandbox","updateActionProperties","markEditorAsDirty","ActionListEditorDialogComponent_div_14_Template_rx_form_builder_editorEvent_10_listener","_r27","ctx_r45","onEvent","config","actionLabelsMap$","config$","actionProperties$","ActionListEditorDialogComponent_div_15_Template","ActionListEditorDialogComponent_button_17_Template","_r47","ActionListEditorDialogComponent_button_17_Template_button_click_0_listener","ctx_r46","onSave","isSaveButtonDisabled$","ActionListControlComponent_span_3_Template","tooltip","ActionListControlComponent_span_5_Template","ActionListControlComponent_ul_6_li_1_button_4_Template","ActionListControlComponent_ul_6_li_1_button_4_Template_button_click_0_listener","action_r4","ctx_r6","ActionListControlComponent_ul_6_li_1_Template","_r10","ActionListControlComponent_ul_6_li_1_Template_button_click_3_listener","editAction","ctx_r3","actionLabelsMap","isDisabled","ActionListControlComponent_ul_6_Template","selectedActions","findParentComponentModel","guid","currentComponent","parentGuid","findAllParentComponentGuids","result","parentModel","nextGuid","unshift","findParentComponentByType","componentType","isComponentContainsChild","componentModel","hasChild","childDataComponentGuids","addChildComponent","outletName","insertIndex","columnSpan","newComponentModel","Object","assign","outlet","columns","children","slice","removeChildComponent","componentGuidToRemove","parentComponentModel","newParentComponentModel","removeChildFromLayout","getChildGuidsFromModel","guids","push","getViewLayoutChildGuids","getAllChildGuids","parentComponent","componentModelsState","RxViewDataDictionaryBuilderService","constructor","componentIcon","componentPropertyIcon","settablePropertiesIcon","actionOutputIcon","getActionOutputDataDictionaryBranch","actionName","dataDictionary","dataDictionaryBranch","buildDataDictionaryBranch","getComponentCommonDataDictionaryBranch","branch","child","getSettablePropertiesDataDictionary","branches","node","expression","ɵfac","RxViewDataDictionaryBuilderService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","RxViewDataDictionaryStoreService","componentsCommon","componentsCommonSubject","componentsCommon$","asObservable","viewCommon","viewCommonSubject","viewCommon$","actionsOutput","actionsOutputSubject","actionsOutput$","settableProperties","settablePropertiesSubject","settableProperties$","setCommonDataDictionaryBranch","setComponentCommon","setViewCommonDataDictionaryBranch","setViewCommon","setSettablePropertiesDataDictionary","items","setSettableProperties","componentName","removeDataDictionaryForComponents","setActionOutputDataDictionaryBranch","setActionsOutput","actions","updateActionOutputDataDictionaryBranchOrder","actionOutput","removeActionOutputDataDictionaryBranch","removeAllActionOutputDataDictionaryBranches","clear","state","next","RxViewDataDictionaryStoreService_Factory","RxViewDesignerInspectorService","onChangeSubject","configs","Map","onChange$","delete","RxViewDesignerInspectorService_Factory","componentsRemoved","initializeComponentModels","initializeDataComponentModels","setValidationIssues","setExpressionValidationIssues","setComponentData","setChildComponents","setBreadcrumbs","selectComponent","setComponentLayout","moveComponent","insertComponent","addNewComponents","updateComponentModel","removeComponents","ViewDesignerDispatcher","store$","dispatch","action","ViewDesignerDispatcher_Factory","ɵɵinject","Store","viewDefinitionSaveSuccess","viewDefinitionSaveError","viewDefinitionLoadSuccess","viewDefinitionLoadError","setGeneratedViewDefinition","loadViewDefinition","friendlyBundleNameLoadSuccess","friendlyBundleNameLoadError","viewModelsInitialized","viewModelsUpdatedAfterSave","updateViewModel","setViewModel","selectInspectorTab","saveViewDefinition","runPreview","loadFriendlyBundleName","generateViewDefinition","clearCanvas","initViewDesigner","destroyViewDesigner","viewDesignerState","viewDesignerModelsSelector","viewDesigner","viewModelSelector","models","viewDesignModel","viewModelPropertyValueSelector","viewModel","propertyName","viewComponentModelsSelector","viewComponentDesignModels","firstViewComponentModelTypeSelector","_a","viewComponentModelSelector","componentModels","parentComponentModelGuidSelector","componentPropertiesByNameSelector","propertiesByName","componentTypeSelector","componentLayoutSelector","componentPermissionsSelector","permissions","childDataComponentGuidsSelector","viewDesignerUISelector","ui","isViewDefinitionLoadingSelector","isViewDefinitionLoading","bundleFriendlyNameSelector","friendlyBundleName","currentBundleIdSelector","currentBundleId","viewDefinitionSelector","viewDefinition","validationIssuesSelector","validation","breadcrumbsSelector","breadcrumbs","selectedInspectorTabIdSelector","selectedInspectorTabId","selectedComponentGuidSelector","selectedComponentGuid","areViewModelsReadySelector","areViewModelsReady","selectedComponentPropsSelector","componentDesignModel","ViewDesignerFacade","dispatcher","actions$","rxViewDesignerInspectorService","rxGuidService","rxViewDataDictionaryBuilderService","rxViewDataDictionaryService","rxOverlayService","select","validationIssues$","breadcrumbs$","viewDesignerModelState$","viewModel$","pipe","Boolean","viewModelGuid$","getViewPropertyValue","viewComponentModels$","firstViewComponentModelType$","isExtensionView$","isExtensionContainerSet$","allComponentGuids$","Set","keys","bufferSize","selectedComponentGuid$","componentGuid","viewGuid","selectedComponentProperties$","getComponentProperties","isViewDefinitionLoading$","selectedInspectorTabId$","bundleFriendlyName$","currentBundleId$","viewInspectorLayout$","inspectorConfig","inspectorSectionConfigs","selectedComponentInspectorLayout$","isViewReadOnly$","bundleId","areNewDefinitionsAllowed","isCustomizationEnabled","viewDefinitionLoadError$","viewDefinitionSaveSuccess$","initViewDesigner$","destroyViewDesignerSubject","destroyViewDesigner$","viewModelsInitialized$","areViewModelsReady$","viewCommonDataDictionaryState$","componentsCommonDataDictionaryState$","actionsDataDictionaryState$","settablePropertiesDataDictionaryState$","settablePropertiesDataDictionarySubject","v","subscribe","getComponentModel","payload","draggedViewComponentGuid","draggedViewComponentDescriptor","initialPropertiesByName","updateComponentProperties","componentProperties","partialModel","getComponentPropertyValue","value","getComponentType","getComponentPermissions","getComponentLayout","updateSelectedComponentProperties","properties","updateViewProperties","setViewProperties","setComponentInspector","issues","setViewInspectorConfig","removeViewComponents","selectParent","setComponentSettablePropertiesDataDictionary","setComponentCommonDataDictionaryBranch","removeAllActionDataDictionaryBranches","removeActionDataDictionaryBranch","actionGuid","setActionDataDictionaryBranch","updateActionDataDictionaryBranchOrder","getChildComponentGuids","parentComponentGuid","recursive","filterPredicate","nestedGuids","availableComponentGuids","getChildComponents","getComponent","getComponentsByType","getChildComponentTree","viewComponentModels","getChildrenData","res","childGuid","getParentComponentGuid","parentComponentType","setChildren","ViewDesignerFacade_Factory","RxGuidService","RxOverlayService","RxViewDesignerModels","RxViewDesignerModels_Factory","RxViewDefinitionGeneratorService","rxDefinitionNameService","rxBundleCacheService","viewDesignerModels","rxViewDefinitionLocalizationService","generate","forSave","clonedViewModel","getDefinitionName","displayName","componentDefinitions","generateComponentDefinitions","localizableStringsByComponentId","extractLocalizableStrings","localizablePropertyToStringGuidMap","JSON","stringify","componentModelItems","componentDefinition","getPropertiesByName","serializeComponentDefinitionProperties","Action","key","obj","create","k","RxViewDefinitionGeneratorService_Factory","RxDefinitionNameService","RxBundleCacheService","RxViewDefinitionLocalizationService","validateCssClassName","tag","test","validateCssClassNames","styles","validationIssues","tags","split","description","validateAvailableOnDevicesProp","validateStandardProps","RxViewExpressionValidatorService","rxDefaultExpressionValidatorService","rxDefaultExpressionEvaluatorService","rxStringService","rxExpressionParserService","validate","propertyLabel","prettify","expressionEvaluator","issues$","isValid","isNonEmptyString","referencedComponentGuidsSet","parse","expressionFragment","RxExpression","SingleQuoteRxExpression","exec","add","size","referencedComponentGuids","Array","from","RxViewExpressionValidatorService_Factory","RxDefaultExpressionValidatorService","RxStringService","RxExpressionParserService","RxViewDataDictionaryService","rxViewComponentRegistryService","rxObjectUtilsService","rxDataDictionaryUtils","componentsCommonDataDictionaryStateClone$","componentsDataDictionaryState","viewCommonDataDictionaryStateClone$","viewDataDictionary","commonDataDictionary$","getCommonDataDictionary","settablePropertiesDataDictionary$","settablePropsDataDictionaryState","viewDesignerModelState","getSettablePropsDataDictionary","getActionDataDictionary","actionsDataDictionaryState","commonDataDictionary","currentActionData","getComponentCommonDataDictionary","componentBranchToReplace","viewDataDictionaryBranch","componentDataDictionaryBranches","getFunctionsDataDictionaryBranch","expanded","getSettablePropsDataDictionaryBranch","modelState","settablePropsState","componentPropsState","childGuids","componentsDataDictionary","propsDataDictionary","RxViewDataDictionaryService_Factory","RxObjectUtilsService","RxDataDictionaryUtils","RxViewExpressionConfigurator","injector","rxExpressionHelperService","getDefaultConfig","dataDictionary$","operators","AllClient","validateExpression","getExpressionEvaluator","parseExpression","prepare","e","RxViewComponentExpressionConfigurator","propertyDescriptor","property","evaluatorService","componentBranchToReplace$","RxViewCustomizationOptionsComponent","translateService","destroyed$","ngOnInit","allowOverlay","scope","overlayGroupId","overlayDescriptor","lastUpdateTime","controlOptions","definitionTypeDisplayName","instant","toLowerCase","ngOnDestroy","complete","setCustomization","customizationOptions","RxViewCustomizationOptionsComponent_Factory","ɵɵdirectiveInject","TranslateService","ɵcmp","ɵɵdefineComponent","selectors","inputs","decls","vars","consts","template","RxViewCustomizationOptionsComponent_Template","RxViewCustomizationOptionsComponent_Template_rx_scope_customization_control_ngModelChange_0_listener","directives","CustomizationOptionsComponent","NgControlStatus","NgModel","encapsulation","selector","templateUrl","RxViewRevertCustomizationComponent","events","controlOptions$","RxViewRevertCustomizationComponent_Factory","outputs","RxViewRevertCustomizationComponent_Template","RxViewRevertCustomizationComponent_Template_rx_revert_customization_events_0_listener","RxRevertCustomizationComponent","pipes","AsyncPipe","RxViewRevertCustomizationModule","RxViewRevertCustomizationModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","ɵinj","ɵɵdefineInjector","RxViewModel","rxModalService","rxViewDefinitionCacheService","rxViewDefinitionParserService","viewDesignerDispatcher","rxViewExpressionValidatorService","expressionConfigurator","allViewDefinitionNamesByBundleId$","getViewDefinitionNames","names","getDisplayNameForValidation","targetExtensionContainerOptions$","targetViewDefinitionName","getTargetExtensionContainerOptions","targetViewDefinition$","getViewDefinition","init","pageComponentModel","Page","targetExtensionContainerOptions","pageComponent","getInspector","onTargetExtensionContainerOptionsChange","onPageComponentChange","validateDisplayName","validateInputParams","validateOutputParamExpressions","validateExtensionContainer","getViewCommonDataDictionary","targetExtensionContainerGuid","targetViewDefinition","getTargetRecordDefinitionName","getComponents","ExtensionContainer","id","pageComponentGuid","resourceType","resourceTypes","containerViewComponent","viewComponent","outputParams","isExistingView","isCustomizationAllowed","availablePageComponents","getBundlePageComponents","unknownPageComponent","pageComponentControl","component","beforeValueChange","oldValue","newValue","toPromise","then","isConfirmationRequired","confirm","title","modalStyle","modalStyles","warning","message","emptyOption","extensionContainerControl","required","isTargetRecordDefinitionChanged","isRecordDefinitionChanged","controls","rows","definitionType","View","isViewParametersPresent","placeholder","errorCheck","addItemText","emptyListText","getDataDictionary","getOperators","splice","targetViewDefinitionNameControlIndex","validDefinitionNameRegex","viewDefinitionNames","isNameAlreadyExists","caseInsensitiveIsEqual","notBlankInputParams","params","param","uniqueInputParams","source","sourceValues","previousTargetExtensionContainerGuid","currentTargetExtensionContainerGuid","previousTargetRecordDefinitionName","currentTargetRecordDefinitionName","targetRecordEditor","findParentComponentDefinition","definition","RecordEditor","recordDefinitionName","RxViewModel_Factory","Injector","RxModalService","RxViewDefinitionCacheService","RxViewDefinitionParserService","ViewDesignerCanvasItemApiToken","CanvasItemApi","core","registerCoreApi","apiObject","CanvasItemApi_Factory","DropComponentData","targetGuid","ViewDesignerCanvasService","componentSelectSubject","componentRemoveSubject","componentDropSubject","componentDrop$","componentSelect$","componentRemove$","removeComponent","dropComponent","ViewDesignerCanvasService_Factory","CanvasItemComponent","renderer","canvasItemApi","viewDesignerCanvasService","interactive","childContainers","initializeItemApi","ngOnChanges","changes","layoutChange","prevGuid","currGuid","prevOutlets","currOutlets","componentReference","cleanUp","renderViewComponent","ref","instance","destroy","registerOutlet","outletViewContainerRef","containerFactory","currentOutlet","componentRef","renderContainerComponent","event","transferData","bind","container","createComponent","nativeElement","location","setAttribute","containerRef","CanvasItemComponent_Factory","Renderer2","viewQuery","CanvasItemComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","features","ɵɵProvidersFeature","provide","useClass","ɵɵNgOnChangesFeature","CanvasItemComponent_Template","CanvasItemComponent_Template_div_click_0_listener","ɵɵelementContainer","hiddenOnCanvas$","providers","undefined","decorators","read","ViewDesignerCanvasComponent","componentSelect","componentDrop","componentRemove","ViewDesignerCanvasComponent_Factory","ViewDesignerCanvasComponent_Template","NgIf","changeDetection","OnPush","CanvasOutletHelperService","beforeViewComponentDropSubject","beforeViewComponentDrop$","setBeforeViewComponentDropState","viewComponentDropData","canBeDropped","canBeInsertedInto","dropTargetViewComponentWithParents","_isParentRecordEditorChanging","containerComponentInstance","viewComponentWithParents","draggedViewComponentParents","componentDropPredicate","skipPredicate","dropPredicate","parentOutletComponent","skipParentPredicate","targetContainerParentComponents","sourceComponentParentComponents","sourceRecordEditor","isMovingBetweenRecordEditors","isDroppingOutsideRecordEditor","isDroppingInsideRecordEditor","CanvasOutletHelperService_Factory","CanvasItemColumnComponent","canvasOutletHelperService","dropListDropped","dropListEnterPredicateBind","dropListEnterPredicate","dropListOrientation","enforceDragToSelf","dropContainer","trackByFn","item","dropList","siblings","connectedTo","listInstance","list","dropListRef","_dropListRef","schedule","CanvasItemColumnComponent_Factory","colIndex","column","CanvasItemColumnComponent_Template","CanvasItemColumnComponent_Template_div_cdkDropListDropped_0_listener","dndListIds","listId","NgForOf","CdkDrag","CdkDragHandle","styleUrls","CanvasItemContainerComponent","trackByColFn","preventDrop","currentIndex","CanvasItemContainerComponent_Factory","CanvasItemContainerComponent_Template","NgClass","CanvasOutletComponent","componentFactoryResolver","beforeViewComponentDrop","resolveComponentFactory","containerComponent","CanvasOutletComponent_Factory","ComponentFactoryResolver","CanvasOutletComponent_Query","CanvasOutletComponent_Template","DesignerComponent","DesignerComponent_Factory","DesignerComponent_Template","RxViewDesignerHelperService","designerComponentFactory","extensionViewAllowedComponentTypes","Container","RichText","Character","Textarea","Date","DateTime","Time","Decimal","Floating","Integer","LocalizedCharacter","Selection","SelectGroup","RichTextarea","DynamicNamedList","canvasLayout$","getRecursiveViewLayoutGuids","designModelState","i","String","Shell","initializeCanvasItem","reverse","viewBreadcrumbItem$","shellDefinitionName","viewBreadcrumbLabel","selectedComponentBreadcrumbItems$","breadcrumbItems$","viewItem","componentItems","validationIssuesState","expressionIssues","concat","issuesByComponentGuid","issue","disableCorrection","getLicensedComponents","isDataComponentDescriptor","hidden","isPageComponent","getRecursiveComponentLayoutGuids","childLayout","canvasLayout","designComponentFactory","canvasOutlet","RxViewDesignerHelperService_Factory","RX_VIEW_DESIGNER","stencilGroups","basicComponents","chatbotComponents","recordEditorInputs","inspectorTabs","viewProperties","tabId","ViewDesignerPaletteComponent","filterFormControl","componentsSubject$","viewComponentGroups$","valueChanges","componentNameFilterText","viewComponentDescriptors","descriptors","group","groupsByName","groupName","groups","caseInsensitiveSearch","ViewDesignerPaletteComponent_Factory","ViewDesignerPaletteComponent_Template","AdaptRxSearchComponent","FormControlDirective","AdaptAccordionComponent","RX_VIEW_MODEL","RxViewDesignerComponent","rxNotificationService","rxDefinitionPickerCacheService","rxNamedListDefinitionCacheService","rxUtilityModalsService","rxViewDesignerHelperService","rxExpressionEditorService","rxViewDefinitionService","rxComponentCanDeactivateGuard","rxViewDefinitionGeneratorService","rxViewDesignerModels","rxLogService","rxRecordDefinitionCacheService","rxAssociationDefinitionCacheService","rxProcessDefinitionCacheService","rxGainsightConfiguratorService","rxFeatureService","viewDefinitionSaved","viewDefinitionErrorLoading","closeDesigner","inspectorFocusEditorSubject","isViewDefinitionChanged$","extensionViewRootComponentType","isDesignMode","isStencilExpanded","isInspectorExpanded","inspectorFocusEditor$","viewComponentInspectorEmptyText$","selectedComponentLayout","selectedComponentModel$","isReadOnly$","isExtensionView","isExtensionContainerSet","configuration","paletteComponentsPredicate","componentDescriptors","firstViewComponentType","customViewModel","rxViewModel","registerConsumer","isPreviewAvailable$","disablePreview","viewDefinitionName","viewDefinitionName$","isPageView","addSuccessMessage","hasValidationErrors$","Error","hasValidationWarning$","Warning","hasValidationErrors","isChanged","addWarningMessage","isFeatureEnabled","updateGlobalContext","subProductLevel1","subProductLevel2","getDisplayName","currentValue","unRegisterConsumer","removeGlobalContext","dispatchInitViewDesignerAction","getValue","viewDefinitionChangeSubscription","unsubscribe","initViewDefinitionChangeSubscription","onDropComponent","onRemoveComponent","isConfirmed","onInspectorTabChange","toggleDesignMode","onComponentPropertiesChange","onEditorEvent","inspectorElementRef","correctValidationIssue","revertCustomization","openExpressionEditor","getExpressionProperties","viewComponentPropertyInspectorElementRef","selectRootElement","querySelectorAll","element","propertyPath","getAttribute","path","isComponentInspectorChange","props$","openEditor","legend","expressionPropertyNavigator","getProperties","hasOwnProperty","headPropertyName","debug","isAngularJsView","onCorrectIssue","validationIssue","setTimeout","editorName","disable","window","reload","onViewPropertiesChange","showPreview","canDeactivate","isPristineOrReadOnly","onBeforeComponentDropInRoot","RxViewDesignerComponent_Factory","RxNotificationService","RxDefinitionPickerCacheService","RxUtilityModalsService","RxExpressionEditorService","RxViewDefinitionService","RxComponentCanDeactivateGuard","RxLogService","RxAssociationDefinitionCacheService","RxProcessDefinitionCacheService","RxGainsightConfiguratorService","RxFeatureService","RxViewDesignerComponent_Query","viewPropertyInspectorElementRef","RxViewDesignerComponent_Template","RxViewDesignerComponent_Template_rx_designer_header_breadcrumbSelected_0_listener","RxViewDesignerComponent_Template_rx_designer_header_toggleDesignMode_0_listener","RxViewDesignerComponent_Template_rx_designer_header_showPreview_0_listener","RxViewDesignerComponent_Template_rx_designer_header_save_0_listener","RxViewDesignerComponent_Template_rx_designer_header_closeDesigner_0_listener","RxViewDesignerComponent_Template_rx_blade_toggle_6_listener","RxViewDesignerComponent_Template_rx_view_designer_canvas_componentSelect_15_listener","RxViewDesignerComponent_Template_rx_view_designer_canvas_componentRemove_15_listener","RxViewDesignerComponent_Template_rx_view_designer_canvas_componentDrop_15_listener","RxViewDesignerComponent_Template_rx_view_designer_canvas_beforeComponentDropInRoot_15_listener","RxViewDesignerComponent_Template_rx_blade_toggle_18_listener","RxViewDesignerComponent_Template_adapt_tabset_tab_active_changed_19_listener","RxViewDesignerComponent_Template_rx_form_builder_modelChange_24_listener","RxViewDesignerComponent_Template_rx_form_builder_editorEvent_24_listener","RxViewDesignerComponent_Template_rx_form_builder_modelChange_30_listener","RxViewDesignerComponent_Template_rx_form_builder_editorEvent_30_listener","RxViewDesignerComponent_Template_rx_validation_issues_correctIssue_41_listener","RxDesignerHeaderComponent","RxBladeComponent","AdaptTabsComponent","AdaptTabsPanelComponent","FormBuilderComponent","InspectorDirective","AdaptAlertComponent","RxValidationIssuesComponent","AdaptCodeViewerComponent","TranslatePipe","JsonPipe","ViewDesignerCanvasModule","ViewDesignerCanvasModule_Factory","exports","entryComponents","DesignerModule","DesignerModule_Factory","RxViewDesignerPaletteModule","RxViewDesignerPaletteModule_Factory","RuntimeViewParamsModalComponent","activeModalRef","inputParamNames","getData","isDirty","paramValue","cancel","dismiss","CLOSE_BTN","RuntimeViewParamsModalComponent_Factory","ActiveModalRef","ɵɵInheritDefinitionFeature","RuntimeViewParamsModalComponent_Template","RuntimeViewParamsModalComponent_Template_adapt_button_click_3_listener","close","RuntimeViewParamsModalComponent_Template_adapt_button_click_5_listener","AdaptButtonComponent","AdaptRxTextfieldComponent","RuntimeViewParamsModalModule","RuntimeViewParamsModalModule_Factory","RxViewActionExpressionConfigurator","actionType","rxViewActionRegistryService","parameters","NamedListFilterExpressionConfigurator","fieldDefinition","getNamedListDefinition","namedListDefinition","getRecordDefinition","recordDefinition","getNamedListBranch","namedListBranch","AllServer","namedListDictionaryNodes","fieldDefinitions","attachment","selection","optionNamesById","optionName","optionValue","ActionSandbox","initialProps","destroyedSubject","actionPropertyEditorConfigSubject","actionPropertiesSubject","children$","actionPropertyEditorConfig$","getActionProperties","setActionProperties","$condition$","getActionPropertyValue","setActionPropertyEditorConfig","actionEditorConfig","getActionPropertyEditorConfig","setActionOutputDataDictionary","getChildren","onDestroy","RxViewDesignerActionModel","getExpressionConfigurator","getOutputExpressionForPropertyPath","RxViewDesignerDefaultActionModel","defaultProps","defaultValue","getActionEditorConfig","editor","isRequired","editorOptions","RxActionListModelManagerService","designModel","getInitialProperties","Model","actionModel","RxActionListModelManagerService_Factory","ActionListEditorDialogComponent","rxActionListModelManagerService","availableActionDescriptors$","getLicensedActions","WrapAll","isEditorDirtySubject","sort","a","b","localeCompare","actionToEdit","actionDescriptor","updateIndexProp","accordionTabEls","toArray","scrollIntoView","block","_b","_c","call","fromIndex","toIndex","expandAll","onSelectedActionsListDrop","previousIndex","controlElement","ngAfterViewInit","openActionIndex","ActionListEditorDialogComponent_Factory","ActionListEditorDialogComponent_Query","ActionListEditorDialogComponent_Template","ActionListEditorDialogComponent_Template_div_cdkDropListDropped_12_listener","ActionListEditorDialogComponent_Template_button_click_18_listener","AdaptIconComponent","AdaptPopoverDirective","AdaptTreeComponent","AdaptTreeNodeTemplateDirective","AdaptEmptyStateComponent","ActionListEditorDialogModule","ActionListEditorDialogModule_Factory","ActionListControlComponent","availableActions$","focus","actionIndex","openActionSelector","openModal","Large","testID","catch","onSetValue","updateSortedActionsList","onWriteValue","ActionListControlComponent_Factory","useExisting","multi","ActionListControlComponent_Template","ActionListControlComponent_Template_adapt_button_click_0_listener","ActionListControlModule","ActionListControlModule_Factory","RxComponentPermissionEditorWidgetComponent","onPermissionsChange","RxComponentPermissionEditorWidgetComponent_Factory","RxComponentPermissionEditorWidgetComponent_Template","RxComponentPermissionEditorWidgetComponent_Template_rx_permission_editor_ngModelChange_0_listener","RxComponentPermissionEditorWidgetModule","RxComponentPermissionEditorWidgetModule_Factory","RxViewCustomizationOptionsModule","RxViewCustomizationOptionsModule_Factory","ActionListWidgetComponent","modelSandbox","designerItemModel","onActionsChange","getActionComponentPayloads","actionListControlComponent","actionInspectorModels","ActionListWidgetComponent_Factory","ActionListWidgetComponent_Query","ActionListWidgetComponent_Template","ActionListWidgetComponent_Template_rx_action_list_control_ngModelChange_0_listener","ActionListWidgetModule","ActionListWidgetModule_Factory","ViewDesignerComponentModel","_expressionConfigurator","getExpressionForProperty","RX_AVAILABLE_ON_DEVICES_OPTIONS","Desktop","Tablet","Mobile","getAvailableOnDevicesInspectorConfig","multiple","hideSelectAllButton","hideDeselectAllButton","getHiddenFieldInspectorConfig","getDisabledFieldInspectorConfig","getStylesFieldInspectorConfig","autocompleteValues","getStandardPropsInspectorConfigs","RxViewActionValidatorService","actionsDesignData","validateRequiredProps","performCustomValidation","validateExpressions","validateActionSequence","actionProps","issuePropertyName","designManager","getDesignManager","descriptorParams","isEmptySafe","actionIssues","paramDescriptor","enableExpressionEvaluation","propertyValue","matches","match","referencedAction","Number","RxViewActionValidatorService_Factory","ComponentSandbox","systemActions$","childModelsInitialized$","dispatcher$","setUpPublicStreams","isExistingViewComponent","isComponentSelected$","isSelected","createError","createWarning","getChildComponentsTree","isInitialized","setChildrenByType","types","updateInspectorConfig","addComponent","dataArray","actionPayload","setLayout","cols","getLayout","setCommonDataDictionary","viewComponentsRemovedAction$","componentProperties$","RxViewExpressionValidatorRegistryService","issuesObservableMap","registerComponents","getComponentValidationIssues","initValidation","unregisterComponents","unregisterAllComponents","validateSubscription","entries","expressionProps","expressionPropertyNames","descriptorPropMap","prop","RxViewExpressionValidatorRegistryService_Factory","RxViewDesignerStateHelperService","getInitialComponentProperties","initialProperties","componentDescriptor","designComponentModel","getDefaultComponentPermissions","getDefaultPermissions","RxViewDesignerStateHelperService_Factory","ViewDesignerComponentEffects","rxViewExpressionValidatorRegistryService","rxViewDesignerStateHelperService","rxViewDataDictionaryStoreService","initializeComponentModel$","rxInit","registerComponentsValidation$","onComponentsRemoved$","unregisterAllComponentsValidation$","insertComponent$","newPayload","addNewComponent$","viewComponentsState","initializeComponentModelPayloads","initializeDataComponentModelPayloads","componentGuidsToSelect","processAddComponentPayload","removeComponent$","guidsToRemove","removedComponentModel","removeGuidsSet","lastRemovedModel","setChildren$","componentGuidsToRemove","addComponentsPayloadAll","editComponentPayloadAll","processChildComponents","componentsToSet","componentsGuidsToSet","hostComponent","existingChildGuids","componentGuidsToRemoveLocal","componentGuidsToAdd","componentsGuidsToUpdate","addComponentsPayload","getAddComponentPayload","editComponentPayload","existingModel","initializeComponentModelPayload","payloadParent","modelParent","parentWithoutLayout","isContainerComponent","getEmptyViewLayoutForOutletNames","ViewDesignerComponentEffects_Factory","prototype","ViewDesignerEffects","rxDefinitionUpdateService","rxGlobalCacheService","rxJsonParserService","rxOldViewLayoutAdapterService","errorHandler","rxDefinitionAdapterRegistryService","rxViewActionDefinitionAdapterRegistryService","layoutTemplate","clearStorages","loadFriendlyBundleName$","getBundleDescriptor","result$","friendlyName","error","handleError","loadViewDefinition$","getNew","viewDefinitionLoadSuccess$","getActionsToUpdateExistingViewModels","getActionsToInitializeViewModels","selectViewComponent$","currentInspectorTabId","selectedInspectorTab","generateViewDefinition$","saveViewDefinition$","execute","update","response","definitionName","decodeURIComponent","headers","clearCanvas$","runPreview$","encodedViewDefinitionName","encodeURIComponent","url","inputConfig","join","open","convertViewDefinitionToModel","convertLayout","tryParseJson","getEmptyViewLayoutForOutlets","layoutName","getLayoutName","convertComponentDefinitionToModel","processComponentDefinitionProperties","isComponentHasLayout","propertyKey","designType","isGuid","traverseByComponents","predicate","componentLayout","childComponentDefinitions","childComponentGuid","childComponentDefinition","isDataComponent","viewDefinitionClone","initComponentModelsPayload","initDataComponentModelsPayload","adapter","getDesignAdapter","adaptDefinition","registerUnknownAction","pageComponentChildDescriptor","unknownComponentDescriptor","Unknown","registerSync","updateComponentModelPayloads","ViewDesignerEffects_Factory","RxDefinitionUpdateService","RxGlobalCacheService","RxJsonParserService","RxOldViewLayoutAdapterService","ErrorHandler","RxDefinitionAdapterRegistryService","RxViewActionDefinitionAdapterRegistryService","getInitialState$4","reducer$4","viewDefinitionReducer","getInitialState$3","reducer$3","newState","viewDesignerBreadcrumbsReducer","getInitialState$2","initializeComponentModel","reducer$2","oldParentComponentModel","defaultOutlet","existingColumns","removedColumns","colSpan","removedColumnChildComponents","col","lastExistingCol","viewDesignerModelReducer","getInitialState$1","reducer$1","_","viewDesignerUiReducer","getInitialState","reducer","viewDesignerValidationReducer","ViewDesignerModule","ViewDesignerModule_Factory","StoreFeatureModule","EffectsFeatureModule","forRoot","forFeature"],"sources":["C:/projects/BMC-Helix-Angular-prod/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-view-designer.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, EventEmitter, Output, NgModule, InjectionToken, ViewContainerRef, Inject, ViewChild, ChangeDetectionStrategy, SkipSelf, Optional, InjectFlags, ElementRef, ViewChildren } from '@angular/core';\nimport * as i12 from '@helix/platform/association/api';\nimport * as i4$2 from '@helix/platform/named-list/api';\nimport { RxNamedListDefinitionCacheService } from '@helix/platform/named-list/api';\nimport * as i13 from '@helix/platform/process/api';\nimport * as i11 from '@helix/platform/record/api';\nimport { RX_RECORD_DEFINITION, RxRecordDefinitionCacheService } from '@helix/platform/record/api';\nimport * as i3 from '@helix/platform/shared/api';\nimport { ExpressionParserToken, RxExpressionConfigurator, ExpressionOperatorRowsByGroup, ExpressionOperatorGroup, Tooltip, RX_APPLICATION } from '@helix/platform/shared/api';\nimport * as i3$1 from '@helix/platform/shared/components';\nimport { RxRevertCustomizationModule, SelectFormControlComponent, TextFormControlComponent, TextareaFormControlComponent, RxDefinitionPickerComponent, RxDefinitionPickerType, TagsFormControlComponent, RxPermissionEditorComponent, ListFormControlComponent, RX_VALIDATION_FORM_CONTROL, RX_REVERT_CUSTOMIZATION, RX_EXPRESSION_EDITOR, ExpressionFormControlComponent, ExpressionEditorModule, RxFormBuilderModule, ValueAccessor, RxPermissionEditorModule, CustomizationOptionsModule, InspectorWidgetBase, OptionalExpressionInspectorControlComponent, FormControlsModule, RxDesignerHeaderModule, RxInspectorModule } from '@helix/platform/shared/components';\nimport * as i5$1 from '@helix/platform/ui-kit';\nimport { RX_MODAL, ValidationIssueType, RxModalClass, RxBladeModule, RxValidationIssuesModule, RxJsonViewerModule } from '@helix/platform/ui-kit';\nimport * as i5 from '@helix/platform/view/api';\nimport { RxViewLayout, RxViewComponentType, RX_AVAILABLE_ON_DEVICES_PROP_NAME, RX_STYLES_PROP_NAME, RX_EXPRESSION_FUNCTIONS, RxExpressionHelperService, RxDefaultExpressionEvaluatorService, RxViewComponentRegistryService, RX_VIEW_DEFINITION, BwfViewComponentType, ViewDefinitionType, RxViewActionRegistryService, OpenViewActionModalSize, RxDevice, RX_HIDDEN_PROP_NAME, RX_DISABLED_PROP_NAME, ViewComponentPropertyType, ViewActionDesignModule } from '@helix/platform/view/api';\nimport * as i6 from '@ngx-translate/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { includes, some, uniq, map, flow, compact, isEmpty, omit, has, reject, sortBy, get, isFinite as isFinite$1, flatten, filter as filter$1, isFunction, transform, isUndefined, isObject, isPlainObject, isBoolean, isNumber, isArray, isEqual, find, take as take$1, findIndex, throttle, isString, mergeWith, reduce, groupBy, lowerCase, pick, toPath, set, cloneDeep, values, chain, pull, noop, without, castArray, merge as merge$1, every, last, difference, forEach, omitBy } from 'lodash';\nimport { ReplaySubject, Subject, of, merge, combineLatest, EMPTY, asapScheduler, BehaviorSubject, throwError, noop as noop$1 } from 'rxjs';\nimport { filter, map as map$1, shareReplay, switchMap, take, withLatestFrom, distinctUntilChanged, bufferToggle, takeUntil, switchMapTo, concatMapTo, skip, first, tap, concatMap, debounceTime, startWith, skipWhile, mapTo, publishReplay, refCount, mergeMap, catchError } from 'rxjs/operators';\nimport * as i2$1 from '@helix/platform/utils';\nimport * as i1 from '@ngrx/effects';\nimport { ofType, Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport * as i2 from '@ngrx/store';\nimport { createAction, props, createFeatureSelector, createSelector, createReducer, on, StoreModule } from '@ngrx/store';\nimport * as i3$2 from '@angular/forms';\nimport { FormControl, ReactiveFormsModule, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$1 from '@angular/cdk/drag-drop';\nimport { CdkDropList, DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i3$3 from '@bmc-ux/adapt-angular';\nimport { AdaptAccordionModule, AdaptRxSearchModule, DismissReasons, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule, TreeWrap, toNumber, AdaptAccordionTabComponent, AdaptEmptyStateModule, AdaptIconModule, AdaptPopoverModule, AdaptTreeModule, AdaptCodeViewerModule, AdaptAlertModule, AdaptTabsModule } from '@bmc-ux/adapt-angular';\nimport { AdaptTextFieldModule } from '@bmc-ux/obsolete';\nimport { __decorate, __metadata } from 'tslib';\n\nfunction findParentComponentModel(guid, components) {\n    const currentComponent = components[guid];\n    return components[currentComponent === null || currentComponent === void 0 ? void 0 : currentComponent.parentGuid];\n}\nfunction findAllParentComponentGuids(guid, components) {\n    const result = [guid];\n    let parentModel = findParentComponentModel(guid, components);\n    let nextGuid = parentModel ? parentModel.guid : null;\n    while (nextGuid) {\n        result.unshift(nextGuid);\n        parentModel = findParentComponentModel(nextGuid, components);\n        nextGuid = parentModel ? parentModel.guid : null;\n    }\n    return result;\n}\nfunction findParentComponentByType(guid, componentType, components) {\n    let result;\n    let parentModel = findParentComponentModel(guid, components);\n    let nextGuid = parentModel ? parentModel.guid : null;\n    while (nextGuid) {\n        if (parentModel.type === componentType) {\n            result = parentModel;\n            nextGuid = null;\n        }\n        else {\n            parentModel = findParentComponentModel(nextGuid, components);\n            nextGuid = parentModel ? parentModel.guid : null;\n        }\n    }\n    return result;\n}\nfunction isComponentContainsChild(guid, componentModel) {\n    if (componentModel.layout) {\n        const hasChild = RxViewLayout.hasChild(componentModel.layout, guid);\n        if (hasChild) {\n            return true;\n        }\n    }\n    if (componentModel.childDataComponentGuids) {\n        return includes(componentModel.childDataComponentGuids, guid);\n    }\n    else {\n        return false;\n    }\n}\nfunction addChildComponent(componentModel, guid, outletName, insertIndex, columnIndex = 0, columnSpan = 0) {\n    const newComponentModel = Object.assign({}, componentModel);\n    newComponentModel.layout = {\n        outlets: componentModel.layout.outlets.map((outlet) => {\n            if (outlet.name === outletName) {\n                const columns = [...outlet.columns];\n                insertIndex = isFinite(insertIndex) ? insertIndex : columns[columnIndex].children.length;\n                if (!columns[columnIndex]) {\n                    columns[columnIndex] = {\n                        children: []\n                    };\n                    if (columnSpan) {\n                        columns[columnIndex].span = columnSpan;\n                    }\n                }\n                // todo handle drop in non-first column\n                columns[columnIndex] = {\n                    children: [\n                        ...columns[columnIndex].children.slice(0, insertIndex),\n                        guid,\n                        ...columns[columnIndex].children.slice(insertIndex)\n                    ],\n                    span: columns[columnIndex].span\n                };\n                return Object.assign(Object.assign({}, outlet), { columns });\n            }\n            else {\n                return outlet;\n            }\n        })\n    };\n    return newComponentModel;\n}\nfunction removeChildComponent(componentGuidToRemove, parentComponentModel) {\n    const newParentComponentModel = Object.assign({}, parentComponentModel);\n    if (some(newParentComponentModel.childDataComponentGuids, (guid) => componentGuidToRemove === guid)) {\n        newParentComponentModel.childDataComponentGuids = newParentComponentModel.childDataComponentGuids.filter((guid) => guid !== componentGuidToRemove);\n    }\n    if (parentComponentModel.layout && RxViewLayout.hasChild(parentComponentModel.layout, componentGuidToRemove)) {\n        newParentComponentModel.layout = RxViewLayout.removeChildFromLayout(parentComponentModel.layout, componentGuidToRemove);\n    }\n    return newParentComponentModel;\n}\nfunction getChildGuidsFromModel(model) {\n    const guids = [];\n    if (model.childDataComponentGuids) {\n        guids.push(...model.childDataComponentGuids);\n    }\n    if (model.layout) {\n        guids.push(...RxViewLayout.getViewLayoutChildGuids(model.layout));\n    }\n    return uniq(guids);\n}\nfunction getAllChildGuids(parentComponent, componentModelsState) {\n    const guids = getChildGuidsFromModel(parentComponent);\n    return guids.reduce((result, guid) => {\n        result.push(...getAllChildGuids(componentModelsState[guid], componentModelsState));\n        return result;\n    }, guids);\n}\n\nclass RxViewDataDictionaryBuilderService {\n    constructor() {\n        this.componentIcon = 'd-icon-file_o';\n        this.componentPropertyIcon = 'd-icon-file_o_gear';\n        this.settablePropertiesIcon = 'd-icon-arrow_right_square_input';\n        this.actionOutputIcon = 'd-icon-arrow_chart';\n    }\n    getActionOutputDataDictionaryBranch(actionName, dataDictionary) {\n        return {\n            label: actionName,\n            icon: 'd-icon-arrow_chart',\n            children: map(dataDictionary, (dataDictionaryBranch) => this.buildDataDictionaryBranch(dataDictionaryBranch, this.actionOutputIcon))\n        };\n    }\n    getComponentCommonDataDictionaryBranch(branch) {\n        return Object.assign(Object.assign({}, branch), { icon: this.componentIcon, children: flow((children) => map(children, (child) => this.buildDataDictionaryBranch(child, this.componentPropertyIcon)), compact)(branch.children) });\n    }\n    getSettablePropertiesDataDictionary(branches) {\n        return map(branches, (branch) => this.buildDataDictionaryBranch(branch, this.settablePropertiesIcon));\n    }\n    buildDataDictionaryBranch(branch, icon) {\n        const node = Object.assign({}, branch);\n        if (branch.expression) {\n            node.icon = icon;\n        }\n        if (branch.children) {\n            node.children = flow((children) => map(children, (child) => this.buildDataDictionaryBranch(child, icon)), compact)(branch.children);\n        }\n        return node;\n    }\n}\nRxViewDataDictionaryBuilderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryBuilderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDataDictionaryBuilderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryBuilderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryBuilderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass RxViewDataDictionaryStoreService {\n    constructor() {\n        this.componentsCommon = null;\n        this.componentsCommonSubject = new ReplaySubject(1);\n        this.componentsCommon$ = this.componentsCommonSubject.asObservable();\n        this.viewCommon = null;\n        this.viewCommonSubject = new ReplaySubject(1);\n        this.viewCommon$ = this.viewCommonSubject.asObservable();\n        this.actionsOutput = [];\n        this.actionsOutputSubject = new ReplaySubject(1);\n        this.actionsOutput$ = this.actionsOutputSubject.asObservable();\n        this.settableProperties = null;\n        this.settablePropertiesSubject = new ReplaySubject(1);\n        this.settableProperties$ = this.settablePropertiesSubject.asObservable();\n    }\n    setCommonDataDictionaryBranch(guid, dataDictionaryBranch) {\n        this.setComponentCommon(isEmpty(dataDictionaryBranch)\n            ? omit(this.componentsCommon, [guid])\n            : Object.assign(Object.assign({}, this.componentsCommon), { [guid]: dataDictionaryBranch }));\n    }\n    setViewCommonDataDictionaryBranch(dataDictionaryBranch) {\n        this.setViewCommon(dataDictionaryBranch);\n    }\n    setSettablePropertiesDataDictionary(items) {\n        this.setSettableProperties(Object.assign(Object.assign({}, this.settableProperties), items.reduce((result, { guid, componentName, dataDictionary }) => {\n            result[guid] = { componentName, dataDictionary };\n            return result;\n        }, {})));\n    }\n    removeDataDictionaryForComponents(guids) {\n        if (guids.some((guid) => has(this.componentsCommon, guid))) {\n            this.setComponentCommon(omit(this.componentsCommon, guids));\n        }\n        if (guids.some((guid) => has(this.settableProperties, guid))) {\n            this.setSettableProperties(omit(this.settableProperties, guids));\n        }\n    }\n    setActionOutputDataDictionaryBranch(guid, index, dataDictionaryBranch) {\n        this.setActionsOutput(flow((actions) => [\n            ...reject(actions, { guid }),\n            { guid, index, dataDictionaryBranch }\n        ], (actions) => sortBy(actions, 'index'))(this.actionsOutput));\n    }\n    updateActionOutputDataDictionaryBranchOrder(actions) {\n        this.setActionsOutput(flow((actionsOutput) => map(actionsOutput, (actionOutput) => (Object.assign(Object.assign({}, actionOutput), { index: actions[actionOutput.guid] }))), (actionsOutput) => sortBy(actionsOutput, 'index'))(this.actionsOutput));\n    }\n    removeActionOutputDataDictionaryBranch(guid) {\n        this.setActionsOutput(reject(this.actionsOutput, { guid }));\n    }\n    removeAllActionOutputDataDictionaryBranches() {\n        this.setActionsOutput(null);\n    }\n    clear() {\n        this.setComponentCommon(null);\n        this.setViewCommon(null);\n        this.setSettableProperties(null);\n        this.setActionsOutput([]);\n    }\n    setComponentCommon(state) {\n        this.componentsCommon = state;\n        this.componentsCommonSubject.next(this.componentsCommon);\n    }\n    setViewCommon(state) {\n        this.viewCommon = state;\n        this.viewCommonSubject.next(this.viewCommon);\n    }\n    setActionsOutput(state) {\n        this.actionsOutput = state;\n        this.actionsOutputSubject.next(this.actionsOutput);\n    }\n    setSettableProperties(state) {\n        this.settableProperties = state;\n        this.settablePropertiesSubject.next(this.settableProperties);\n    }\n}\nRxViewDataDictionaryStoreService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryStoreService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDataDictionaryStoreService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryStoreService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryStoreService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass RxViewDesignerInspectorService {\n    constructor() {\n        this.onChangeSubject = new Subject();\n        this.configs = new Map();\n        this.onChange$ = this.onChangeSubject.asObservable();\n    }\n    clear() {\n        this.configs.clear();\n    }\n    set(guid, config) {\n        this.configs.set(guid, config);\n        this.onChangeSubject.next({ guid, config });\n    }\n    get(guid) {\n        return this.configs.get(guid);\n    }\n    delete(guid) {\n        this.onChangeSubject.next({ guid, config: null });\n        this.configs.delete(guid);\n    }\n}\nRxViewDesignerInspectorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerInspectorService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDesignerInspectorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerInspectorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerInspectorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst componentsRemoved = createAction('[View Component] Components Removed', props());\nconst initializeComponentModels = createAction('[View Component] Initialize Component Models', props());\nconst initializeDataComponentModels = createAction('[View Component] Initialize Data Component Models', props());\nconst setValidationIssues = createAction('[View Component] Set Validation Issues', props());\nconst setExpressionValidationIssues = createAction('[View Component] Set Expression Validation Issues', props());\nconst setComponentData = createAction('[View Component] Set Component Properties', props());\nconst setChildComponents = createAction('[View Component] Set Child Components', props());\nconst setBreadcrumbs = createAction('[View Component] Set Breadcrumbs', props());\nconst selectComponent = createAction('[View Component] Select Component', props());\nconst setComponentLayout = createAction('[View Component] Set Component Layout', props());\nconst moveComponent = createAction('[View Component] Move Component', props());\nconst insertComponent = createAction('[View Component] Insert Component', props());\nconst addNewComponents = createAction('[View Component] Add New Components', props());\nconst updateComponentModel = createAction('[View Component] Update Component Model', props());\nconst removeComponents = createAction('[View Component] Remove Components', props());\n\n/**\n * Public class for dispatching actions\n * Protects ngrx store$ service from selecting data from the store\n */\nclass ViewDesignerDispatcher {\n    constructor(store$) {\n        this.store$ = store$;\n    }\n    dispatch(action) {\n        this.store$.dispatch(action);\n    }\n}\nViewDesignerDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerDispatcher, deps: [{ token: i2.Store }], target: i0.ɵɵFactoryTarget.Injectable });\nViewDesignerDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerDispatcher, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i2.Store }]; } });\n\nconst viewDefinitionSaveSuccess = createAction('[View Designer] View Definition Save Success', props());\nconst viewDefinitionSaveError = createAction('[View Designer] View Definition Save Error');\nconst viewDefinitionLoadSuccess = createAction('[View Designer] View Definition Load Success', props());\nconst viewDefinitionLoadError = createAction('[View Designer] View Definition Load Error');\nconst setGeneratedViewDefinition = createAction('[View Designer] Set Generated View Definition', props());\nconst loadViewDefinition = createAction('[View Designer] Load View Definition', props());\nconst friendlyBundleNameLoadSuccess = createAction('[View Designer] Bundle Friendly Name Load Success', props());\nconst friendlyBundleNameLoadError = createAction('[View Designer] Bundle Friendly Name Load Error', props());\nconst viewModelsInitialized = createAction('[View Designer] View Models Initialized');\nconst viewModelsUpdatedAfterSave = createAction('[View Designer] View Models Updated After Save');\nconst updateViewModel = createAction('[View Designer] Update View Model', props());\nconst setViewModel = createAction('[View Designer] Set View Model', props());\nconst selectInspectorTab = createAction('[View Designer] Select Inspector Tab', props());\nconst saveViewDefinition = createAction('[View Designer] Save View Definition', props());\nconst runPreview = createAction('[View Designer] Run Preview');\nconst loadFriendlyBundleName = createAction('[View Designer] Load Bundle Friendly Name');\nconst generateViewDefinition = createAction('[View Designer] Generate View Definition', props());\nconst clearCanvas = createAction('[View Designer] Clear Canvas');\nconst initViewDesigner = createAction('[View Designer] Init', props());\nconst destroyViewDesigner = createAction('[View Designer] Destroy');\n\nconst viewDesignerState = createFeatureSelector('viewDesigner');\nconst viewDesignerModelsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.model);\nconst viewModelSelector = createSelector(viewDesignerModelsSelector, (models) => models.viewDesignModel);\nconst viewModelPropertyValueSelector = createSelector(viewModelSelector, (viewModel, { propertyName }) => get(viewModel, propertyName));\nconst viewComponentModelsSelector = createSelector(viewDesignerModelsSelector, (models) => models.viewComponentDesignModels);\nconst firstViewComponentModelTypeSelector = createSelector(viewDesignerModelsSelector, (models) => { var _a; return (_a = Object.values(models.viewComponentDesignModels)[0]) === null || _a === void 0 ? void 0 : _a.type; });\nconst viewComponentModelSelector = createSelector(viewComponentModelsSelector, (componentModels, { guid }) => componentModels[guid]);\nconst parentComponentModelGuidSelector = createSelector(viewComponentModelSelector, (componentModel) => componentModel === null || componentModel === void 0 ? void 0 : componentModel.parentGuid);\nconst componentPropertiesByNameSelector = createSelector(viewComponentModelsSelector, (componentModels, { guid, propertyName }) => componentModels[guid]\n    ? propertyName\n        ? get(componentModels[guid].propertiesByName, propertyName)\n        : componentModels[guid].propertiesByName\n    : null);\nconst componentTypeSelector = createSelector(viewComponentModelsSelector, (componentModels, { guid }) => componentModels[guid] ? componentModels[guid].type : null);\nconst componentLayoutSelector = createSelector(viewComponentModelSelector, (componentModel) => componentModel === null || componentModel === void 0 ? void 0 : componentModel.layout);\nconst componentPermissionsSelector = createSelector(viewComponentModelSelector, (componentModel) => componentModel === null || componentModel === void 0 ? void 0 : componentModel.permissions);\nconst childDataComponentGuidsSelector = createSelector(viewComponentModelSelector, (componentModel) => componentModel === null || componentModel === void 0 ? void 0 : componentModel.childDataComponentGuids);\nconst viewDesignerUISelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.ui);\nconst isViewDefinitionLoadingSelector = createSelector(viewDesignerUISelector, (ui) => ui.isViewDefinitionLoading);\nconst bundleFriendlyNameSelector = createSelector(viewDesignerUISelector, (ui) => ui.friendlyBundleName);\nconst currentBundleIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.currentBundleId);\nconst viewDefinitionSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.viewDefinition);\nconst validationIssuesSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.validation);\nconst breadcrumbsSelector = createSelector(viewDesignerState, (viewDesigner) => viewDesigner.breadcrumbs);\nconst selectedInspectorTabIdSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedInspectorTabId);\nconst selectedComponentGuidSelector = createSelector(viewDesignerUISelector, (ui) => ui.selectedComponentGuid);\nconst areViewModelsReadySelector = createSelector(viewDesignerUISelector, (ui) => ui.areViewModelsReady);\nconst selectedComponentPropsSelector = createSelector(selectedComponentGuidSelector, viewComponentModelsSelector, (selectedComponentGuid, componentModels) => {\n    if (componentModels && selectedComponentGuid) {\n        const componentDesignModel = componentModels[selectedComponentGuid];\n        return componentDesignModel ? componentDesignModel.propertiesByName : null;\n    }\n    else {\n        return null;\n    }\n});\n\nclass ViewDesignerFacade {\n    constructor(dispatcher, store$, actions$, rxViewDesignerInspectorService, rxGuidService, rxViewDataDictionaryBuilderService, rxViewDataDictionaryService, rxOverlayService) {\n        this.dispatcher = dispatcher;\n        this.store$ = store$;\n        this.actions$ = actions$;\n        this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n        this.rxGuidService = rxGuidService;\n        this.rxViewDataDictionaryBuilderService = rxViewDataDictionaryBuilderService;\n        this.rxViewDataDictionaryService = rxViewDataDictionaryService;\n        this.rxOverlayService = rxOverlayService;\n        this.viewDefinition$ = this.store$.select(viewDefinitionSelector);\n        this.validationIssues$ = this.store$.select(validationIssuesSelector);\n        this.breadcrumbs$ = this.store$.select(breadcrumbsSelector);\n        this.viewDesignerModelState$ = this.store$.select(viewDesignerModelsSelector);\n        // filter operator is used to ignore the empty model when:\n        // - the view definition has not been loaded for the first time, or\n        // - the view definition is being saved.\n        this.viewModel$ = this.store$.select(viewModelSelector).pipe(filter(Boolean));\n        this.viewModelGuid$ = this.getViewPropertyValue('guid');\n        this.viewComponentModels$ = this.store$.select(viewComponentModelsSelector);\n        this.firstViewComponentModelType$ = this.store$.select(firstViewComponentModelTypeSelector);\n        this.isExtensionView$ = this.getViewPropertyValue('targetViewDefinitionName').pipe(map$1(Boolean), shareReplay(1));\n        this.isExtensionContainerSet$ = this.getViewPropertyValue('targetExtensionContainerGuid').pipe(map$1(Boolean), shareReplay(1));\n        this.allComponentGuids$ = this.viewComponentModels$.pipe(map$1((models) => new Set(Object.keys(models))), shareReplay({\n            refCount: true,\n            bufferSize: 1\n        }));\n        this.selectedComponentGuid$ = this.store$.select(selectedComponentGuidSelector).pipe(switchMap((componentGuid) => this.viewModelGuid$.pipe(map$1((viewGuid) => (componentGuid === viewGuid ? null : componentGuid)), take(1))));\n        this.selectedComponentProperties$ = this.selectedComponentGuid$.pipe(switchMap((guid) => (guid ? this.getComponentProperties(guid) : of(null))));\n        this.isViewDefinitionLoading$ = this.store$.select(isViewDefinitionLoadingSelector);\n        this.selectedInspectorTabId$ = this.store$.select(selectedInspectorTabIdSelector);\n        this.bundleFriendlyName$ = this.store$.select(bundleFriendlyNameSelector);\n        this.currentBundleId$ = this.store$.select(currentBundleIdSelector);\n        this.viewInspectorLayout$ = merge(this.viewModelGuid$, this.rxViewDesignerInspectorService.onChange$.pipe(withLatestFrom(this.viewModelGuid$), filter(([config, guid]) => config.guid === guid), map$1(([config, guid]) => guid))).pipe(map$1((guid) => {\n            const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n            return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n        }));\n        this.selectedComponentInspectorLayout$ = merge(this.selectedComponentGuid$.pipe(distinctUntilChanged()), this.rxViewDesignerInspectorService.onChange$.pipe(withLatestFrom(this.selectedComponentGuid$), filter(([config, guid]) => config.guid === guid), map$1(([config, guid]) => guid))).pipe(map$1((guid) => {\n            const inspectorConfig = this.rxViewDesignerInspectorService.get(guid);\n            return inspectorConfig ? inspectorConfig.inspectorSectionConfigs : null;\n        }));\n        this.isViewReadOnly$ = combineLatest([\n            this.viewModel$,\n            this.currentBundleId$.pipe(switchMap((bundleId) => this.rxOverlayService.areNewDefinitionsAllowed(bundleId)))\n        ]).pipe(map$1(([viewModel, areNewDefinitionsAllowed]) => !areNewDefinitionsAllowed || !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel)), distinctUntilChanged(), shareReplay(1));\n        // Actions Stream\n        this.viewDefinitionLoadError$ = this.actions$.pipe(ofType(viewDefinitionLoadError));\n        this.viewDefinitionSaveSuccess$ = this.actions$.pipe(ofType(viewDefinitionSaveSuccess));\n        this.initViewDesigner$ = this.actions$.pipe(ofType(initViewDesigner));\n        this.destroyViewDesignerSubject = new Subject();\n        this.destroyViewDesigner$ = this.destroyViewDesignerSubject.asObservable();\n        this.viewModelsInitialized$ = this.actions$.pipe(ofType(viewModelsInitialized));\n        this.areViewModelsReady$ = this.store$.select(areViewModelsReadySelector);\n        this.viewCommonDataDictionaryState$ = this.rxViewDataDictionaryService.viewCommon$;\n        this.componentsCommonDataDictionaryState$ = this.rxViewDataDictionaryService.componentsCommon$;\n        this.actionsDataDictionaryState$ = this.rxViewDataDictionaryService.actionsOutput$;\n        this.settablePropertiesDataDictionaryState$ = this.rxViewDataDictionaryService.settableProperties$;\n        this.settablePropertiesDataDictionarySubject = new Subject();\n        // for performance reasons grouping actions before sending them to store\n        merge(this.settablePropertiesDataDictionarySubject.pipe(bufferToggle(this.initViewDesigner$, (v) => this.viewModelsInitialized$)), this.viewModelsInitialized$.pipe(switchMap(() => this.settablePropertiesDataDictionarySubject.pipe(map$1((data) => [data]), takeUntil(this.initViewDesigner$))))).subscribe((items) => {\n            this.rxViewDataDictionaryService.setSettablePropertiesDataDictionary(items);\n        });\n    }\n    getComponentModel(guid) {\n        return this.store$.select(viewComponentModelSelector, { guid });\n    }\n    initViewDesigner(payload) {\n        this.dispatcher.dispatch(initViewDesigner({\n            payload\n        }));\n    }\n    destroyViewDesigner() {\n        this.destroyViewDesignerSubject.next();\n        // trigger action after subject to allow store to be cleared after every component is destroyed\n        // and its streams are completed\n        this.dispatcher.dispatch(destroyViewDesigner());\n    }\n    selectComponent(guid) {\n        this.dispatcher.dispatch(selectComponent({ guid }));\n    }\n    insertComponent(payload) {\n        this.dispatcher.dispatch(insertComponent(Object.assign(Object.assign({ columnIndex: isFinite$1(payload.data && payload.data.columnIndex) ? payload.data.columnIndex : 0 }, payload), { data: {\n                guid: payload.data.draggedViewComponentGuid,\n                type: payload.data.draggedViewComponentDescriptor.type,\n                initialPropertiesByName: payload.data.initialPropertiesByName\n            } })));\n    }\n    selectInspectorTab(payload) {\n        this.dispatcher.dispatch(selectInspectorTab(payload));\n    }\n    generateViewDefinition(payload) {\n        this.dispatcher.dispatch(generateViewDefinition({ payload }));\n    }\n    updateComponentProperties(guid, componentProperties) {\n        this.dispatcher.dispatch(updateComponentModel({\n            payload: [\n                {\n                    guid,\n                    partialModel: {\n                        propertiesByName: componentProperties\n                    }\n                }\n            ]\n        }));\n    }\n    updateComponentModel(guid, payload) {\n        this.dispatcher.dispatch(updateComponentModel({\n            payload: [\n                {\n                    guid,\n                    partialModel: payload\n                }\n            ]\n        }));\n    }\n    getComponentProperties(guid) {\n        return this.store$.select(componentPropertiesByNameSelector, { guid });\n    }\n    getComponentPropertyValue(guid, propertyName) {\n        return this.store$.select(componentPropertiesByNameSelector, { guid, propertyName: propertyName }).pipe(withLatestFrom(this.getComponentModel(guid)), switchMap(([value, model]) => (model ? of(value) : EMPTY)));\n    }\n    getComponentType(guid) {\n        return this.store$.select(componentTypeSelector, { guid });\n    }\n    getComponentPermissions(guid) {\n        return this.store$.select(componentPermissionsSelector, { guid });\n    }\n    getComponentLayout(guid) {\n        return this.store$.select(componentLayoutSelector, { guid });\n    }\n    updateSelectedComponentProperties(properties) {\n        this.selectedComponentGuid$.pipe(take(1)).subscribe((guid) => {\n            this.updateComponentProperties(guid, properties);\n        });\n    }\n    saveViewDefinition(payload) {\n        this.dispatcher.dispatch(saveViewDefinition({ payload }));\n    }\n    updateViewProperties(properties) {\n        this.dispatcher.dispatch(updateViewModel({ payload: properties }));\n    }\n    setViewProperties(properties) {\n        this.dispatcher.dispatch(setViewModel({ payload: properties }));\n    }\n    getViewPropertyValue(propertyName) {\n        return this.store$.select(viewModelPropertyValueSelector, { propertyName }).pipe(switchMapTo(this.viewModel$.pipe(map$1((model) => model[propertyName]), take(1))), distinctUntilChanged());\n    }\n    runPreview() {\n        this.dispatcher.dispatch(runPreview());\n    }\n    clearCanvas() {\n        this.dispatcher.dispatch(clearCanvas());\n    }\n    setComponentInspector(guid, inspectorConfig) {\n        this.rxViewDesignerInspectorService.set(guid, inspectorConfig);\n    }\n    setValidationIssues(guid, issues) {\n        this.dispatcher.dispatch(setValidationIssues({ guid, issues }));\n    }\n    setExpressionValidationIssues(issues) {\n        this.dispatcher.dispatch(setExpressionValidationIssues({ issues }));\n    }\n    setViewInspectorConfig(inspectorConfig) {\n        this.viewModelGuid$.pipe(take(1)).subscribe((guid) => {\n            this.setComponentInspector(guid, inspectorConfig);\n        });\n    }\n    removeViewComponents(guids, selectParent) {\n        if (guids.length) {\n            this.dispatcher.dispatch(removeComponents({ guids, selectParent }));\n        }\n    }\n    setComponentSettablePropertiesDataDictionary(guid, componentName, properties) {\n        this.settablePropertiesDataDictionarySubject.next({\n            guid,\n            componentName,\n            dataDictionary: this.rxViewDataDictionaryBuilderService.getSettablePropertiesDataDictionary(properties)\n        });\n    }\n    setComponentCommonDataDictionaryBranch(guid, dataDictionaryBranch) {\n        this.rxViewDataDictionaryService.setCommonDataDictionaryBranch(guid, dataDictionaryBranch\n            ? this.rxViewDataDictionaryBuilderService.getComponentCommonDataDictionaryBranch(dataDictionaryBranch)\n            : null);\n    }\n    setViewCommonDataDictionaryBranch(dataDictionaryBranch) {\n        this.rxViewDataDictionaryService.setViewCommonDataDictionaryBranch(dataDictionaryBranch);\n    }\n    removeAllActionDataDictionaryBranches() {\n        this.rxViewDataDictionaryService.removeAllActionOutputDataDictionaryBranches();\n    }\n    removeActionDataDictionaryBranch(actionGuid) {\n        this.rxViewDataDictionaryService.removeActionOutputDataDictionaryBranch(actionGuid);\n    }\n    setActionDataDictionaryBranch(actionGuid, index, actionName, dataDictionary = null) {\n        this.rxViewDataDictionaryService.setActionOutputDataDictionaryBranch(actionGuid, index, this.rxViewDataDictionaryBuilderService.getActionOutputDataDictionaryBranch(actionName, dataDictionary));\n    }\n    updateActionDataDictionaryBranchOrder(actions) {\n        this.rxViewDataDictionaryService.updateActionOutputDataDictionaryBranchOrder(actions);\n    }\n    getChildComponentGuids(parentComponentGuid, recursive = false, filterPredicate) {\n        // watch for layout and childDataComponentGuids properties change\n        // TODO: store child component guids separately as a final result from layout and childDataComponentGuids\n        return combineLatest([\n            this.store$.select(componentLayoutSelector, { guid: parentComponentGuid }),\n            this.store$.select(childDataComponentGuidsSelector, { guid: parentComponentGuid })\n        ]).pipe(\n        // get component model with actual data where layout and childDataComponentGuids are already updated\n        switchMap(() => this.getComponentModel(parentComponentGuid).pipe(take(1))), switchMap((model) => model\n            ? of(compact([\n                ...(model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : []),\n                ...(model.childDataComponentGuids || [])\n            ]))\n            : EMPTY), switchMap((guids) => guids.length && recursive\n            ? combineLatest(guids.map((guid) => this.getChildComponentGuids(guid, true))).pipe(map$1(flatten), map$1((nestedGuids) => [...nestedGuids, ...guids]))\n            : of(guids)), switchMap((guids) => guids.length\n            ? this.viewComponentModels$.pipe(map$1((models) => {\n                // The model of a removed component may be already unavailable, but the GUID may still be there.\n                // This can happen when multiple nested components are removed from different\n                // parent containers e.g. using record editor field selector dialog component.\n                // In this case, we will get two observable emits for each removed component.\n                // TODO: enhance getFlattenChildComponentGuids logic to reach a single observable emit.\n                let availableComponentGuids = guids.filter((guid) => models[guid]);\n                if (filterPredicate) {\n                    availableComponentGuids = availableComponentGuids.filter((guid) => filterPredicate({\n                        type: models[guid].type,\n                        guid: models[guid].guid,\n                        data: models[guid].propertiesByName\n                    }));\n                }\n                return availableComponentGuids;\n            }), take(1))\n            : of(guids)));\n    }\n    getChildComponents(parentComponentGuid, filterPredicate) {\n        return this.getChildComponentGuids(parentComponentGuid, false, filterPredicate).pipe(switchMap((guids) => guids.length\n            ? combineLatest(guids.map((guid) => this.getComponentProperties(guid).pipe(withLatestFrom(this.getComponentModel(guid)), switchMap(([props, model]) => model\n                ? of({\n                    type: model.type,\n                    data: props,\n                    guid\n                })\n                : EMPTY))))\n            : of([])));\n    }\n    getComponent(guid) {\n        return this.getComponentModel(guid).pipe(map$1((model) => model\n            ? {\n                data: model.propertiesByName,\n                guid: model.guid,\n                type: model.type\n            }\n            : null));\n    }\n    getComponentsByType(type) {\n        return this.viewComponentModels$.pipe(map$1((models) => filter$1(models, { type }).map((model) => ({\n            guid: model.guid,\n            data: model.propertiesByName,\n            type: model.type\n        }))));\n    }\n    getChildComponentTree(parentComponentGuid) {\n        return this.viewComponentModels$.pipe(map$1((viewComponentModels) => {\n            const getChildrenData = (model) => getChildGuidsFromModel(model).reduce((res, childGuid) => {\n                if (viewComponentModels[childGuid]) {\n                    res.push({\n                        guid: childGuid,\n                        data: viewComponentModels[childGuid].propertiesByName,\n                        type: viewComponentModels[childGuid].type,\n                        children: getChildrenData(viewComponentModels[childGuid])\n                    });\n                }\n                return res;\n            }, []);\n            return viewComponentModels[parentComponentGuid]\n                ? getChildrenData(viewComponentModels[parentComponentGuid])\n                : [];\n        }));\n    }\n    getParentComponentGuid(guid, componentType) {\n        return this.store$\n            .select(parentComponentModelGuidSelector, { guid })\n            .pipe(switchMap((parentGuid) => parentGuid && componentType\n            ? this.store$\n                .select(componentTypeSelector, { guid: parentGuid })\n                .pipe(switchMap((parentComponentType) => parentComponentType === componentType\n                ? of(parentGuid)\n                : this.getParentComponentGuid(parentGuid, componentType)))\n            : of(parentGuid || null)));\n    }\n    setChildren(guid, data) {\n        this.dispatcher.dispatch(setChildComponents({\n            payload: {\n                guid,\n                data\n            }\n        }));\n    }\n}\nViewDesignerFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerFacade, deps: [{ token: ViewDesignerDispatcher }, { token: i2.Store }, { token: i1.Actions }, { token: RxViewDesignerInspectorService }, { token: i2$1.RxGuidService }, { token: RxViewDataDictionaryBuilderService }, { token: RxViewDataDictionaryStoreService }, { token: i3.RxOverlayService }], target: i0.ɵɵFactoryTarget.Injectable });\nViewDesignerFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerFacade, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerFacade, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerDispatcher }, { type: i2.Store }, { type: i1.Actions }, { type: RxViewDesignerInspectorService }, { type: i2$1.RxGuidService }, { type: RxViewDataDictionaryBuilderService }, { type: RxViewDataDictionaryStoreService }, { type: i3.RxOverlayService }]; } });\n\nclass RxViewDesignerModels {\n    constructor() {\n        this.models = new Map();\n    }\n    clear() {\n        this.models.clear();\n    }\n    set(guid, model) {\n        this.models.set(guid, model);\n    }\n    get(guid) {\n        return this.models.get(guid);\n    }\n    delete(guid) {\n        this.models.delete(guid);\n    }\n}\nRxViewDesignerModels.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerModels, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDesignerModels.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerModels, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerModels, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass RxViewDefinitionGeneratorService {\n    constructor(rxDefinitionNameService, rxBundleCacheService, viewDesignerModels, rxViewDefinitionLocalizationService) {\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxBundleCacheService = rxBundleCacheService;\n        this.viewDesignerModels = viewDesignerModels;\n        this.rxViewDefinitionLocalizationService = rxViewDefinitionLocalizationService;\n    }\n    generate(viewModel, componentModels, forSave = false) {\n        const clonedViewModel = viewModel;\n        const viewDefinition = omit(clonedViewModel, 'displayName', 'layout', 'layoutName', 'pageComponent', 'isAngularJsView');\n        viewDefinition.name =\n            viewDefinition.name ||\n                this.rxDefinitionNameService.getDefinitionName(this.rxBundleCacheService.bundleId, clonedViewModel.displayName);\n        viewDefinition.componentDefinitions = this.generateComponentDefinitions(clonedViewModel, componentModels);\n        if (forSave) {\n            viewDefinition.localizableStringsByComponentId =\n                this.rxViewDefinitionLocalizationService.extractLocalizableStrings(viewDefinition);\n        }\n        delete viewDefinition.localizablePropertyToStringGuidMap;\n        viewDefinition.layout = JSON.stringify(clonedViewModel.layout);\n        return viewDefinition;\n    }\n    generateComponentDefinitions(model, componentModelItems) {\n        return getChildGuidsFromModel(model).map((guid) => {\n            const componentDefinition = Object.assign({}, componentModelItems[guid]);\n            const componentModel = this.viewDesignerModels.get(guid);\n            const propertiesByName = isFunction(componentModel === null || componentModel === void 0 ? void 0 : componentModel.getPropertiesByName)\n                ? componentModel.getPropertiesByName(componentDefinition.propertiesByName)\n                : componentDefinition.propertiesByName;\n            componentDefinition.propertiesByName = this.serializeComponentDefinitionProperties(propertiesByName);\n            delete componentDefinition.parentGuid;\n            // Move name out of propertiesByName for all components except actions.\n            if (componentDefinition.type !== RxViewComponentType.Action &&\n                has(componentDefinition.propertiesByName, 'name')) {\n                if (componentDefinition.propertiesByName.name) {\n                    componentDefinition.name = componentDefinition.propertiesByName.name;\n                }\n                delete componentDefinition.propertiesByName.name;\n            }\n            if (componentDefinition.layout || componentDefinition.childDataComponentGuids) {\n                componentDefinition.componentDefinitions = this.generateComponentDefinitions(componentDefinition, componentModelItems);\n                delete componentDefinition.childDataComponentGuids;\n            }\n            if (componentDefinition.layout) {\n                componentDefinition.layout = JSON.stringify(componentDefinition.layout);\n            }\n            return componentDefinition;\n        });\n    }\n    serializeComponentDefinitionProperties(componentProperties) {\n        return transform(componentProperties, (result, value, key) => {\n            switch (true) {\n                case isArray(value):\n                case isNumber(value):\n                case isBoolean(value):\n                case isPlainObject(value):\n                    result[key] = JSON.stringify(value);\n                    break;\n                case isObject(value):\n                    // support Set, Map\n                    const obj = Object.create(null);\n                    value.forEach((v, k) => (obj[k] = v));\n                    result[key] = JSON.stringify(obj);\n                    break;\n                case isFunction(value):\n                case isUndefined(value):\n                    result[key] = null;\n                    break;\n                default:\n                    result[key] = value;\n                    break;\n            }\n        }, {});\n    }\n}\nRxViewDefinitionGeneratorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDefinitionGeneratorService, deps: [{ token: i3.RxDefinitionNameService }, { token: i3.RxBundleCacheService }, { token: RxViewDesignerModels }, { token: i5.RxViewDefinitionLocalizationService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDefinitionGeneratorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDefinitionGeneratorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDefinitionGeneratorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i3.RxDefinitionNameService }, { type: i3.RxBundleCacheService }, { type: RxViewDesignerModels }, { type: i5.RxViewDefinitionLocalizationService }]; } });\n\nfunction validateCssClassName(tag) {\n    return !/^[a-z][-\\w]+$/gi.test(isObject(tag) ? tag.data.value : tag);\n}\nfunction validateCssClassNames(styles) {\n    const validationIssues = [];\n    if (styles) {\n        const tags = styles.split(' ');\n        if (tags.some(validateCssClassName)) {\n            validationIssues.push({\n                type: 'error',\n                propertyName: 'styles',\n                description: 'CSS class name is invalid.'\n            });\n        }\n    }\n    return validationIssues;\n}\nfunction validateAvailableOnDevicesProp(value) {\n    const validationIssues = [];\n    if (!(value === null || value === void 0 ? void 0 : value.length)) {\n        validationIssues.push({\n            type: 'error',\n            propertyName: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n            description: 'At least one device must be selected.'\n        });\n    }\n    return validationIssues;\n}\nfunction validateStandardProps(model) {\n    return [\n        ...validateCssClassNames(model[RX_STYLES_PROP_NAME]),\n        ...validateAvailableOnDevicesProp(model[RX_AVAILABLE_ON_DEVICES_PROP_NAME])\n    ];\n}\n\nclass RxViewExpressionValidatorService {\n    constructor(rxDefaultExpressionValidatorService, rxDefaultExpressionEvaluatorService, rxStringService, rxExpressionParserService, viewDesignerFacade) {\n        this.rxDefaultExpressionValidatorService = rxDefaultExpressionValidatorService;\n        this.rxDefaultExpressionEvaluatorService = rxDefaultExpressionEvaluatorService;\n        this.rxStringService = rxStringService;\n        this.rxExpressionParserService = rxExpressionParserService;\n        this.viewDesignerFacade = viewDesignerFacade;\n    }\n    validate(expression, propertyName, propertyLabel = this.rxStringService.prettify(propertyName), expressionEvaluator = this.rxDefaultExpressionEvaluatorService) {\n        let issues$ = of([]);\n        if (this.rxDefaultExpressionValidatorService.isValid(expression, expressionEvaluator)) {\n            if (this.rxStringService.isNonEmptyString(expression)) {\n                const referencedComponentGuidsSet = new Set();\n                this.rxExpressionParserService.parse(expression, (token, expressionFragment) => {\n                    if (token === ExpressionParserToken.RxExpression || token === ExpressionParserToken.SingleQuoteRxExpression) {\n                        // Extract <ID> from ${view.components.<ID>.<Path>}\n                        const result = /\\${view\\.components\\.([0-9a-z-]+)\\..+}/.exec(expressionFragment);\n                        if (result && result[1]) {\n                            referencedComponentGuidsSet.add(result[1]);\n                        }\n                    }\n                    return expressionFragment;\n                });\n                if (referencedComponentGuidsSet.size) {\n                    const referencedComponentGuids = Array.from(referencedComponentGuidsSet);\n                    issues$ = this.viewDesignerFacade.allComponentGuids$.pipe(map$1((guids) => referencedComponentGuids.filter((guid) => !guids.has(guid))), distinctUntilChanged(isEqual), map$1((guids) => guids.map(() => ({\n                        type: 'error',\n                        description: 'Expression references a non-existent view component.',\n                        propertyName\n                    }))));\n                }\n            }\n        }\n        else {\n            issues$ = of([\n                {\n                    type: 'error',\n                    description: `${propertyLabel} must be a valid expression.`,\n                    propertyName\n                }\n            ]);\n        }\n        return issues$;\n    }\n}\nRxViewExpressionValidatorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorService, deps: [{ token: i5.RxDefaultExpressionValidatorService }, { token: i5.RxDefaultExpressionEvaluatorService }, { token: i2$1.RxStringService }, { token: i3.RxExpressionParserService }, { token: ViewDesignerFacade }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewExpressionValidatorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i5.RxDefaultExpressionValidatorService }, { type: i5.RxDefaultExpressionEvaluatorService }, { type: i2$1.RxStringService }, { type: i3.RxExpressionParserService }, { type: ViewDesignerFacade }]; } });\n\nclass RxViewDataDictionaryService {\n    constructor(viewDesignerFacade, rxViewDataDictionaryBuilderService, rxViewComponentRegistryService, rxObjectUtilsService, rxDataDictionaryUtils) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxViewDataDictionaryBuilderService = rxViewDataDictionaryBuilderService;\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.rxObjectUtilsService = rxObjectUtilsService;\n        this.rxDataDictionaryUtils = rxDataDictionaryUtils;\n        this.componentsCommonDataDictionaryStateClone$ = this.viewDesignerFacade.componentsCommonDataDictionaryState$.pipe(map$1((componentsDataDictionaryState) => componentsDataDictionaryState ? this.rxObjectUtilsService.cloneDeep(componentsDataDictionaryState) : {}), shareReplay(1));\n        this.viewCommonDataDictionaryStateClone$ = this.viewDesignerFacade.viewCommonDataDictionaryState$.pipe(filter(Boolean), map$1((viewDataDictionary) => this.rxObjectUtilsService.cloneDeep(viewDataDictionary)), shareReplay(1));\n        this.commonDataDictionary$ = this.getCommonDataDictionary();\n        this.settablePropertiesDataDictionary$ = this.viewDesignerFacade.settablePropertiesDataDictionaryState$.pipe(withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$), map$1(([settablePropsDataDictionaryState, viewDesignerModelState]) => this.rxObjectUtilsService.cloneDeep(this.getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState))));\n    }\n    getActionDataDictionary(guid) {\n        return combineLatest([this.viewDesignerFacade.actionsDataDictionaryState$, this.getCommonDataDictionary()]).pipe(map$1(([actionsDataDictionaryState, commonDataDictionary]) => {\n            const currentActionData = find(actionsDataDictionaryState, { guid });\n            return [\n                {\n                    label: 'Actions',\n                    children: currentActionData\n                        ? flow((branches) => take$1(branches, currentActionData.index), (branches) => map(branches, 'dataDictionaryBranch'), compact, (branches) => filter$1(branches, (branch) => { var _a; return (_a = branch.children) === null || _a === void 0 ? void 0 : _a.length; }), (branches) => this.rxObjectUtilsService.cloneDeep(branches))(actionsDataDictionaryState)\n                        : []\n                },\n                ...commonDataDictionary\n            ];\n        }), \n        // TODO: performance\n        distinctUntilChanged(isEqual));\n    }\n    getComponentCommonDataDictionary(guid) {\n        return this.componentsCommonDataDictionaryStateClone$.pipe(map$1((state) => state[guid]));\n    }\n    getCommonDataDictionary(componentBranchToReplace) {\n        return combineLatest([\n            this.viewCommonDataDictionaryStateClone$,\n            this.componentsCommonDataDictionaryStateClone$.pipe(map$1((componentsDataDictionaryState) => Object.values(componentBranchToReplace\n                ? Object.assign(Object.assign({}, componentsDataDictionaryState), componentBranchToReplace) : componentsDataDictionaryState)))\n        ]).pipe(map$1(([viewDataDictionaryBranch, componentDataDictionaryBranches]) => [\n            {\n                label: 'General',\n                children: [\n                    {\n                        label: 'Current user',\n                        icon: 'd-icon-dollar',\n                        expression: '${keywords.user}'\n                    },\n                    {\n                        label: 'New line',\n                        icon: 'd-icon-dollar',\n                        expression: '${keywords.newLine}'\n                    }\n                ]\n            },\n            {\n                label: 'Functions',\n                children: this.rxDataDictionaryUtils.getFunctionsDataDictionaryBranch(RX_EXPRESSION_FUNCTIONS)\n            },\n            Object.assign(Object.assign({}, viewDataDictionaryBranch), { children: [\n                    { label: 'Components', children: compact(componentDataDictionaryBranches), expanded: true },\n                    ...viewDataDictionaryBranch.children\n                ] })\n        ]));\n    }\n    getSettablePropsDataDictionary(settablePropsDataDictionaryState, viewDesignerModelState) {\n        return getChildGuidsFromModel(viewDesignerModelState.viewDesignModel)\n            .map((guid) => this.getSettablePropsDataDictionaryBranch(guid, viewDesignerModelState, settablePropsDataDictionaryState, true))\n            .filter(Boolean);\n    }\n    getSettablePropsDataDictionaryBranch(guid, modelState, settablePropsState, expanded = false) {\n        const componentPropsState = settablePropsState[guid];\n        const model = modelState.viewComponentDesignModels[guid];\n        const descriptor = this.rxViewComponentRegistryService.get(model.type);\n        const childGuids = descriptor.outlets && model.layout ? RxViewLayout.getViewLayoutChildGuids(model.layout) : null;\n        const componentsDataDictionary = map(childGuids, (componentGuid) => this.getSettablePropsDataDictionaryBranch(componentGuid, modelState, settablePropsState)).filter(Boolean);\n        const propsDataDictionary = get(componentPropsState, 'dataDictionary', []);\n        if (componentsDataDictionary.length || propsDataDictionary.length) {\n            return {\n                label: (componentPropsState === null || componentPropsState === void 0 ? void 0 : componentPropsState.componentName) || descriptor.name,\n                expanded,\n                children: componentsDataDictionary.length && propsDataDictionary.length\n                    ? [\n                        {\n                            label: 'Components',\n                            children: componentsDataDictionary\n                        },\n                        {\n                            label: 'Properties',\n                            children: propsDataDictionary\n                        }\n                    ]\n                    : componentsDataDictionary.length\n                        ? componentsDataDictionary\n                        : propsDataDictionary\n            };\n        }\n    }\n}\nRxViewDataDictionaryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryService, deps: [{ token: ViewDesignerFacade }, { token: RxViewDataDictionaryBuilderService }, { token: i5.RxViewComponentRegistryService }, { token: i2$1.RxObjectUtilsService }, { token: i3.RxDataDictionaryUtils }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDataDictionaryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDataDictionaryService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }, { type: RxViewDataDictionaryBuilderService }, { type: i5.RxViewComponentRegistryService }, { type: i2$1.RxObjectUtilsService }, { type: i3.RxDataDictionaryUtils }]; } });\n\nclass RxViewExpressionConfigurator extends RxExpressionConfigurator {\n    constructor(injector) {\n        super();\n        this.injector = injector;\n        this.rxExpressionHelperService = this.injector.get(RxExpressionHelperService);\n    }\n    getDefaultConfig() {\n        return Object.assign(Object.assign({}, super.getDefaultConfig()), { dataDictionary$: this.commonDataDictionary$, operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllClient), validateExpression: (propertyName, expression) => {\n                let isValid = true;\n                const expressionEvaluator = this.getExpressionEvaluator(propertyName);\n                try {\n                    expressionEvaluator.parseExpression(this.rxExpressionHelperService.prepare(expression));\n                }\n                catch (e) {\n                    isValid = false;\n                }\n                return of(isValid);\n            } });\n    }\n}\n\nclass RxViewComponentExpressionConfigurator extends RxViewExpressionConfigurator {\n    constructor(injector, componentGuid, componentModel, componentType) {\n        super(injector);\n        this.injector = injector;\n        this.componentGuid = componentGuid;\n        this.componentModel = componentModel;\n        this.componentType = componentType;\n        this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n        this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n        this.rxViewComponentRegistryService = this.injector.get(RxViewComponentRegistryService);\n        this.commonDataDictionary$ = this.rxViewDataDictionaryService.commonDataDictionary$;\n    }\n    getExpressionEvaluator(propertyName) {\n        var _a;\n        const propertyDescriptor = this.componentType &&\n            this.rxViewComponentRegistryService\n                .get(this.componentType)\n                .properties.find((property) => property.name === propertyName);\n        return isFunction((_a = propertyDescriptor === null || propertyDescriptor === void 0 ? void 0 : propertyDescriptor.evaluatorService) === null || _a === void 0 ? void 0 : _a.parseExpression)\n            ? propertyDescriptor.evaluatorService\n            : this.rxDefaultExpressionEvaluatorService;\n    }\n    getCommonDataDictionary(componentBranchToReplace$, componentGuid = this.componentGuid) {\n        return componentBranchToReplace$\n            ? componentBranchToReplace$.pipe(switchMap((dataDictionary) => this.rxViewDataDictionaryService.getCommonDataDictionary({\n                [componentGuid]: dataDictionary\n            })))\n            : this.commonDataDictionary$;\n    }\n    getComponentCommonDataDictionary(guid) {\n        return this.rxViewDataDictionaryService.getComponentCommonDataDictionary(guid || this.componentGuid);\n    }\n}\n\nclass RxViewCustomizationOptionsComponent {\n    constructor(viewDesignerFacade, rxOverlayService, translateService) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxOverlayService = rxOverlayService;\n        this.translateService = translateService;\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnInit() {\n        combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n            this.viewDesignerFacade.getViewPropertyValue('scope'),\n            this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n            this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor'),\n            this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime')\n        ])\n            .pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), takeUntil(this.destroyed$))\n            .subscribe(([[allowOverlay, scope, overlayGroupId, overlayDescriptor, lastUpdateTime], viewModel]) => {\n            this.controlOptions = {\n                allowOverlay,\n                scope,\n                overlayGroupId,\n                overlayDescriptor,\n                isDisabled: !this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewModel),\n                definitionTypeDisplayName: this.translateService.instant('com.bmc.arsys.rx.client.view-definition.label').toLowerCase()\n            };\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    setCustomization(customizationOptions) {\n        this.viewDesignerFacade.updateViewProperties(customizationOptions);\n    }\n}\nRxViewCustomizationOptionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsComponent, deps: [{ token: ViewDesignerFacade }, { token: i3.RxOverlayService }, { token: i6.TranslateService }], target: i0.ɵɵFactoryTarget.Component });\nRxViewCustomizationOptionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RxViewCustomizationOptionsComponent, selector: \"rx-view-customization-options\", inputs: { options: \"options\" }, ngImport: i0, template: \"<rx-scope-customization-control\\n  [options]=\\\"controlOptions\\\"\\n  [(ngModel)]=\\\"value\\\"\\n  (ngModelChange)=\\\"setCustomization($event)\\\"\\n></rx-scope-customization-control>\\n\", components: [{ type: i3$1.CustomizationOptionsComponent, selector: \"rx-scope-customization-control\", inputs: [\"options\"] }], directives: [{ type: i3$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-customization-options',\n                    templateUrl: './view-customization-options.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }, { type: i3.RxOverlayService }, { type: i6.TranslateService }]; }, propDecorators: { options: [{\n                type: Input\n            }] } });\n\nclass RxViewRevertCustomizationComponent {\n    constructor(viewDesignerFacade) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.events = new EventEmitter();\n        this.controlOptions$ = combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('allowOverlay'),\n            this.viewDesignerFacade.getViewPropertyValue('scope'),\n            this.viewDesignerFacade.getViewPropertyValue('overlayGroupId'),\n            this.viewDesignerFacade.getViewPropertyValue('overlayDescriptor')\n        ]).pipe(map$1(([allowOverlay, scope, overlayGroupId, overlayDescriptor]) => ({\n            allowOverlay,\n            scope,\n            overlayGroupId,\n            overlayDescriptor\n        })));\n    }\n}\nRxViewRevertCustomizationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationComponent, deps: [{ token: ViewDesignerFacade }], target: i0.ɵɵFactoryTarget.Component });\nRxViewRevertCustomizationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RxViewRevertCustomizationComponent, selector: \"rx-view-revert-customization\", inputs: { options: \"options\", isDisabled: \"isDisabled\" }, outputs: { events: \"events\" }, ngImport: i0, template: \"<rx-revert-customization\\n  [options]=\\\"controlOptions$ | async\\\"\\n  [isDisabled]=\\\"isDisabled\\\"\\n  (events)=\\\"events.emit($event)\\\"\\n></rx-revert-customization>\\n\", components: [{ type: i3$1.RxRevertCustomizationComponent, selector: \"rx-revert-customization\", inputs: [\"options\", \"isDisabled\"], outputs: [\"events\"] }], pipes: { \"async\": i4.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-revert-customization',\n                    templateUrl: './view-revert-customization.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }]; }, propDecorators: { options: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], events: [{\n                type: Output\n            }] } });\n\nclass RxViewRevertCustomizationModule {\n}\nRxViewRevertCustomizationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRxViewRevertCustomizationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationModule, declarations: [RxViewRevertCustomizationComponent], imports: [CommonModule, RxRevertCustomizationModule] });\nRxViewRevertCustomizationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationModule, imports: [[CommonModule, RxRevertCustomizationModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewRevertCustomizationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RxViewRevertCustomizationComponent],\n                    imports: [CommonModule, RxRevertCustomizationModule]\n                }]\n        }] });\n\nclass RxViewModel {\n    constructor(injector, viewDesignerFacade, rxStringService, rxOverlayService, rxViewComponentRegistryService, rxBundleCacheService, rxModalService, rxViewDefinitionCacheService, rxViewDefinitionParserService, rxGuidService, viewDesignerDispatcher, rxDefinitionNameService, rxViewExpressionValidatorService) {\n        this.injector = injector;\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxStringService = rxStringService;\n        this.rxOverlayService = rxOverlayService;\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.rxBundleCacheService = rxBundleCacheService;\n        this.rxModalService = rxModalService;\n        this.rxViewDefinitionCacheService = rxViewDefinitionCacheService;\n        this.rxViewDefinitionParserService = rxViewDefinitionParserService;\n        this.rxGuidService = rxGuidService;\n        this.viewDesignerDispatcher = viewDesignerDispatcher;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n        this.expressionConfigurator = new RxViewComponentExpressionConfigurator(this.injector, null, this);\n        this.destroyed$ = new ReplaySubject(1);\n        this.allViewDefinitionNamesByBundleId$ = this.viewDesignerFacade.currentBundleId$.pipe(filter(Boolean), switchMap((bundleId) => this.rxViewDefinitionCacheService\n            .getViewDefinitionNames(bundleId)\n            .pipe(map$1((names) => names.map((name) => this.rxDefinitionNameService.getDisplayNameForValidation(name))))));\n        this.targetExtensionContainerOptions$ = this.viewDesignerFacade\n            .getViewPropertyValue('targetViewDefinitionName')\n            .pipe(switchMap((targetViewDefinitionName) => targetViewDefinitionName\n            ? this.getTargetExtensionContainerOptions(targetViewDefinitionName).pipe(take(1))\n            : of(null)), shareReplay(1));\n        this.targetViewDefinition$ = this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(filter(Boolean), switchMap((targetViewDefinitionName) => this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName)));\n        this.init();\n    }\n    init() {\n        // Initial model and inspector configuration.\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(concatMapTo(this.viewDesignerFacade.viewModelsInitialized$.pipe(switchMapTo(combineLatest([\n            this.viewDesignerFacade.viewComponentModels$.pipe(map$1((viewComponentModels) => {\n                const pageComponentModel = Object.values(viewComponentModels).find((model) => model.type === RxViewComponentType.Page);\n                return pageComponentModel\n                    ? viewComponentModels[pageComponentModel.childDataComponentGuids[0]].type\n                    : null;\n            })),\n            this.viewDesignerFacade.viewModel$,\n            this.targetExtensionContainerOptions$\n        ]).pipe(take(1))))), takeUntil(this.destroyed$))\n            .subscribe(([componentType, viewModel, targetExtensionContainerOptions]) => {\n            this.viewDesignerFacade.updateViewProperties({\n                pageComponent: componentType\n            });\n            this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(Object.assign(Object.assign({}, viewModel), { pageComponent: componentType }), targetExtensionContainerOptions));\n        });\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(switchMapTo(this.targetExtensionContainerOptions$.pipe(\n        // Ignore initial property change.\n        skip(1), withLatestFrom(this.viewDesignerFacade.viewModel$))), takeUntil(this.destroyed$))\n            .subscribe(([options, viewModel]) => this.onTargetExtensionContainerOptionsChange(options, viewModel));\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('pageComponent').pipe(\n        // Ignore initial property change.\n        skip(1), switchMapTo(combineLatest([\n            this.viewDesignerFacade.viewModel$,\n            this.viewDesignerFacade.viewComponentModels$,\n            this.targetExtensionContainerOptions$\n        ]).pipe(take(1))))), takeUntil(this.destroyed$))\n            .subscribe(([viewModel, viewComponentModels, targetExtensionContainerOptions]) => this.onPageComponentChange(viewModel, viewComponentModels, targetExtensionContainerOptions));\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName').pipe(skip(1))), switchMap(() => this.viewDesignerFacade.viewComponentModels$.pipe(first())), takeUntil(this.destroyed$))\n            .subscribe((viewComponentModels) => {\n            if (!isEmpty(viewComponentModels)) {\n                this.viewDesignerFacade.clearCanvas();\n            }\n        });\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(switchMapTo(combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('styles').pipe(map$1(validateCssClassNames)),\n            this.validateDisplayName(),\n            this.validateInputParams(),\n            this.validateOutputParamExpressions(),\n            this.validateExtensionContainer()\n        ]).pipe(map$1(flatten), map$1(compact), withLatestFrom(this.viewDesignerFacade.viewModelGuid$))), takeUntil(this.destroyed$))\n            .subscribe(([issues, guid]) => {\n            this.viewDesignerFacade.setValidationIssues(guid, issues);\n        });\n        this.viewDesignerFacade.initViewDesigner$\n            .pipe(switchMapTo(this.viewDesignerFacade.getViewPropertyValue('inputParams')), takeUntil(this.destroyed$))\n            .subscribe((inputParams) => this.viewDesignerFacade.setViewCommonDataDictionaryBranch(this.getViewCommonDataDictionary(inputParams)));\n        this.viewDesignerFacade\n            .getViewPropertyValue('targetExtensionContainerGuid')\n            .pipe(withLatestFrom(this.targetViewDefinition$), map$1(([targetExtensionContainerGuid, targetViewDefinition]) => this.getTargetRecordDefinitionName(targetViewDefinition, targetExtensionContainerGuid)), distinctUntilChanged(), switchMapTo(this.viewDesignerFacade.viewComponentModels$.pipe(take(1))), filter((viewComponentModels) => !isEmpty(viewComponentModels)), takeUntil(this.destroyed$))\n            .subscribe(() => this.viewDesignerFacade.clearCanvas());\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    getTargetExtensionContainerOptions(targetViewDefinitionName) {\n        return this.rxViewDefinitionCacheService.getViewDefinition(targetViewDefinitionName).pipe(map$1((viewDefinition) => this.rxViewDefinitionParserService\n            .getComponents(viewDefinition)\n            .filter(({ componentDefinition }) => componentDefinition.type === RxViewComponentType.ExtensionContainer)\n            .map(({ componentDefinition }) => ({\n            id: componentDefinition.guid,\n            name: componentDefinition.propertiesByName.name || componentDefinition.name\n        }))));\n    }\n    onTargetExtensionContainerOptionsChange(options, viewModel) {\n        this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n        // targetViewDefinitionName is not selected when options are not defined.\n        if (!options) {\n            this.viewDesignerFacade.updateViewProperties({\n                targetExtensionContainerGuid: null\n            });\n        }\n        else if (options.length === 1) {\n            this.viewDesignerFacade.updateViewProperties({\n                targetExtensionContainerGuid: options[0].id\n            });\n        }\n    }\n    onPageComponentChange(viewModel, componentModels, options) {\n        const pageComponentModel = find(componentModels, { type: RxViewComponentType.Page });\n        this.viewDesignerFacade.setViewInspectorConfig(this.getInspector(viewModel, options));\n        const actions = [];\n        if (viewModel.pageComponent) {\n            if (pageComponentModel) {\n                this.viewDesignerFacade.updateComponentModel(pageComponentModel.childDataComponentGuids[0], {\n                    type: viewModel.pageComponent\n                });\n            }\n            else {\n                const pageComponentGuid = this.rxGuidService.generate();\n                if (!isEmpty(componentModels)) {\n                    this.viewDesignerFacade.removeViewComponents(getChildGuidsFromModel(viewModel));\n                }\n                actions.push(initializeComponentModels({\n                    payload: [\n                        {\n                            componentModel: {\n                                guid: pageComponentGuid,\n                                resourceType: RX_VIEW_DEFINITION.resourceTypes.containerViewComponent,\n                                type: RxViewComponentType.Page,\n                                propertiesByName: {},\n                                parentGuid: viewModel.guid\n                            },\n                            insertIndex: 0,\n                            columnIndex: 0,\n                            outletName: RX_VIEW_DEFINITION.defaultOutletName\n                        }\n                    ]\n                }), initializeDataComponentModels({\n                    payload: [\n                        {\n                            componentModel: {\n                                guid: this.rxGuidService.generate(),\n                                type: viewModel.pageComponent,\n                                resourceType: RX_VIEW_DEFINITION.resourceTypes.viewComponent,\n                                propertiesByName: {},\n                                parentGuid: pageComponentGuid\n                            }\n                        }\n                    ]\n                }));\n            }\n            this.viewDesignerFacade.updateViewProperties({\n                inputParams: [],\n                outputParams: []\n            });\n        }\n        else if (pageComponentModel) {\n            this.viewDesignerFacade.removeViewComponents([pageComponentModel.guid]);\n        }\n        actions.forEach((action) => this.viewDesignerDispatcher.dispatch(action));\n    }\n    getInspector(viewDesignModel, targetExtensionContainerOptions = []) {\n        const isExistingView = Boolean(viewDesignModel.lastUpdateTime);\n        const isCustomizationAllowed = isExistingView\n            ? this.rxOverlayService.isCustomizationEnabled('allowOverlay', viewDesignModel)\n            : true;\n        const availablePageComponents = this.rxViewComponentRegistryService\n            .getBundlePageComponents(this.rxBundleCacheService.bundleId)\n            .map((pageComponent) => ({\n            id: pageComponent.type,\n            name: pageComponent.name\n        }));\n        if (viewDesignModel.pageComponent && !this.rxViewComponentRegistryService.get(viewDesignModel.pageComponent)) {\n            availablePageComponents.unshift({\n                name: RX_VIEW_DEFINITION.unknownPageComponent.name,\n                id: viewDesignModel.pageComponent\n            });\n        }\n        const pageComponentControl = {\n            name: 'pageComponent',\n            component: SelectFormControlComponent,\n            options: {\n                label: 'Page component',\n                options: availablePageComponents,\n                beforeValueChange: (oldValue, newValue) => this.viewDesignerFacade.viewModel$\n                    .pipe(take(1), withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([viewModel, viewComponentModels]) => !(oldValue === null || oldValue === void 0 ? void 0 : oldValue.length) &&\n                    newValue.length &&\n                    (viewModel.inputParams.length || viewModel.outputParams.length || !isEmpty(viewComponentModels))))\n                    .toPromise()\n                    .then((isConfirmationRequired) => isConfirmationRequired\n                    ? this.rxModalService.confirm({\n                        title: 'Warning',\n                        modalStyle: RX_MODAL.modalStyles.warning,\n                        message: 'The view canvas, input and output parameters will be cleared. Do you want to continue?'\n                    })\n                    : true),\n                emptyOption: true\n            }\n        };\n        const extensionContainerControl = {\n            name: 'targetExtensionContainerGuid',\n            component: SelectFormControlComponent,\n            options: {\n                label: 'Extension container',\n                tooltip: new Tooltip(`Select an extension container in the view to extend where record editor fields from this view will be injected.\n            The records defined for the view to extend and for this view must be associated one-to-one.`),\n                options: targetExtensionContainerOptions || [],\n                required: true,\n                beforeValueChange: (oldValue, newValue) => {\n                    return this.isTargetRecordDefinitionChanged(oldValue, newValue)\n                        .pipe(withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([isRecordDefinitionChanged, viewComponentModels]) => !isEmpty(viewComponentModels) && isRecordDefinitionChanged), take(1))\n                        .toPromise()\n                        .then((isConfirmationRequired) => isConfirmationRequired\n                        ? this.rxModalService.confirm({\n                            title: 'Warning',\n                            modalStyle: RX_MODAL.modalStyles.warning,\n                            message: 'The view canvas will be cleared. Do you want to continue?'\n                        })\n                        : true);\n                }\n            }\n        };\n        const layout = [\n            {\n                label: 'General',\n                controls: [\n                    {\n                        name: 'displayName',\n                        component: TextFormControlComponent,\n                        isDisabled: Boolean(viewDesignModel.lastUpdateTime),\n                        options: {\n                            required: true,\n                            label: 'Name'\n                        }\n                    },\n                    {\n                        name: 'description',\n                        component: TextareaFormControlComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            label: 'Description',\n                            rows: 3\n                        }\n                    },\n                    {\n                        name: 'layoutName',\n                        component: TextFormControlComponent,\n                        isDisabled: true,\n                        options: {\n                            label: 'Layout template'\n                        }\n                    },\n                    {\n                        name: 'targetViewDefinitionName',\n                        component: RxDefinitionPickerComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            label: 'View to extend',\n                            tooltip: new Tooltip(`Select a view to extend in order to inject this view into it.\n                The view to extend may be read-only, but must contain at least one Record editor with an Extension container.`),\n                            definitionType: RxDefinitionPickerType.View,\n                            beforeValueChange: (oldValue, newValue) => this.viewDesignerFacade.viewComponentModels$\n                                .pipe(first(), withLatestFrom(this.viewDesignerFacade.viewModel$))\n                                .toPromise()\n                                .then(([components, viewModel]) => {\n                                const isViewParametersPresent = Boolean(!(oldValue === null || oldValue === void 0 ? void 0 : oldValue.length) &&\n                                    newValue.length &&\n                                    (viewModel.inputParams.length || viewModel.outputParams.length));\n                                let message;\n                                if (!isEmpty(components) && isViewParametersPresent) {\n                                    message =\n                                        'The view canvas, input and output parameters will be cleared. Do you want to continue?';\n                                }\n                                else if (!isEmpty(components)) {\n                                    message = 'The view canvas will be cleared. Do you want to continue?';\n                                }\n                                else if (isViewParametersPresent) {\n                                    message = 'The input and output parameters will be cleared. Do you want to continue?';\n                                }\n                                return message\n                                    ? this.rxModalService.confirm({\n                                        title: 'Warning',\n                                        modalStyle: RX_MODAL.modalStyles.warning,\n                                        message: message\n                                    })\n                                    : true;\n                            })\n                        }\n                    },\n                    {\n                        name: 'styles',\n                        component: TagsFormControlComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            label: 'CSS classes',\n                            placeholder: 'Add CSS classes',\n                            tooltip: new Tooltip('Enter CSS class names to apply to this view.'),\n                            errorCheck: validateCssClassName\n                        }\n                    },\n                    {\n                        name: 'permissions',\n                        component: RxPermissionEditorComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            label: 'Permissions',\n                            type: 'view'\n                        }\n                    },\n                    {\n                        component: RxViewRevertCustomizationComponent\n                    },\n                    {\n                        component: RxViewCustomizationOptionsComponent\n                    }\n                ]\n            },\n            {\n                label: 'Input parameters',\n                controls: [\n                    {\n                        name: 'inputParams',\n                        component: ListFormControlComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            addItemText: 'Add',\n                            emptyListText: 'No input parameters added.',\n                            items: [\n                                {\n                                    label: 'Name',\n                                    propertyName: 'name'\n                                }\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                label: 'Output parameters',\n                controls: [\n                    {\n                        name: 'outputParams',\n                        component: ListFormControlComponent,\n                        isDisabled: !isCustomizationAllowed,\n                        options: {\n                            addItemText: 'Add',\n                            emptyListText: 'No output parameters added.',\n                            items: [\n                                {\n                                    label: 'Name',\n                                    propertyName: 'name'\n                                },\n                                {\n                                    label: 'Source',\n                                    propertyName: 'source',\n                                    dataDictionary$: this.expressionConfigurator.getDataDictionary(),\n                                    operators: this.expressionConfigurator.getOperators()\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        ];\n        if (availablePageComponents.length) {\n            layout[0].controls.splice(2, 0, pageComponentControl);\n        }\n        // hide 'View to extend' and 'Extention container' controls if a page component is selected\n        if (viewDesignModel.pageComponent) {\n            layout.splice(1, 2);\n            layout[0].controls.splice(findIndex(layout[0].controls, { name: 'targetViewDefinitionName' }), 1);\n        }\n        if (viewDesignModel.targetViewDefinitionName) {\n            const targetViewDefinitionNameControlIndex = findIndex(layout[0].controls, { name: 'targetViewDefinitionName' });\n            layout[0].controls.splice(targetViewDefinitionNameControlIndex + 1, 0, extensionContainerControl);\n            // hide 'Page component' control if 'View to extend' is selected\n            layout[0].controls.splice(findIndex(layout[0].controls, { name: 'pageComponent' }), 1);\n            // hide 'Input parameters' and 'Output parameters' control if 'View to extend' is selected\n            layout.splice(1, 2);\n            this.viewDesignerFacade.updateViewProperties({\n                inputParams: [],\n                outputParams: []\n            });\n        }\n        return {\n            inspectorSectionConfigs: layout\n        };\n    }\n    validateDisplayName() {\n        // View definition names for validation will be loaded only in case if user changes view name.\n        return this.viewDesignerFacade\n            .getViewPropertyValue('displayName')\n            .pipe(switchMap((displayName) => combineLatest([\n            of(displayName\n                ? RX_RECORD_DEFINITION.validDefinitionNameRegex.test(displayName)\n                    ? null\n                    : {\n                        type: 'error',\n                        propertyName: 'displayName',\n                        description: 'View name can only contain letters, numbers, spaces, dashes, and underscores.'\n                    }\n                : {\n                    type: 'error',\n                    propertyName: 'displayName',\n                    description: 'View name cannot be blank.'\n                }),\n            this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(switchMap((lastUpdateTime) => displayName && !lastUpdateTime\n                ? this.allViewDefinitionNamesByBundleId$.pipe(map$1((viewDefinitionNames) => {\n                    const isNameAlreadyExists = !lastUpdateTime &&\n                        (viewDefinitionNames === null || viewDefinitionNames === void 0 ? void 0 : viewDefinitionNames.some((name) => this.rxStringService.caseInsensitiveIsEqual(displayName, name)));\n                    return isNameAlreadyExists\n                        ? {\n                            type: 'error',\n                            propertyName: 'displayName',\n                            description: 'View definition with this name already exists.'\n                        }\n                        : null;\n                }), take(1))\n                : of(null)), take(1))\n        ])))\n            .pipe(map$1(compact));\n    }\n    validateInputParams() {\n        return this.viewDesignerFacade.getViewPropertyValue('inputParams').pipe(map$1((inputParams) => {\n            const notBlankInputParams = flow((params) => map(params, (param) => param.name), compact)(inputParams);\n            const uniqueInputParams = uniq(notBlankInputParams);\n            const validationIssues = [];\n            if (inputParams.length && notBlankInputParams.length !== inputParams.length) {\n                validationIssues.push({\n                    type: 'error',\n                    propertyName: 'inputParams',\n                    description: 'Input parameter name cannot be blank.'\n                });\n            }\n            if (notBlankInputParams.length !== uniqueInputParams.length) {\n                validationIssues.push({\n                    type: 'error',\n                    propertyName: 'inputParams',\n                    description: 'Input parameter names must be unique.'\n                });\n            }\n            return validationIssues;\n        }));\n    }\n    validateOutputParamExpressions() {\n        return this.viewDesignerFacade.getViewPropertyValue('outputParams').pipe(map$1((outputParams) => map(outputParams, (param) => param.source).filter(Boolean)), distinctUntilChanged(isEqual), switchMap((sourceValues) => sourceValues.length\n            ? combineLatest(sourceValues.map((value) => this.rxViewExpressionValidatorService.validate(value, 'source', 'Output parameter source'))).pipe(map$1(flatten))\n            : of([])));\n    }\n    validateExtensionContainer() {\n        return combineLatest([\n            this.viewDesignerFacade.getViewPropertyValue('targetViewDefinitionName'),\n            this.viewDesignerFacade.getViewPropertyValue('targetExtensionContainerGuid')\n        ]).pipe(map$1(([targetViewDefinitionName, targetExtensionContainerGuid]) => targetViewDefinitionName && !targetExtensionContainerGuid\n            ? {\n                type: 'error',\n                propertyName: 'targetExtensionContainerGuid',\n                description: 'Extension container cannot be blank.'\n            }\n            : null));\n    }\n    getViewCommonDataDictionary(inputParams) {\n        return {\n            label: 'View',\n            expression: '${view.api}',\n            icon: 'd-icon-file_o',\n            expanded: true,\n            children: [\n                ...(isEmpty(inputParams)\n                    ? []\n                    : [\n                        {\n                            label: 'Input parameters',\n                            expanded: true,\n                            children: inputParams\n                                .filter((param) => param.name)\n                                .map((param) => ({\n                                label: param.name,\n                                expression: `$\\{view.inputParams.${param.name}}`,\n                                icon: 'd-icon-arrow_right_square_input'\n                            }))\n                        }\n                    ]),\n                {\n                    label: 'Properties',\n                    expanded: true,\n                    children: [\n                        {\n                            label: 'Is valid',\n                            expression: '${view.isValid}',\n                            icon: 'd-icon-arrow_right_square_input'\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n    isTargetRecordDefinitionChanged(previousTargetExtensionContainerGuid, currentTargetExtensionContainerGuid) {\n        return this.targetViewDefinition$.pipe(map$1((viewDefinition) => {\n            const previousTargetRecordDefinitionName = this.getTargetRecordDefinitionName(viewDefinition, previousTargetExtensionContainerGuid);\n            const currentTargetRecordDefinitionName = this.getTargetRecordDefinitionName(viewDefinition, currentTargetExtensionContainerGuid);\n            return previousTargetRecordDefinitionName !== currentTargetRecordDefinitionName;\n        }));\n    }\n    getTargetRecordDefinitionName(viewDefinition, targetExtensionContainerGuid) {\n        const targetRecordEditor = this.rxViewDefinitionParserService.findParentComponentDefinition(viewDefinition, { guid: targetExtensionContainerGuid }, (definition) => definition.type === RxViewComponentType.RecordEditor);\n        return targetRecordEditor === null || targetRecordEditor === void 0 ? void 0 : targetRecordEditor.propertiesByName.recordDefinitionName;\n    }\n}\nRxViewModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewModel, deps: [{ token: i0.Injector }, { token: ViewDesignerFacade }, { token: i2$1.RxStringService }, { token: i3.RxOverlayService }, { token: i5.RxViewComponentRegistryService }, { token: i3.RxBundleCacheService }, { token: i5$1.RxModalService }, { token: i5.RxViewDefinitionCacheService }, { token: i5.RxViewDefinitionParserService }, { token: i2$1.RxGuidService }, { token: ViewDesignerDispatcher }, { token: i3.RxDefinitionNameService }, { token: RxViewExpressionValidatorService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: ViewDesignerFacade }, { type: i2$1.RxStringService }, { type: i3.RxOverlayService }, { type: i5.RxViewComponentRegistryService }, { type: i3.RxBundleCacheService }, { type: i5$1.RxModalService }, { type: i5.RxViewDefinitionCacheService }, { type: i5.RxViewDefinitionParserService }, { type: i2$1.RxGuidService }, { type: ViewDesignerDispatcher }, { type: i3.RxDefinitionNameService }, { type: RxViewExpressionValidatorService }]; } });\n\n/* tslint:disable:variable-name */\nconst ViewDesignerCanvasItemApiToken = new InjectionToken('CanvasItemApi');\n\nclass CanvasItemApi {\n    constructor() {\n        this.core = null;\n    }\n    registerCoreApi(apiObject) {\n        this.core = apiObject;\n    }\n}\nCanvasItemApi.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemApi, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCanvasItemApi.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemApi });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemApi, decorators: [{\n            type: Injectable\n        }] });\n\nclass DropComponentData {\n    constructor(data, targetGuid, outletName, insertIndex) {\n        this.data = data;\n        this.targetGuid = targetGuid;\n        this.outletName = outletName;\n        this.insertIndex = insertIndex;\n    }\n}\n\nclass ViewDesignerCanvasService {\n    constructor() {\n        this.componentSelectSubject = new ReplaySubject();\n        this.componentRemoveSubject = new ReplaySubject();\n        this.componentDropSubject = new ReplaySubject();\n        this.componentDrop$ = this.componentDropSubject.asObservable();\n        this.componentSelect$ = this.componentSelectSubject.asObservable();\n        this.componentRemove$ = this.componentRemoveSubject.asObservable();\n    }\n    selectComponent(guid) {\n        this.componentSelectSubject.next(guid);\n    }\n    removeComponent(guid) {\n        this.componentRemoveSubject.next(guid);\n    }\n    dropComponent(data, targetGuid, outletName, insertIndex) {\n        this.componentDropSubject.next(new DropComponentData(data, targetGuid, outletName, insertIndex));\n    }\n}\nViewDesignerCanvasService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nViewDesignerCanvasService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasService, decorators: [{\n            type: Injectable\n        }] });\n\nclass CanvasItemComponent {\n    constructor(injector, renderer, canvasItemApi, viewDesignerCanvasService) {\n        this.injector = injector;\n        this.renderer = renderer;\n        this.canvasItemApi = canvasItemApi;\n        this.viewDesignerCanvasService = viewDesignerCanvasService;\n        this.interactive = true;\n        this.childContainers = new Map();\n    }\n    ngOnInit() {\n        this.initializeItemApi();\n    }\n    ngOnChanges(changes) {\n        const layoutChange = changes.layout;\n        if (layoutChange) {\n            const prevGuid = get(layoutChange, 'previousValue.guid');\n            const currGuid = get(layoutChange, 'currentValue.guid');\n            const prevOutlets = get(layoutChange, 'previousValue.outlets');\n            const currOutlets = get(layoutChange, 'currentValue.outlets');\n            if (prevGuid !== currGuid) {\n                if (this.componentReference) {\n                    this.cleanUp();\n                }\n                this.renderViewComponent();\n            }\n            else if (!isEqual(prevOutlets, currOutlets)) {\n                currOutlets.forEach((outlet) => {\n                    const ref = this.childContainers.get(outlet.name);\n                    if (ref) {\n                        ref.instance.outlet = outlet;\n                        ref.instance.layout = this.layout;\n                    }\n                });\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.cleanUp();\n    }\n    cleanUp() {\n        this.componentReference.destroy();\n        this.childContainers.clear();\n    }\n    registerOutlet(outletName, outletViewContainerRef, containerFactory) {\n        const currentOutlet = this.layout.outlets.find((outlet) => outlet.name === outletName);\n        const componentRef = this.renderContainerComponent(outletViewContainerRef, currentOutlet, containerFactory);\n        this.childContainers.set(outletName, componentRef);\n        return componentRef;\n    }\n    onSelectComponent(event) {\n        if (this.interactive) {\n            event.stopPropagation();\n            this.viewDesignerCanvasService.selectComponent(this.layout.guid);\n        }\n    }\n    dropComponent(transferData, insertIndex, outletName = RX_VIEW_DEFINITION.defaultOutletName) {\n        this.viewDesignerCanvasService.dropComponent(transferData, this.layout.guid, outletName, insertIndex);\n    }\n    initializeItemApi() {\n        this.canvasItemApi.registerCoreApi({\n            dropComponent: this.dropComponent.bind(this),\n            registerOutlet: this.registerOutlet.bind(this)\n        });\n    }\n    renderViewComponent() {\n        this.componentReference = this.container.createComponent(this.layout.factory, null, this.injector);\n        const instance = this.componentReference.instance;\n        const nativeElement = this.componentReference.location.nativeElement;\n        instance.guid = this.layout.guid;\n        instance.model = this.layout.model;\n        instance.isReadOnly = this.isReadOnly;\n        this.renderer.setAttribute(nativeElement, 'rx-view-component-id', this.layout.guid);\n    }\n    renderContainerComponent(outletViewContainerRef, outlet, containerFactory) {\n        const containerRef = outletViewContainerRef.createComponent(containerFactory);\n        containerRef.instance.outlet = outlet;\n        containerRef.instance.layout = this.layout;\n        containerRef.instance.isReadOnly = this.isReadOnly;\n        return containerRef;\n    }\n}\nCanvasItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemComponent, deps: [{ token: i0.Injector }, { token: i0.Renderer2 }, { token: ViewDesignerCanvasItemApiToken }, { token: ViewDesignerCanvasService }], target: i0.ɵɵFactoryTarget.Component });\nCanvasItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: CanvasItemComponent, selector: \"rx-canvas-item\", inputs: { layout: \"layout\", interactive: \"interactive\", isReadOnly: \"isReadOnly\" }, providers: [\n        {\n            provide: ViewDesignerCanvasItemApiToken,\n            useClass: CanvasItemApi\n        }\n    ], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div [hidden]=\\\"layout?.model?.hiddenOnCanvas$ | async\\\" (click)=\\\"onSelectComponent($event)\\\">\\n  <ng-container #container></ng-container>\\n</div>\\n\", pipes: { \"async\": i4.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-canvas-item',\n                    templateUrl: './canvas-item.component.html',\n                    providers: [\n                        {\n                            provide: ViewDesignerCanvasItemApiToken,\n                            useClass: CanvasItemApi\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ViewDesignerCanvasItemApiToken]\n                }] }, { type: ViewDesignerCanvasService }]; }, propDecorators: { layout: [{\n                type: Input\n            }], interactive: [{\n                type: Input\n            }], isReadOnly: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }] } });\n\nclass ViewDesignerCanvasComponent {\n    constructor(viewDesignerCanvasService) {\n        this.viewDesignerCanvasService = viewDesignerCanvasService;\n        this.componentSelect = new EventEmitter();\n        this.componentDrop = new EventEmitter();\n        this.componentRemove = new EventEmitter();\n        this.beforeComponentDropInRoot = new EventEmitter();\n    }\n    ngOnInit() {\n        this.viewDesignerCanvasService.componentSelect$.subscribe((event) => {\n            this.componentSelect.emit(event);\n        });\n        this.viewDesignerCanvasService.componentRemove$.subscribe((event) => {\n            this.componentRemove.emit(event);\n        });\n        this.viewDesignerCanvasService.componentDrop$.subscribe((event) => {\n            this.componentDrop.emit(event);\n        });\n    }\n}\nViewDesignerCanvasComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasComponent, deps: [{ token: ViewDesignerCanvasService }], target: i0.ɵɵFactoryTarget.Component });\nViewDesignerCanvasComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ViewDesignerCanvasComponent, selector: \"rx-view-designer-canvas\", inputs: { layout: \"layout\", isReadOnly: \"isReadOnly\" }, outputs: { componentSelect: \"componentSelect\", componentDrop: \"componentDrop\", componentRemove: \"componentRemove\", beforeComponentDropInRoot: \"beforeComponentDropInRoot\" }, providers: [ViewDesignerCanvasService], ngImport: i0, template: \"<rx-canvas-item class=\\\"root-item\\\" *ngIf=\\\"layout\\\" [layout]=\\\"layout\\\" [isReadOnly]=\\\"isReadOnly\\\"></rx-canvas-item>\\n\", components: [{ type: CanvasItemComponent, selector: \"rx-canvas-item\", inputs: [\"layout\", \"interactive\", \"isReadOnly\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-designer-canvas',\n                    templateUrl: './view-designer-canvas.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [ViewDesignerCanvasService]\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerCanvasService }]; }, propDecorators: { layout: [{\n                type: Input\n            }], isReadOnly: [{\n                type: Input\n            }], componentSelect: [{\n                type: Output\n            }], componentDrop: [{\n                type: Output\n            }], componentRemove: [{\n                type: Output\n            }], beforeComponentDropInRoot: [{\n                type: Output\n            }] } });\n\nclass CanvasOutletHelperService {\n    constructor() {\n        this.beforeViewComponentDropSubject = new ReplaySubject();\n        this.beforeViewComponentDrop$ = this.beforeViewComponentDropSubject.asObservable();\n    }\n    setBeforeViewComponentDropState(viewComponentDropData) {\n        this.beforeViewComponentDropSubject.next(viewComponentDropData);\n    }\n    canBeDropped(data) {\n        let canBeInsertedInto = true;\n        if (isFunction(data.draggedViewComponentDescriptor.canBeInsertedInto)) {\n            canBeInsertedInto = data.draggedViewComponentDescriptor.canBeInsertedInto(data.dropTargetViewComponentWithParents.map((component) => component.type));\n        }\n        if (canBeInsertedInto) {\n            canBeInsertedInto =\n                (!data.draggedViewComponentGuid ||\n                    !this._isParentRecordEditorChanging(this.containerComponentInstance['layout'].viewComponentWithParents, data.draggedViewComponentParents)) &&\n                    this.componentDropPredicate(data);\n        }\n        return canBeInsertedInto;\n    }\n    componentDropPredicate(data, skipPredicate = false) {\n        return ((skipPredicate || this.dropPredicate(data)) &&\n            (!this.parentOutletComponent || this.parentOutletComponent.componentDropPredicate(data, this.skipParentPredicate)));\n    }\n    _isParentRecordEditorChanging(targetContainerParentComponents, sourceComponentParentComponents) {\n        const targetRecordEditor = find(targetContainerParentComponents, {\n            type: RxViewComponentType.RecordEditor\n        });\n        const sourceRecordEditor = find(sourceComponentParentComponents, {\n            type: RxViewComponentType.RecordEditor\n        });\n        const isMovingBetweenRecordEditors = Boolean(targetRecordEditor) && Boolean(sourceRecordEditor) && targetRecordEditor.guid !== sourceRecordEditor.guid;\n        const isDroppingOutsideRecordEditor = !targetRecordEditor && Boolean(sourceRecordEditor);\n        const isDroppingInsideRecordEditor = !sourceRecordEditor && Boolean(targetRecordEditor);\n        return isMovingBetweenRecordEditors || isDroppingOutsideRecordEditor || isDroppingInsideRecordEditor;\n    }\n}\nCanvasOutletHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasOutletHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCanvasOutletHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasOutletHelperService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasOutletHelperService, decorators: [{\n            type: Injectable\n        }] });\n\nclass CanvasItemColumnComponent {\n    constructor(viewDesignerCanvasService, canvasOutletHelperService) {\n        this.viewDesignerCanvasService = viewDesignerCanvasService;\n        this.canvasOutletHelperService = canvasOutletHelperService;\n        this.dropListDropped = new EventEmitter();\n        this.dropListEnterPredicateBind = throttle(this.dropListEnterPredicate.bind(this), 200);\n    }\n    ngOnInit() {\n        this.dropListOrientation = this.canvasOutletHelperService.dropListOrientation;\n    }\n    getViewComponentDragData(layout) {\n        return {\n            draggedViewComponentGuid: layout.guid,\n            draggedViewComponentDescriptor: layout.descriptor,\n            draggedViewComponentParents: this.layout.viewComponentWithParents\n        };\n    }\n    onDragEntered(event) {\n        this.enforceDragToSelf(event.container);\n    }\n    onDragStarted(event) {\n        this.enforceDragToSelf(event.source.dropContainer);\n    }\n    remove(event, layout) {\n        event.stopPropagation();\n        this.viewDesignerCanvasService.removeComponent(layout.guid);\n    }\n    onSelectComponent(event, layout) {\n        event.stopPropagation();\n        this.viewDesignerCanvasService.selectComponent(layout.guid);\n    }\n    trackByFn(index, item) {\n        return item.guid;\n    }\n    dropListEnterPredicate(event) {\n        return this.canvasOutletHelperService.canBeDropped(Object.assign(Object.assign({}, event.data), { dropTargetViewComponentWithParents: this.layout.viewComponentWithParents || [] }));\n    }\n    // todo remove after\n    // https://github.com/angular/components/issues/16671\n    // will be fixed\n    enforceDragToSelf(dropList) {\n        let siblings = dropList.connectedTo;\n        siblings = siblings.reduce((result, item) => {\n            if (isString(item)) {\n                const listInstance = CdkDropList['_dropLists'].find((list) => list.id === item);\n                if (listInstance) {\n                    result.push(listInstance);\n                }\n            }\n            return result;\n        }, []);\n        const dropListRef = dropList._dropListRef;\n        asapScheduler.schedule(() => {\n            dropListRef.connectedTo(siblings.map((list) => list._dropListRef));\n        });\n    }\n}\nCanvasItemColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemColumnComponent, deps: [{ token: ViewDesignerCanvasService }, { token: CanvasOutletHelperService }], target: i0.ɵɵFactoryTarget.Component });\nCanvasItemColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: CanvasItemColumnComponent, selector: \"rx-canvas-item-column\", inputs: { isReadOnly: \"isReadOnly\", colIndex: \"colIndex\", column: \"column\", layout: \"layout\" }, outputs: { dropListDropped: \"dropListDropped\" }, ngImport: i0, template: \"<div\\n  cdkDropList\\n  [cdkDropListOrientation]=\\\"dropListOrientation\\\"\\n  [cdkDropListConnectedTo]=\\\"column.dndListIds\\\"\\n  (cdkDropListDropped)=\\\"dropListDropped.next($event)\\\"\\n  [cdkDropListEnterPredicate]=\\\"dropListEnterPredicateBind\\\"\\n  [cdkDropListData]=\\\"{ columnIndex: colIndex }\\\"\\n  [id]=\\\"column.listId\\\"\\n>\\n  <!-- mw-100 class is used for DnD to restrict component width, see DRD21-5845 for more details -->\\n  <div\\n    class=\\\"canvas-item-wrapper mw-100 canvas-{{ layout.descriptor.type }}\\\"\\n    cdkDrag\\n    [cdkDragData]=\\\"getViewComponentDragData(layout)\\\"\\n    [cdkDragDisabled]=\\\"isReadOnly || layout.descriptor.options?.static\\\"\\n    (cdkDragEntered)=\\\"onDragEntered($event)\\\"\\n    (cdkDragStarted)=\\\"onDragStarted($event)\\\"\\n    *ngFor=\\\"let layout of column.children; let last = last; trackBy: trackByFn\\\"\\n  >\\n    <div class=\\\"canvas-item\\\" [class.active]=\\\"layout.isSelected$ | async\\\" (click)=\\\"onSelectComponent($event, layout)\\\">\\n      <div class=\\\"canvas-item-header\\\" [hidden]=\\\"!(layout.isSelected$ | async)\\\" cdkDragHandle>\\n        <span class=\\\"icon d-icon-dots mr-1\\\"></span>\\n        <span class=\\\"label\\\">{{ layout.label }}</span>\\n\\n        <button\\n          (click)=\\\"remove($event, layout)\\\"\\n          *ngIf=\\\"!isReadOnly && !layout.descriptor.options?.static\\\"\\n          class=\\\"remove-button btn btn-sm btn-link d-icon-cross_adapt p-0 px-1\\\"\\n          type=\\\"button\\\"\\n          aria-label=\\\"Close\\\"\\n        ></button>\\n      </div>\\n\\n      <rx-canvas-item [layout]=\\\"layout\\\" [isReadOnly]=\\\"isReadOnly\\\"></rx-canvas-item>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}:host{display:block}.cdk-drop-list{min-height:100px}.cdk-drop-list>.cdk-drag-placeholder{opacity:.5}.card-header{cursor:move}.canvas-item-wrapper.cdk-drag-preview{background:white;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.canvas-item{border:1px solid transparent;position:relative;padding:3px}.canvas-item.active{border-color:#20c997}.canvas-item-header{color:#fff;position:absolute;top:0;right:0;padding:1px 0 1px 5px;background:#20c997;cursor:move;z-index:1;display:flex}.canvas-item-header .label{white-space:nowrap}.remove-button{color:#fff}\\n\"], components: [{ type: CanvasItemComponent, selector: \"rx-canvas-item\", inputs: [\"layout\", \"interactive\", \"isReadOnly\"] }], directives: [{ type: i4$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"id\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListOrientation\", \"cdkDropListLockAxis\", \"cdkDropListData\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragDisabled\", \"cdkDragStartDelay\", \"cdkDragLockAxis\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragBoundary\", \"cdkDragRootElement\", \"cdkDragPreviewContainer\", \"cdkDragData\", \"cdkDragFreeDragPosition\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { type: i4$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i4.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-canvas-item-column',\n                    templateUrl: './canvas-item-column.component.html',\n                    styleUrls: ['./canvas-item-column.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerCanvasService }, { type: CanvasOutletHelperService }]; }, propDecorators: { isReadOnly: [{\n                type: Input\n            }], colIndex: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], dropListDropped: [{\n                type: Output\n            }] } });\n\nclass CanvasItemContainerComponent {\n    constructor(canvasItemApi, canvasOutletHelperService) {\n        this.canvasItemApi = canvasItemApi;\n        this.canvasOutletHelperService = canvasOutletHelperService;\n    }\n    trackByColFn(index, item) {\n        return item.listId;\n    }\n    onDropListDropped(event) {\n        const viewComponentDropData = Object.assign(Object.assign({}, event.item.data), { initialPropertiesByName: {}, columnIndex: event.container.data.columnIndex });\n        this.canvasOutletHelperService.setBeforeViewComponentDropState(viewComponentDropData);\n        if (!viewComponentDropData.preventDrop) {\n            this.canvasItemApi.core.dropComponent(viewComponentDropData, event.currentIndex, this.outlet.name);\n        }\n    }\n}\nCanvasItemContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemContainerComponent, deps: [{ token: ViewDesignerCanvasItemApiToken }, { token: CanvasOutletHelperService }], target: i0.ɵɵFactoryTarget.Component });\nCanvasItemContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: CanvasItemContainerComponent, selector: \"rx-canvas-item-container\", inputs: { outlet: \"outlet\", isReadOnly: \"isReadOnly\", layout: \"layout\" }, ngImport: i0, template: \"<div class=\\\"row\\\">\\n  <div\\n    *ngFor=\\\"let column of outlet.columns; let colIndex = index; let isLastCol = last; trackBy: trackByColFn\\\"\\n    class=\\\"{{ column.span ? 'col-' + column.span : 'col' }}\\\"\\n    [ngClass]=\\\"{ 'col-border': !isLastCol }\\\"\\n  >\\n    <rx-canvas-item-column\\n      [ngClass]=\\\"{ 'mb-3': !isLastCol }\\\"\\n      [isReadOnly]=\\\"isReadOnly\\\"\\n      [colIndex]=\\\"colIndex\\\"\\n      [column]=\\\"column\\\"\\n      [layout]=\\\"layout\\\"\\n      (dropListDropped)=\\\"onDropListDropped($event)\\\"\\n    ></rx-canvas-item-column>\\n  </div>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.col-border{border-right:1px dashed #d6d7d8}\\n\"], components: [{ type: CanvasItemColumnComponent, selector: \"rx-canvas-item-column\", inputs: [\"isReadOnly\", \"colIndex\", \"column\", \"layout\"], outputs: [\"dropListDropped\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasItemContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-canvas-item-container',\n                    templateUrl: './canvas-item-container.component.html',\n                    styleUrls: ['./canvas-item-container.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: CanvasItemApi, decorators: [{\n                    type: Inject,\n                    args: [ViewDesignerCanvasItemApiToken]\n                }] }, { type: CanvasOutletHelperService }]; }, propDecorators: { outlet: [{\n                type: Input\n            }], isReadOnly: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }] } });\n\nclass CanvasOutletComponent {\n    constructor(canvasItemApi, parentOutletComponent, canvasOutletHelperService, componentFactoryResolver) {\n        this.canvasItemApi = canvasItemApi;\n        this.parentOutletComponent = parentOutletComponent;\n        this.canvasOutletHelperService = canvasOutletHelperService;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.containerComponentInstance = null;\n        this.destroyed$ = new ReplaySubject(1);\n        this.name = RX_VIEW_DEFINITION.defaultOutletName;\n        this.skipParentPredicate = false;\n        this.dropListOrientation = 'vertical';\n        this.beforeViewComponentDrop = new EventEmitter();\n        this.dropPredicate = () => true;\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    ngOnInit() {\n        this.containerComponentInstance = this.canvasItemApi.core.registerOutlet(this.name, this.container, this.componentFactoryResolver.resolveComponentFactory(this.containerComponent || CanvasItemContainerComponent)).instance;\n        this.canvasOutletHelperService.dropListOrientation = this.dropListOrientation;\n        this.canvasOutletHelperService.parentOutletComponent = this.parentOutletComponent;\n        this.canvasOutletHelperService.dropPredicate = this.dropPredicate;\n        this.canvasOutletHelperService.skipParentPredicate = this.skipParentPredicate;\n        this.canvasOutletHelperService.containerComponentInstance = this.containerComponentInstance;\n        this.canvasOutletHelperService.beforeViewComponentDrop$.pipe(takeUntil(this.destroyed$)).subscribe((event) => {\n            this.beforeViewComponentDrop.emit(event);\n        });\n    }\n    canBeDropped(data) {\n        return this.canvasOutletHelperService.canBeDropped(data);\n    }\n    componentDropPredicate(data, skipPredicate = false) {\n        return this.canvasOutletHelperService.componentDropPredicate(data, skipPredicate);\n    }\n}\nCanvasOutletComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasOutletComponent, deps: [{ token: ViewDesignerCanvasItemApiToken }, { token: CanvasOutletComponent, optional: true, skipSelf: true }, { token: CanvasOutletHelperService }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Component });\nCanvasOutletComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: CanvasOutletComponent, selector: \"rx-canvas-outlet\", inputs: { name: \"name\", skipParentPredicate: \"skipParentPredicate\", containerComponent: \"containerComponent\", dropListOrientation: \"dropListOrientation\", dropPredicate: \"dropPredicate\" }, outputs: { beforeViewComponentDrop: \"beforeViewComponentDrop\" }, providers: [CanvasOutletHelperService], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: \"<ng-container #container></ng-container>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: CanvasOutletComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-canvas-outlet',\n                    templateUrl: './canvas-outlet.component.html',\n                    providers: [CanvasOutletHelperService]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ViewDesignerCanvasItemApiToken]\n                }] }, { type: CanvasOutletComponent, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Optional\n                }] }, { type: CanvasOutletHelperService }, { type: i0.ComponentFactoryResolver }]; }, propDecorators: { name: [{\n                type: Input\n            }], skipParentPredicate: [{\n                type: Input\n            }], containerComponent: [{\n                type: Input\n            }], dropListOrientation: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], beforeViewComponentDrop: [{\n                type: Output\n            }], dropPredicate: [{\n                type: Input\n            }] } });\n\nclass DesignerComponent {\n    constructor(canvasItemComponent, viewDesignerCanvasComponent) {\n        this.canvasItemComponent = canvasItemComponent;\n        this.viewDesignerCanvasComponent = viewDesignerCanvasComponent;\n        this.defaultOutletName = RX_VIEW_DEFINITION.defaultOutletName;\n    }\n    trackByFn(index, item) {\n        return item.name;\n    }\n}\nDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerComponent, deps: [{ token: CanvasItemComponent }, { token: ViewDesignerCanvasComponent }], target: i0.ɵɵFactoryTarget.Component });\nDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: DesignerComponent, selector: \"rx-designer\", ngImport: i0, template: \"<rx-canvas-outlet\\n  [class.border]=\\\"canvasItemComponent.layout.outlets.length > 1\\\"\\n  [class.default-outlet]=\\\"outlet.name === defaultOutletName\\\"\\n  *ngFor=\\\"let outlet of canvasItemComponent.layout.outlets; trackBy: trackByFn\\\"\\n  [name]=\\\"outlet.name\\\"\\n  (beforeViewComponentDrop)=\\\"viewDesignerCanvasComponent.beforeComponentDropInRoot.emit($event)\\\"\\n></rx-canvas-outlet>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}rx-canvas-outlet{display:block}rx-canvas-outlet.default-outlet:not(:only-child) ::ng-deep>rx-canvas-item-container>.row>*>rx-canvas-item-column>.cdk-drop-list{min-height:300px}rx-canvas-outlet.default-outlet:only-child ::ng-deep>rx-canvas-item-container>.row>*>rx-canvas-item-column>.cdk-drop-list{min-height:calc(100vh - 155px)}rx-canvas-outlet.border{border:1px solid #d6d7d8}rx-canvas-outlet+rx-canvas-outlet{margin-top:10px}\\n\"], components: [{ type: CanvasOutletComponent, selector: \"rx-canvas-outlet\", inputs: [\"name\", \"skipParentPredicate\", \"containerComponent\", \"dropListOrientation\", \"dropPredicate\"], outputs: [\"beforeViewComponentDrop\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-designer',\n                    templateUrl: './designer.component.html',\n                    styleUrls: ['./designer.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: CanvasItemComponent }, { type: ViewDesignerCanvasComponent }]; } });\n\nclass RxViewDesignerHelperService {\n    constructor(viewDesignerFacade, rxViewComponentRegistryService, componentFactoryResolver, viewDesignerModels) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.viewDesignerModels = viewDesignerModels;\n        this.designerComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DesignerComponent);\n        this.canvasDndListIds = [];\n        this.extensionViewAllowedComponentTypes = new Set([\n            RxViewComponentType.Container,\n            RxViewComponentType.RichText,\n            RxViewComponentType.RecordEditor,\n            RxViewComponentType.Character,\n            RxViewComponentType.Textarea,\n            RxViewComponentType.Boolean,\n            RxViewComponentType.Date,\n            RxViewComponentType.DateTime,\n            RxViewComponentType.Time,\n            RxViewComponentType.Decimal,\n            RxViewComponentType.Floating,\n            RxViewComponentType.Integer,\n            RxViewComponentType.LocalizedCharacter,\n            RxViewComponentType.Selection,\n            RxViewComponentType.SelectGroup,\n            RxViewComponentType.RichTextarea,\n            BwfViewComponentType.DynamicNamedList\n        ]);\n        this.canvasLayout$ = this.getRecursiveViewLayoutGuids().pipe(switchMap((guids) => guids.length\n            ? this.viewDesignerFacade.areViewModelsReady$.pipe(\n            // Wait until component models will be instantiated after save view definition.\n            filter(Boolean), switchMapTo(this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))))\n            : this.viewDesignerFacade.viewDesignerModelState$.pipe(take(1))), map$1((designModelState) => {\n            const viewModel = designModelState.viewDesignModel;\n            const componentModels = designModelState.viewComponentDesignModels;\n            this.canvasDndListIds.length = 0;\n            return {\n                guid: viewModel.guid,\n                factory: this.designerComponentFactory,\n                outlets: viewModel.layout.outlets.map((outlet) => ({\n                    name: outlet.name,\n                    columns: outlet.columns.map((column, i) => {\n                        const listId = String(`${viewModel.guid}-${outlet.name}-${i}`);\n                        // do not allow components to be dropped in the root of a SHELL view\n                        if (viewModel.type !== ViewDefinitionType.Shell) {\n                            this.canvasDndListIds.push(listId);\n                        }\n                        return Object.assign(Object.assign({}, column), { children: column.children.map((childGuid) => this.initializeCanvasItem(childGuid, componentModels, this.canvasDndListIds)), listId, dndListIds: this.canvasDndListIds });\n                    })\n                })),\n                model: null,\n                descriptor: null,\n                isSelected$: of(false)\n            };\n        }), tap(() => {\n            // required for DND\n            // https://github.com/angular/components/issues/16671\n            this.canvasDndListIds.reverse();\n        }));\n        this.viewBreadcrumbItem$ = this.viewDesignerFacade.getViewPropertyValue('displayName').pipe(concatMap((displayName) => of(displayName\n            ? displayName === RX_APPLICATION.shellDefinitionName\n                ? 'Application shell'\n                : displayName\n            : '<New view>')), withLatestFrom(this.viewDesignerFacade.viewModelGuid$), map$1(([viewBreadcrumbLabel, guid]) => ({\n            label: viewBreadcrumbLabel,\n            data: { guid }\n        })));\n        this.selectedComponentBreadcrumbItems$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(switchMap((componentGuid) => componentGuid\n            ? combineLatest([\n                this.viewDesignerFacade.breadcrumbs$,\n                this.viewDesignerFacade.getParentComponentGuid(componentGuid)\n            ]).pipe(withLatestFrom(this.viewDesignerFacade.viewComponentModels$), map$1(([[breadcrumbs], viewComponentModels]) => \n            // Handle empty viewComponentModels state during view definition save.\n            isEmpty(viewComponentModels)\n                ? []\n                : findAllParentComponentGuids(componentGuid, viewComponentModels).map((parentGuid) => {\n                    let label = breadcrumbs[parentGuid];\n                    if (!label) {\n                        const component = viewComponentModels[parentGuid];\n                        const descriptor = this.rxViewComponentRegistryService.get(component.type);\n                        label = descriptor.name;\n                    }\n                    return { label, data: { guid: parentGuid } };\n                })))\n            : of([])));\n        this.breadcrumbItems$ = combineLatest([this.viewBreadcrumbItem$, this.selectedComponentBreadcrumbItems$]).pipe(map$1(([viewItem, componentItems]) => [viewItem, ...componentItems]));\n        this.validationIssues$ = this.viewDesignerFacade.validationIssues$.pipe(withLatestFrom(this.viewDesignerFacade.viewDesignerModelState$), map$1(([validationIssuesState, modelState]) => flow((state) => mergeWith(Object.assign({}, state.issues), state.expressionIssues, (issues = [], expressionIssues = []) => issues.concat(expressionIssues)), (issuesByComponentGuid) => reduce(issuesByComponentGuid, (result, issues, guid) => {\n            var _a;\n            let name;\n            if (((_a = modelState.viewDesignModel) === null || _a === void 0 ? void 0 : _a.guid) === guid) {\n                name = modelState.viewDesignModel.displayName || 'View designer';\n            }\n            else if (modelState.viewComponentDesignModels[guid]) {\n                const type = modelState.viewComponentDesignModels[guid].type;\n                const descriptor = this.rxViewComponentRegistryService.get(type);\n                name = descriptor && descriptor.name;\n            }\n            if (name) {\n                result.push({\n                    title: name,\n                    issues: issues.map((issue) => ({\n                        type: issue.type,\n                        description: issue.description,\n                        disableCorrection: issue.disableCorrection,\n                        data: {\n                            guid,\n                            propertyName: issue.propertyName,\n                            data: issue.data\n                        }\n                    }))\n                });\n            }\n            return result;\n        }, []))(validationIssuesState)));\n    }\n    getLicensedComponents() {\n        return this.rxViewComponentRegistryService.getLicensedComponents().pipe(first(), map$1((components) => components.filter((component) => !this.rxViewComponentRegistryService.isDataComponentDescriptor(component) &&\n            !component.hidden &&\n            !component.isPageComponent)));\n    }\n    getRecursiveViewLayoutGuids() {\n        return this.viewDesignerFacade\n            .getViewPropertyValue('layout')\n            .pipe(switchMap((layout) => this.getRecursiveComponentLayoutGuids(layout)));\n    }\n    getRecursiveComponentLayoutGuids(layout) {\n        const guids = RxViewLayout.getViewLayoutChildGuids(layout);\n        return guids.length\n            ? combineLatest(guids.map((guid) => this.viewDesignerFacade\n                .getComponentLayout(guid)\n                .pipe(switchMap((childLayout) => childLayout\n                ? this.getRecursiveComponentLayoutGuids(childLayout).pipe(map$1((childGuids) => [...childGuids, ...guids]))\n                : of(guids)))))\n            : of([]);\n    }\n    initializeCanvasItem(componentGuid, componentModels, dndListIds) {\n        const componentModel = componentModels[componentGuid];\n        const descriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n        const canvasLayout = {\n            guid: componentModel.guid,\n            descriptor,\n            factory: descriptor.designComponentFactory,\n            model: this.viewDesignerModels.get(componentModel.guid),\n            outlets: [],\n            isSelected$: this.viewDesignerFacade.selectedComponentGuid$.pipe(map$1((guid) => guid === componentModel.guid)),\n            label: descriptor.name\n        };\n        if (componentModel.layout) {\n            canvasLayout.viewComponentWithParents = findAllParentComponentGuids(componentModel.guid, componentModels).map((guid) => ({ guid, type: componentModels[guid].type }));\n            componentModel.layout.outlets.forEach((outlet) => {\n                const canvasOutlet = {\n                    name: outlet.name,\n                    columns: outlet.columns.map((column, i) => {\n                        const listId = `${componentModel.guid}-${outlet.name}-${i}`;\n                        dndListIds.push(listId);\n                        return {\n                            children: column.children.map((childGuid) => this.initializeCanvasItem(childGuid, componentModels, dndListIds)),\n                            span: column.span,\n                            listId,\n                            dndListIds\n                        };\n                    })\n                };\n                canvasLayout.outlets.push(canvasOutlet);\n            });\n        }\n        return canvasLayout;\n    }\n}\nRxViewDesignerHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerHelperService, deps: [{ token: ViewDesignerFacade }, { token: i5.RxViewComponentRegistryService }, { token: i0.ComponentFactoryResolver }, { token: RxViewDesignerModels }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDesignerHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerHelperService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerHelperService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }, { type: i5.RxViewComponentRegistryService }, { type: i0.ComponentFactoryResolver }, { type: RxViewDesignerModels }]; } });\n\nconst RX_VIEW_DESIGNER = {\n    stencilGroups: {\n        basicComponents: {\n            label: 'Basic components'\n        },\n        chatbotComponents: {\n            label: 'Chatbot components'\n        },\n        recordEditorInputs: {\n            label: 'Record editor inputs'\n        }\n    },\n    inspectorTabs: {\n        viewProperties: {\n            tabId: 0\n        },\n        componentProperties: {\n            tabId: 1\n        },\n        validationIssues: {\n            tabId: 2\n        }\n    }\n};\n\nclass ViewDesignerPaletteComponent {\n    constructor(stringService) {\n        this.stringService = stringService;\n        this.allowedDropListIds = [];\n        this.filterFormControl = new FormControl();\n        this.componentsSubject$ = new ReplaySubject(1);\n    }\n    set components(value) {\n        this.componentsSubject$.next(value);\n    }\n    ngOnInit() {\n        this.viewComponentGroups$ = combineLatest([\n            this.filterFormControl.valueChanges.pipe(debounceTime(200), startWith(null)),\n            this.componentsSubject$\n        ]).pipe(map$1(([componentNameFilterText, viewComponentDescriptors]) => flow((descriptors) => groupBy(descriptors, (component) => component.group), (groupsByName) => map(groupsByName, (components, groupName) => ({\n            name: groupName,\n            components: sortBy(components, (component) => isFinite(component.index) ? component.index : component.name)\n        })), (groups) => sortBy(groups, (group) => {\n            if (group.name === RX_VIEW_DESIGNER.stencilGroups.basicComponents.label) {\n                return '1';\n            }\n            else if (group.name === RX_VIEW_DESIGNER.stencilGroups.recordEditorInputs.label) {\n                return '2';\n            }\n            else {\n                return '3' + lowerCase(group.name);\n            }\n        }), (groups) => componentNameFilterText\n            ? groups\n                .map((group) => (Object.assign(Object.assign({}, group), { components: group.components.filter((component) => this.stringService.caseInsensitiveSearch(component.name, componentNameFilterText)) })))\n                .filter((group) => group.components.length)\n            : groups)(viewComponentDescriptors)));\n    }\n    getViewComponentDragData(descriptor) {\n        return {\n            draggedViewComponentDescriptor: descriptor\n        };\n    }\n    trackByNameFn(index, item) {\n        return item.name;\n    }\n    ngOnDestroy() {\n        this.componentsSubject$.complete();\n    }\n}\nViewDesignerPaletteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerPaletteComponent, deps: [{ token: i2$1.RxStringService }], target: i0.ɵɵFactoryTarget.Component });\nViewDesignerPaletteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ViewDesignerPaletteComponent, selector: \"rx-view-designer-palette\", inputs: { components: \"components\", allowedDropListIds: \"allowedDropListIds\" }, ngImport: i0, template: \"<div class=\\\"search-field-container\\\">\\n  <adapt-rx-search\\n    [formControl]=\\\"filterFormControl\\\"\\n    rx-id=\\\"stencil-search-field\\\"\\n    placeholder=\\\"Search\\\"\\n  ></adapt-rx-search>\\n</div>\\n\\n<adapt-accordion [config]=\\\"{ multiselect: true, tabs: [] }\\\">\\n  <adapt-accordion-tab\\n    *ngFor=\\\"let viewComponentsGroup of viewComponentGroups$ | async; trackBy: trackByNameFn\\\"\\n    [title]=\\\"viewComponentsGroup.name\\\"\\n    [attr.rx-id]=\\\"stringService.toRxId(viewComponentsGroup.name)\\\"\\n    [isOpen]=\\\"true\\\"\\n  >\\n    <div\\n      class=\\\"group-items-container\\\"\\n      cdkDropList\\n      cdkDropListSortingDisabled\\n      [cdkDropListConnectedTo]=\\\"allowedDropListIds\\\"\\n    >\\n      <div\\n        *ngFor=\\\"let viewComponent of viewComponentsGroup.components; trackBy: trackByNameFn\\\"\\n        [attr.rx-id]=\\\"viewComponent.type\\\"\\n        class=\\\"group-item\\\"\\n        cdkDrag\\n        [cdkDragData]=\\\"getViewComponentDragData(viewComponent)\\\"\\n      >\\n        <div class=\\\"group-item-inner\\\">\\n          <span class=\\\"item-image d-icon-{{ viewComponent.icon || 'wall' }}\\\"></span>\\n\\n          <span class=\\\"item-name\\\" title=\\\"{{ viewComponent.name }}\\\">\\n            {{ viewComponent.name }}\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </adapt-accordion-tab>\\n</adapt-accordion>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}:host{display:block}.group-items-container{display:flex;flex-wrap:wrap}.group-items-container .group-item.cdk-drag-placeholder{width:33.3%}.group-item{border-right:1px solid #d6d7d8;border-bottom:1px solid #d6d7d8;text-align:center;width:33.3%;cursor:move;height:90px;padding:3px 0}.group-item.cdk-drag-preview{background:white;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.group-item.cdk-drag-placeholder{border:0;width:100px;height:40px;padding:0;position:relative;z-index:3}.group-item.cdk-drag-placeholder .group-item-inner{border:1px solid #d6d7d8;background:#fff}.group-item:nth-child(3n){border-right:none}.group-item-inner{position:relative;display:flex;flex-direction:column}.item-image{color:#626668;font-size:40px;height:54px;flex-grow:1}.item-name{font-size:10px;overflow:hidden;height:34px}.cdk-drag-placeholder{opacity:1!important}adapt-accordion-tab ::ng-deep .card-block{padding:0}.form-group{margin:10px 20px}.search-field-container{padding:.9375rem}\\n\"], components: [{ type: i3$3.AdaptRxSearchComponent, selector: \"adapt-rx-search\", inputs: [\"mode\", \"autocomplete\", \"placeholder\", \"size\", \"searchButton\", \"searchButtonText\", \"clearButtonText\", \"debounceTime\", \"ariaControlsPopupId\", \"ariaActiveDescendant\", \"initialAlign\"], outputs: [\"editModeChange\"] }, { type: i3$3.AdaptAccordionComponent, selector: \"adapt-accordion\", inputs: [\"config\", \"multiselect\", \"bordered\"], outputs: [\"openTab\", \"closeTab\"] }, { type: i3$3.AdaptAccordionTabComponent, selector: \"adapt-accordion-tab\", inputs: [\"title\", \"renderContentWhenClosed\", \"customClass\", \"multiline\", \"icon\", \"disabled\", \"isOpen\"], outputs: [\"open\", \"close\"] }], directives: [{ type: i3$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3$2.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"id\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListOrientation\", \"cdkDropListLockAxis\", \"cdkDropListData\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i4$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragDisabled\", \"cdkDragStartDelay\", \"cdkDragLockAxis\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragBoundary\", \"cdkDragRootElement\", \"cdkDragPreviewContainer\", \"cdkDragData\", \"cdkDragFreeDragPosition\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }], pipes: { \"async\": i4.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerPaletteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-designer-palette',\n                    templateUrl: './view-designer-palette.component.html',\n                    styleUrls: ['./view-designer-palette.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i2$1.RxStringService }]; }, propDecorators: { components: [{\n                type: Input\n            }], allowedDropListIds: [{\n                type: Input\n            }] } });\n\nconst RX_VIEW_MODEL = new InjectionToken('RX_VIEW_MODEL');\nclass RxViewDesignerComponent {\n    constructor(viewDesignerFacade, rxNotificationService, rxDefinitionPickerCacheService, rxNamedListDefinitionCacheService, rxModalService, translateService, rxUtilityModalsService, rxViewDesignerHelperService, rxExpressionEditorService, rxViewDefinitionService, rxComponentCanDeactivateGuard, rxViewDefinitionGeneratorService, rxViewDesignerModels, rxLogService, injector, renderer, rxRecordDefinitionCacheService, rxAssociationDefinitionCacheService, rxProcessDefinitionCacheService, rxViewDefinitionCacheService, rxGainsightConfiguratorService, rxDefinitionNameService, rxFeatureService) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxNotificationService = rxNotificationService;\n        this.rxDefinitionPickerCacheService = rxDefinitionPickerCacheService;\n        this.rxNamedListDefinitionCacheService = rxNamedListDefinitionCacheService;\n        this.rxModalService = rxModalService;\n        this.translateService = translateService;\n        this.rxUtilityModalsService = rxUtilityModalsService;\n        this.rxViewDesignerHelperService = rxViewDesignerHelperService;\n        this.rxExpressionEditorService = rxExpressionEditorService;\n        this.rxViewDefinitionService = rxViewDefinitionService;\n        this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n        this.rxViewDefinitionGeneratorService = rxViewDefinitionGeneratorService;\n        this.rxViewDesignerModels = rxViewDesignerModels;\n        this.rxLogService = rxLogService;\n        this.injector = injector;\n        this.renderer = renderer;\n        this.rxRecordDefinitionCacheService = rxRecordDefinitionCacheService;\n        this.rxAssociationDefinitionCacheService = rxAssociationDefinitionCacheService;\n        this.rxProcessDefinitionCacheService = rxProcessDefinitionCacheService;\n        this.rxViewDefinitionCacheService = rxViewDefinitionCacheService;\n        this.rxGainsightConfiguratorService = rxGainsightConfiguratorService;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxFeatureService = rxFeatureService;\n        this.viewDefinitionSaved = new EventEmitter();\n        this.viewDefinitionErrorLoading = new EventEmitter();\n        this.closeDesigner = new EventEmitter();\n        this.destroyed$ = new ReplaySubject(1);\n        this.inspectorFocusEditorSubject = new Subject();\n        this.isViewDefinitionChanged$ = new BehaviorSubject(false);\n        this.validationIssues$ = this.rxViewDesignerHelperService.validationIssues$.pipe(shareReplay(1), takeUntil(this.destroyed$));\n        this.breadcrumbItems$ = this.rxViewDesignerHelperService.breadcrumbItems$;\n        this.canvasLayout$ = this.rxViewDesignerHelperService.canvasLayout$;\n        this.canvasDndListIds = this.rxViewDesignerHelperService.canvasDndListIds;\n        this.extensionViewRootComponentType = RxViewComponentType.RecordEditor;\n        // Component UI State\n        this.isDesignMode = true;\n        this.isStencilExpanded = true;\n        this.isInspectorExpanded = true;\n        this.inspectorFocusEditor$ = this.inspectorFocusEditorSubject.asObservable();\n        this.viewComponentInspectorEmptyText$ = this.viewDesignerFacade.selectedComponentInspectorLayout$.pipe(switchMap((selectedComponentLayout) => selectedComponentLayout\n            ? of(null)\n            : this.viewDesignerFacade.selectedComponentGuid$.pipe(withLatestFrom(this.viewDesignerFacade.viewModel$), map$1(([selectedComponentGuid, viewModel]) => selectedComponentGuid && selectedComponentGuid !== viewModel.guid\n                ? 'Selected component has no properties.'\n                : 'Select a component to view its properties here.'))), shareReplay({\n            refCount: true,\n            bufferSize: 1\n        }));\n        this.selectedComponentModel$ = this.viewDesignerFacade.selectedComponentGuid$.pipe(map$1((guid) => this.rxViewDesignerModels.get(guid)));\n        this.isReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n        this.paletteComponents$ = combineLatest([\n            this.viewDesignerFacade.isExtensionView$.pipe(tap((isExtensionView) => (this.isExtensionView = isExtensionView))),\n            this.viewDesignerFacade.isExtensionContainerSet$.pipe(tap((isExtensionContainerSet) => (this.isExtensionContainerSet = isExtensionContainerSet))),\n            this.rxViewDesignerHelperService\n                .getLicensedComponents()\n                .pipe(map$1((descriptors) => this.configuration.paletteComponentsPredicate\n                ? descriptors.filter((descriptor) => this.configuration.paletteComponentsPredicate(descriptor))\n                : descriptors))\n        ]).pipe(switchMap(([isExtensionView, isExtensionContainerSet, componentDescriptors]) => isExtensionView\n            ? this.viewDesignerFacade.firstViewComponentModelType$.pipe(map$1((firstViewComponentType) => firstViewComponentType === this.extensionViewRootComponentType\n                ? componentDescriptors.filter(({ type }) => type !== this.extensionViewRootComponentType &&\n                    this.rxViewDesignerHelperService.extensionViewAllowedComponentTypes.has(type))\n                : componentDescriptors.filter(({ type }) => type === this.extensionViewRootComponentType)))\n            : of(componentDescriptors)));\n        const customViewModel = this.injector.get(RX_VIEW_MODEL, null, InjectFlags.Optional);\n        this.rxViewModel = customViewModel || this.injector.get(RxViewModel);\n        this.rxDefinitionPickerCacheService.registerConsumer();\n        this.rxNamedListDefinitionCacheService.registerConsumer(this.destroyed$);\n        this.rxAssociationDefinitionCacheService.registerConsumer(this.destroyed$);\n        this.rxProcessDefinitionCacheService.registerConsumer(this.destroyed$);\n        this.rxRecordDefinitionCacheService.registerConsumer(this.destroyed$);\n        this.rxViewDefinitionCacheService.registerConsumer(this.destroyed$);\n    }\n    ngOnInit() {\n        this.isPreviewAvailable$ = this.viewDesignerFacade.getViewPropertyValue('lastUpdateTime').pipe(map$1((lastUpdateTime) => !this.configuration.disablePreview &&\n            (Boolean(lastUpdateTime) || !isUndefined(this.configuration.viewDefinitionName))), takeUntil(this.destroyed$));\n        this.viewDefinitionName$ = this.viewDesignerFacade.getViewPropertyValue('name');\n        this.viewDesignerFacade\n            .getViewPropertyValue('pageComponent')\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((pageComponent) => {\n            this.isPageView = Boolean(pageComponent);\n        });\n        this.viewDesignerFacade.viewDefinitionSaveSuccess$\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(({ viewDefinitionName }) => {\n            this.rxNotificationService.addSuccessMessage('View definition saved successfully.');\n            this.viewDefinitionSaved.emit(viewDefinitionName);\n            this.initViewDesigner();\n        });\n        this.viewDesignerFacade.viewDefinitionLoadError$\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.viewDefinitionErrorLoading.emit());\n        this.hasValidationErrors$ = this.validationIssues$.pipe(map$1((validationIssues) => Boolean(filter$1(validationIssues, {\n            issues: [{ type: ValidationIssueType.Error }]\n        }).length)), distinctUntilChanged());\n        this.hasValidationWarning$ = this.validationIssues$.pipe(map$1((validationIssues) => Boolean(filter$1(validationIssues, {\n            issues: [{ type: ValidationIssueType.Warning }]\n        }).length)), distinctUntilChanged());\n        this.isSaveButtonDisabled$ = combineLatest([\n            this.hasValidationErrors$,\n            this.viewDesignerFacade.areViewModelsReady$,\n            this.isViewDefinitionChanged$,\n            this.isReadOnly$\n        ]).pipe(map$1(([hasValidationErrors, areViewModelsReady, isChanged, isReadOnly]) => hasValidationErrors || !areViewModelsReady || !isChanged || isReadOnly), startWith(true));\n        this.isReadOnly$.pipe(takeUntil(this.destroyed$)).subscribe((isReadOnly) => {\n            if (isReadOnly) {\n                this.rxNotificationService.addWarningMessage(this.translateService.instant('com.bmc.arsys.rx.client.designer.read-only-definition-warning.message'));\n            }\n        });\n        if (this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n            this.viewDefinitionName$.pipe(take(1)).subscribe((viewDefinitionName) => {\n                this.rxGainsightConfiguratorService.updateGlobalContext({\n                    subProductLevel1: {\n                        name: 'Design'\n                    },\n                    subProductLevel2: {\n                        name: this.rxDefinitionNameService.getDisplayName(viewDefinitionName) == RX_APPLICATION.shellDefinitionName\n                            ? 'Shell designer'\n                            : 'View designer'\n                    }\n                });\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.configuration.currentValue) {\n            this.initViewDesigner(true);\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n        this.inspectorFocusEditorSubject.complete();\n        this.isViewDefinitionChanged$.complete();\n        this.rxDefinitionPickerCacheService.unRegisterConsumer();\n        this.viewDesignerFacade.destroyViewDesigner();\n        this.rxGainsightConfiguratorService.removeGlobalContext(['subProductLevel2', 'subProductLevel3']);\n    }\n    initViewDesigner(dispatchInitViewDesignerAction = false) {\n        var _a;\n        // Mark view definition as not changed if it's not. This needs for scenario when view designer\n        // will be reinitialized with another view definition name and current view is dirty.\n        if (this.isViewDefinitionChanged$.getValue()) {\n            this.isViewDefinitionChanged$.next(false);\n        }\n        (_a = this.viewDefinitionChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        if (dispatchInitViewDesignerAction) {\n            this.viewDesignerFacade.initViewDesigner(pick(this.configuration, ['bundleId', 'viewDefinitionName', 'layoutTemplate']));\n        }\n        this.initViewDefinitionChangeSubscription();\n    }\n    initViewDefinitionChangeSubscription() {\n        this.viewDefinitionChangeSubscription = this.viewDesignerFacade.areViewModelsReady$\n            .pipe(\n        // Wait until models state will be updated with view and view components data.\n        filter(Boolean), take(1), switchMap(() => combineLatest([this.viewDesignerFacade.viewModel$, this.viewDesignerFacade.viewComponentModels$]).pipe(map$1(([viewModel, viewComponentModels]) => this.rxViewDefinitionGeneratorService.generate(viewModel, viewComponentModels)), distinctUntilChanged(isEqual), \n        // Skip first emit from distinctUntilChanged.\n        skip(1), \n        // Complete after first emit, it's considered that view definition gets changed so no needs for further emits.\n        take(1), takeUntil(this.destroyed$))), takeUntil(this.destroyed$))\n            .subscribe(() => {\n            this.isViewDefinitionChanged$.next(true);\n        });\n    }\n    onSelectComponent(guid) {\n        this.viewDesignerFacade.selectComponent(guid);\n    }\n    onDropComponent(data) {\n        this.viewDesignerFacade.insertComponent(data);\n    }\n    onRemoveComponent(guid) {\n        this.rxUtilityModalsService\n            .confirm('Are you sure you want to delete this view component?')\n            .then((isConfirmed) => {\n            if (isConfirmed) {\n                this.viewDesignerFacade.removeViewComponents([guid], true);\n                if (this.isPageView) {\n                    this.viewDesignerFacade.updateViewProperties({ pageComponent: null });\n                }\n            }\n        });\n    }\n    onInspectorTabChange(event) {\n        this.viewDesignerFacade.selectInspectorTab({ tabId: event.index });\n    }\n    toggleDesignMode() {\n        if (this.isDesignMode) {\n            this.viewDesignerFacade.generateViewDefinition();\n        }\n        this.isDesignMode = !this.isDesignMode;\n    }\n    onComponentPropertiesChange(properties) {\n        this.viewDesignerFacade.updateSelectedComponentProperties(properties);\n    }\n    onEditorEvent(event, inspectorElementRef) {\n        if (event.type === RX_VALIDATION_FORM_CONTROL.events.correctValidationIssue) {\n            this.correctValidationIssue(event.payload.componentGuid, event.payload.propertyName);\n        }\n        if (event.type === RX_REVERT_CUSTOMIZATION.events.revertCustomization) {\n            this.revertCustomization();\n        }\n        if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n            this.openExpressionEditor(event.payload, inspectorElementRef);\n        }\n    }\n    getExpressionProperties(inspectorElementRef) {\n        return (this.viewComponentPropertyInspectorElementRef === inspectorElementRef\n            ? this.viewDesignerFacade.selectedComponentProperties$\n            : this.viewDesignerFacade.viewModel$).pipe(map$1((properties) => Array.from(this.renderer\n            .selectRootElement(inspectorElementRef.nativeElement, true)\n            .querySelectorAll('rx-expression-form-control')).map((element) => {\n            const propertyPath = element.getAttribute('property-path');\n            return {\n                path: propertyPath,\n                value: get(properties, propertyPath),\n                label: element.getAttribute('property-label')\n            };\n        })));\n    }\n    openExpressionEditor(payload, inspectorElementRef) {\n        const isComponentInspectorChange = this.viewComponentPropertyInspectorElementRef === inspectorElementRef;\n        const props$ = isComponentInspectorChange\n            ? this.viewDesignerFacade.selectedComponentProperties$\n            : this.viewDesignerFacade.viewModel$;\n        combineLatest([this.viewDesignerFacade.selectedComponentGuid$, props$])\n            .pipe(take(1), switchMap(([componentGuid, properties]) => {\n            const model = isComponentInspectorChange ? this.rxViewDesignerModels.get(componentGuid) : this.rxViewModel;\n            const expressionConfigurator = model === null || model === void 0 ? void 0 : model.expressionConfigurator;\n            if (expressionConfigurator) {\n                return this.rxExpressionEditorService\n                    .openEditor({\n                    property: {\n                        path: payload.propertyPath,\n                        value: get(properties, payload.propertyPath),\n                        label: payload.propertyLabel\n                    },\n                    isReadOnly: payload.isReadOnly,\n                    expressionConfigurator,\n                    legend: [\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n                            icon: 'd-icon-mathematical_function'\n                        },\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n                            icon: 'd-icon-dollar'\n                        },\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'),\n                            icon: 'd-icon-file_o'\n                        },\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'),\n                            icon: 'd-icon-file_o_gear'\n                        },\n                        {\n                            label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'),\n                            icon: 'd-icon-arrow_right_square_input'\n                        }\n                    ],\n                    expressionPropertyNavigator: {\n                        getProperties: this.getExpressionProperties.bind(this, inspectorElementRef)\n                    }\n                })\n                    .pipe(withLatestFrom(props$), map$1(([{ path, value }, props]) => {\n                    if (props.hasOwnProperty(path)) {\n                        return { [path]: value };\n                    }\n                    else {\n                        // Don't override nested model properties e.g,\n                        // when 'path' = \"outputParams[1].source\" and 'value' = \"${bar}\", model will be updated from:\n                        // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: null}] } to:\n                        // {..., outputParams: [{name: 'foo', source: ${foo}}, {name: 'bar', source: ${bar}}] }\n                        const headPropertyName = toPath(path)[0];\n                        // clone value because \"set\" mutates object, otherwise expression\n                        // form control component will not be updated with new value.\n                        return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n                    }\n                }));\n            }\n            else {\n                this.rxLogService.debug('View designer: Expression editor cannot be opened without expression configurator.');\n                return EMPTY;\n            }\n        }), takeUntil(this.destroyed$))\n            .subscribe((value) => isComponentInspectorChange\n            ? this.viewDesignerFacade.updateSelectedComponentProperties(value)\n            : this.viewDesignerFacade.updateViewProperties(value));\n    }\n    saveViewDefinition() {\n        this.viewDesignerFacade.viewModel$\n            .pipe(take(1), switchMap((viewModel) => {\n            const message = viewModel.type === ViewDefinitionType.Shell\n                ? 'If you save your changes now, you will not be able to run this application using the old UI. Do you want to continue?'\n                : 'If you save this view definition, you will not be able to open it in the old view designer. Do you want to continue?';\n            if (viewModel.isAngularJsView) {\n                return this.rxModalService.confirm({\n                    title: 'Warning',\n                    modalStyle: RX_MODAL.modalStyles.warning,\n                    message\n                });\n            }\n            else {\n                return of(true);\n            }\n        }), filter(Boolean), takeUntil(this.destroyed$))\n            .subscribe(() => {\n            this.viewDesignerFacade.saveViewDefinition();\n        });\n    }\n    onCorrectIssue(validationIssue) {\n        this.correctValidationIssue(validationIssue.data.guid, validationIssue.data.propertyName, validationIssue.data.data);\n    }\n    correctValidationIssue(guid, propertyName, data) {\n        this.viewDesignerFacade.selectComponent(guid);\n        // need to wait until inspector will be visible\n        // there are no way to focus to invisible elements\n        setTimeout(() => this.inspectorFocusEditorSubject.next({ editorName: propertyName, data }), 10);\n    }\n    revertCustomization() {\n        this.viewDefinitionName$\n            .pipe(switchMap((viewDefinitionName) => this.rxViewDefinitionService.revertCustomization(viewDefinitionName)), takeUntil(this.destroyed$))\n            .subscribe(() => {\n            this.rxComponentCanDeactivateGuard.disable();\n            window.location.reload();\n        });\n    }\n    onViewPropertiesChange(properties) {\n        this.viewDesignerFacade.updateViewProperties(properties);\n    }\n    showPreview() {\n        this.viewDesignerFacade.runPreview();\n    }\n    canDeactivate() {\n        let canDeactivate = true;\n        combineLatest([this.isViewDefinitionChanged$, this.isReadOnly$])\n            .pipe(map$1(([isChanged, isReadOnly]) => !isChanged || isReadOnly), take(1))\n            .subscribe((isPristineOrReadOnly) => {\n            canDeactivate = isPristineOrReadOnly;\n        });\n        return canDeactivate;\n    }\n    onBeforeComponentDropInRoot(event) {\n        if (this.isExtensionView) {\n            if (!this.isExtensionContainerSet) {\n                this.rxNotificationService.addWarningMessage('Select Extension container before adding view components.');\n                event.preventDrop = true;\n            }\n            else if (event.draggedViewComponentDescriptor.type !== RxViewComponentType.RecordEditor) {\n                this.rxNotificationService.addWarningMessage('This view component can only be added inside a Record editor.');\n                event.preventDrop = true;\n            }\n        }\n    }\n}\nRxViewDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerComponent, deps: [{ token: ViewDesignerFacade }, { token: i3.RxNotificationService }, { token: i3$1.RxDefinitionPickerCacheService }, { token: i4$2.RxNamedListDefinitionCacheService }, { token: i5$1.RxModalService }, { token: i6.TranslateService }, { token: i5$1.RxUtilityModalsService }, { token: RxViewDesignerHelperService }, { token: i3$1.RxExpressionEditorService }, { token: i5.RxViewDefinitionService }, { token: i3.RxComponentCanDeactivateGuard }, { token: RxViewDefinitionGeneratorService }, { token: RxViewDesignerModels }, { token: i3.RxLogService }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i11.RxRecordDefinitionCacheService }, { token: i12.RxAssociationDefinitionCacheService }, { token: i13.RxProcessDefinitionCacheService }, { token: i5.RxViewDefinitionCacheService }, { token: i3$1.RxGainsightConfiguratorService }, { token: i3.RxDefinitionNameService }, { token: i3.RxFeatureService }], target: i0.ɵɵFactoryTarget.Component });\nRxViewDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RxViewDesignerComponent, selector: \"rx-view-designer\", inputs: { configuration: \"configuration\" }, outputs: { viewDefinitionSaved: \"viewDefinitionSaved\", viewDefinitionErrorLoading: \"viewDefinitionErrorLoading\", closeDesigner: \"closeDesigner\" }, providers: [RxViewModel], viewQueries: [{ propertyName: \"viewPropertyInspectorElementRef\", first: true, predicate: [\"viewPropertyInspector\"], descendants: true, read: ElementRef }, { propertyName: \"viewComponentPropertyInspectorElementRef\", first: true, predicate: [\"viewComponentPropertyInspector\"], descendants: true, read: ElementRef }], usesOnChanges: true, ngImport: i0, template: \"<rx-designer-header\\n  [bundleName]=\\\"viewDesignerFacade.bundleFriendlyName$ | async\\\"\\n  [breadcrumbItems]=\\\"breadcrumbItems$ | async\\\"\\n  [isDesignMode]=\\\"isDesignMode\\\"\\n  [isPreviewAvailable]=\\\"isPreviewAvailable$ | async\\\"\\n  [isSaveButtonDisabled]=\\\"isSaveButtonDisabled$ | async\\\"\\n  (breadcrumbSelected)=\\\"onSelectComponent($event.data.guid)\\\"\\n  (toggleDesignMode)=\\\"toggleDesignMode()\\\"\\n  (showPreview)=\\\"showPreview()\\\"\\n  (save)=\\\"saveViewDefinition()\\\"\\n  (closeDesigner)=\\\"closeDesigner.emit()\\\"\\n></rx-designer-header>\\n\\n<div class=\\\"rx-component-view-designer\\\" [hidden]=\\\"!isDesignMode\\\">\\n  <rx-blade\\n    [title]=\\\"'Palette'\\\"\\n    rx-id=\\\"palette\\\"\\n    (toggle)=\\\"isStencilExpanded = !isStencilExpanded\\\"\\n    [isExpanded]=\\\"isStencilExpanded\\\"\\n  >\\n    <rx-view-designer-palette\\n      *ngIf=\\\"!isPageView && !(isReadOnly$ | async)\\\"\\n      [components]=\\\"paletteComponents$ | async\\\"\\n      [allowedDropListIds]=\\\"canvasDndListIds\\\"\\n    ></rx-view-designer-palette>\\n\\n    <adapt-alert\\n      *ngIf=\\\"isPageView && !(isReadOnly$ | async)\\\"\\n      class=\\\"p-3\\\"\\n      [config]=\\\"{\\n        content:\\n          'There are no view components to display. View with a Page view component cannot contain any other view components.',\\n        variant: 'info',\\n        type: 'inline'\\n      }\\\"\\n    ></adapt-alert>\\n\\n    <adapt-alert\\n      *ngIf=\\\"!(viewDesignerFacade.isViewDefinitionLoading$ | async) && isReadOnly$ | async\\\"\\n      class=\\\"p-3\\\"\\n      [config]=\\\"{\\n        content: 'This view is not editable. There are no view components to display.',\\n        variant: 'info',\\n        type: 'inline'\\n      }\\\"\\n    ></adapt-alert>\\n  </rx-blade>\\n\\n  <section class=\\\"rx-view-designer-container\\\">\\n    <rx-view-designer-canvas\\n      class=\\\"flex-grow-1\\\"\\n      [layout]=\\\"canvasLayout$ | async\\\"\\n      [isReadOnly]=\\\"isReadOnly$ | async\\\"\\n      (componentSelect)=\\\"onSelectComponent($event)\\\"\\n      (componentRemove)=\\\"onRemoveComponent($event)\\\"\\n      (componentDrop)=\\\"onDropComponent($event)\\\"\\n      (beforeComponentDropInRoot)=\\\"onBeforeComponentDropInRoot($event)\\\"\\n    ></rx-view-designer-canvas>\\n  </section>\\n\\n  <rx-blade\\n    [title]=\\\"'Properties'\\\"\\n    dockTo=\\\"right\\\"\\n    rx-id=\\\"properties\\\"\\n    (toggle)=\\\"isInspectorExpanded = !isInspectorExpanded\\\"\\n    [isExpanded]=\\\"isInspectorExpanded\\\"\\n  >\\n    <adapt-tabset\\n      [tab-active]=\\\"viewDesignerFacade.selectedInspectorTabId$ | async\\\"\\n      (tab-active-changed)=\\\"onInspectorTabChange($event)\\\"\\n      [class.has-validation-warning]=\\\"hasValidationWarning$ | async\\\"\\n      [class.has-validation-errors]=\\\"hasValidationErrors$ | async\\\"\\n      customCssTabContent=\\\"p-0\\\"\\n      justify=\\\"justified\\\"\\n    >\\n      <adapt-tab-panel icon=\\\"d-icon-pencil\\\">\\n        <rx-form-builder\\n          #viewPropertyInspector\\n          (modelChange)=\\\"onViewPropertiesChange($event)\\\"\\n          (editorEvent)=\\\"onEditorEvent($event, viewPropertyInspectorElementRef)\\\"\\n          [focusEditor$]=\\\"inspectorFocusEditor$\\\"\\n          [config]=\\\"viewDesignerFacade.viewInspectorLayout$ | async\\\"\\n          [model]=\\\"viewDesignerFacade.viewModel$ | async\\\"\\n          [isReadOnly]=\\\"isReadOnly$ | async\\\"\\n        ></rx-form-builder>\\n      </adapt-tab-panel>\\n\\n      <adapt-tab-panel icon=\\\"d-icon-gear\\\">\\n        <rx-form-builder\\n          rxInspector\\n          [designerItemModel]=\\\"selectedComponentModel$ | async\\\"\\n          #viewComponentPropertyInspector\\n          (modelChange)=\\\"onComponentPropertiesChange($event)\\\"\\n          (editorEvent)=\\\"onEditorEvent($event, viewComponentPropertyInspectorElementRef)\\\"\\n          [focusEditor$]=\\\"inspectorFocusEditor$\\\"\\n          [config]=\\\"viewDesignerFacade.selectedComponentInspectorLayout$ | async\\\"\\n          [model]=\\\"viewDesignerFacade.selectedComponentProperties$ | async\\\"\\n          [guid]=\\\"viewDesignerFacade.selectedComponentGuid$ | async\\\"\\n          [isReadOnly]=\\\"isReadOnly$ | async\\\"\\n        ></rx-form-builder>\\n\\n        <adapt-alert\\n          [hidden]=\\\"!(viewComponentInspectorEmptyText$ | async)\\\"\\n          class=\\\"p-3\\\"\\n          [config]=\\\"{\\n            content: viewComponentInspectorEmptyText$ | async,\\n            variant: 'info',\\n            type: 'inline'\\n          }\\\"\\n        ></adapt-alert>\\n      </adapt-tab-panel>\\n\\n      <adapt-tab-panel icon=\\\"d-icon-exclamation_triangle\\\">\\n        <rx-validation-issues\\n          [definitionTypeDisplayName]=\\\"'com.bmc.arsys.rx.client.view-definition.label' | translate\\\"\\n          (correctIssue)=\\\"onCorrectIssue($event)\\\"\\n          [issueSections]=\\\"validationIssues$ | async\\\"\\n        ></rx-validation-issues>\\n      </adapt-tab-panel>\\n    </adapt-tabset>\\n  </rx-blade>\\n</div>\\n\\n<adapt-code-viewer\\n  *ngIf=\\\"!isDesignMode\\\"\\n  [code]=\\\"viewDesignerFacade.viewDefinition$ | async | json\\\"\\n  [lang]=\\\"'javascript'\\\"\\n  [hasToolbar]=\\\"false\\\"\\n  [theme]=\\\"'light'\\\"\\n  class=\\\"full-size\\\"\\n>\\n</adapt-code-viewer>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}:host{display:flex;flex-direction:column;height:100%;width:100%}.rx-component-view-designer{display:flex;flex-grow:1;height:calc(100% - 50px);overflow:hidden}.rx-view-designer-container{display:flex;flex-direction:column;flex-grow:1;overflow:auto;padding:2.2rem 1rem 1rem}:host ::ng-deep .has-validation-warning:not(.has-validation-errors) .nav-link .d-icon-exclamation_triangle{color:#f1b521}:host ::ng-deep .has-validation-errors .nav-link .d-icon-exclamation_triangle{color:#f83200}:host ::ng-deep adapt-tabset .nav-tabs .nav-link-icon{margin-right:0}\\n\"], components: [{ type: i3$1.RxDesignerHeaderComponent, selector: \"rx-designer-header\", inputs: [\"bundleName\", \"breadcrumbItems\", \"isDesignMode\", \"isPreviewAvailable\", \"isSaveButtonDisabled\"], outputs: [\"breadcrumbSelected\", \"toggleDesignMode\", \"showPreview\", \"save\", \"closeDesigner\"] }, { type: i5$1.RxBladeComponent, selector: \"rx-blade\", inputs: [\"title\", \"isExpanded\", \"dockTo\"], outputs: [\"toggle\"] }, { type: ViewDesignerPaletteComponent, selector: \"rx-view-designer-palette\", inputs: [\"components\", \"allowedDropListIds\"] }, { type: i3$3.AdaptAlertComponent, selector: \"adapt-alert\", inputs: [\"config\"], outputs: [\"onClose\"] }, { type: ViewDesignerCanvasComponent, selector: \"rx-view-designer-canvas\", inputs: [\"layout\", \"isReadOnly\"], outputs: [\"componentSelect\", \"componentDrop\", \"componentRemove\", \"beforeComponentDropInRoot\"] }, { type: i3$3.AdaptTabsComponent, selector: \"adapt-tabset\", inputs: [\"showTabToolbar\", \"customCssTabContent\", \"fullHeight\", \"texts\", \"enableDnD\", \"customClassTabList\", \"allow-tabs-adding\", \"id\", \"testID\", \"dropdown-title\", \"fadeColor\", \"carouselMode\", \"justify\", \"type\", \"tab-active\"], outputs: [\"tab-index-closed\", \"tab-active-changed\", \"add-tab-clicked\", \"tabClicked\", \"tabDropped\"], exportAs: [\"adaptTabset\"] }, { type: i3$3.AdaptTabsPanelComponent, selector: \"adapt-tab-panel, div[tab-panel]\", inputs: [\"isActive\", \"badge-type\", \"animateBadge\", \"showBadgeAlert\", \"badgeAlertVariant\", \"badgeCustomClass\", \"adapt-tab-title\", \"disabled\", \"isHidden\", \"icon\", \"subtext\", \"icon-right\", \"icon-close\", \"aria-label\", \"aria-labelledby\", \"kebabMenu\", \"id\", \"renderContentWhenInactive\", \"badge\"] }, { type: i3$1.FormBuilderComponent, selector: \"rx-form-builder\", inputs: [\"config\", \"model\", \"guid\", \"isReadOnly\", \"focusEditor$\"], outputs: [\"modelChange\", \"editorEvent\", \"formInitialized\"] }, { type: i5$1.RxValidationIssuesComponent, selector: \"rx-validation-issues\", inputs: [\"definitionTypeDisplayName\", \"issueSections\"], outputs: [\"correctIssue\"] }, { type: i3$3.AdaptCodeViewerComponent, selector: \"adapt-code-viewer\", inputs: [\"code\", \"theme\", \"lang\", \"texts\", \"hasToolbar\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$1.InspectorDirective, selector: \"[rxInspector]\", inputs: [\"designerItemModel\"] }], pipes: { \"async\": i4.AsyncPipe, \"translate\": i6.TranslatePipe, \"json\": i4.JsonPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-designer',\n                    templateUrl: './view-designer.component.html',\n                    styleUrls: ['./view-designer.component.scss'],\n                    providers: [RxViewModel]\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }, { type: i3.RxNotificationService }, { type: i3$1.RxDefinitionPickerCacheService }, { type: i4$2.RxNamedListDefinitionCacheService }, { type: i5$1.RxModalService }, { type: i6.TranslateService }, { type: i5$1.RxUtilityModalsService }, { type: RxViewDesignerHelperService }, { type: i3$1.RxExpressionEditorService }, { type: i5.RxViewDefinitionService }, { type: i3.RxComponentCanDeactivateGuard }, { type: RxViewDefinitionGeneratorService }, { type: RxViewDesignerModels }, { type: i3.RxLogService }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i11.RxRecordDefinitionCacheService }, { type: i12.RxAssociationDefinitionCacheService }, { type: i13.RxProcessDefinitionCacheService }, { type: i5.RxViewDefinitionCacheService }, { type: i3$1.RxGainsightConfiguratorService }, { type: i3.RxDefinitionNameService }, { type: i3.RxFeatureService }]; }, propDecorators: { configuration: [{\n                type: Input\n            }], viewDefinitionSaved: [{\n                type: Output\n            }], viewDefinitionErrorLoading: [{\n                type: Output\n            }], closeDesigner: [{\n                type: Output\n            }], viewPropertyInspectorElementRef: [{\n                type: ViewChild,\n                args: ['viewPropertyInspector', { read: ElementRef }]\n            }], viewComponentPropertyInspectorElementRef: [{\n                type: ViewChild,\n                args: ['viewComponentPropertyInspector', { read: ElementRef }]\n            }] } });\n\nclass ViewDesignerCanvasModule {\n}\nViewDesignerCanvasModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewDesignerCanvasModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasModule, declarations: [ViewDesignerCanvasComponent,\n        CanvasItemComponent,\n        CanvasItemContainerComponent,\n        CanvasOutletComponent,\n        CanvasItemColumnComponent], imports: [CommonModule, DragDropModule], exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent] });\nViewDesignerCanvasModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasModule, imports: [[CommonModule, DragDropModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerCanvasModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, DragDropModule],\n                    exports: [ViewDesignerCanvasComponent, CanvasOutletComponent, CanvasItemComponent, CanvasItemColumnComponent],\n                    declarations: [\n                        ViewDesignerCanvasComponent,\n                        CanvasItemComponent,\n                        CanvasItemContainerComponent,\n                        CanvasOutletComponent,\n                        CanvasItemColumnComponent\n                    ],\n                    entryComponents: [CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasItemColumnComponent]\n                }]\n        }] });\n\nclass DesignerModule {\n}\nDesignerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDesignerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerModule, declarations: [DesignerComponent], imports: [ViewDesignerCanvasModule, CommonModule] });\nDesignerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerModule, imports: [[ViewDesignerCanvasModule, CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: DesignerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ViewDesignerCanvasModule, CommonModule],\n                    declarations: [DesignerComponent],\n                    entryComponents: [DesignerComponent]\n                }]\n        }] });\n\nclass RxViewDesignerPaletteModule {\n}\nRxViewDesignerPaletteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerPaletteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRxViewDesignerPaletteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerPaletteModule, declarations: [ViewDesignerPaletteComponent], imports: [CommonModule,\n        DragDropModule,\n        ReactiveFormsModule,\n        AdaptAccordionModule,\n        AdaptTextFieldModule,\n        AdaptRxSearchModule], exports: [ViewDesignerPaletteComponent] });\nRxViewDesignerPaletteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerPaletteModule, imports: [[\n            CommonModule,\n            DragDropModule,\n            ReactiveFormsModule,\n            AdaptAccordionModule,\n            AdaptTextFieldModule,\n            AdaptRxSearchModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerPaletteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        DragDropModule,\n                        ReactiveFormsModule,\n                        AdaptAccordionModule,\n                        AdaptTextFieldModule,\n                        AdaptRxSearchModule\n                    ],\n                    exports: [ViewDesignerPaletteComponent],\n                    declarations: [ViewDesignerPaletteComponent]\n                }]\n        }] });\n\nclass RuntimeViewParamsModalComponent extends RxModalClass {\n    constructor(activeModalRef, injector) {\n        super(activeModalRef, injector);\n        this.activeModalRef = activeModalRef;\n        this.injector = injector;\n        this.inputParams = {};\n        this.inputParamNames = this.activeModalRef.getData().inputParams;\n    }\n    isDirty() {\n        return values(this.inputParams).some((paramValue) => paramValue);\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n}\nRuntimeViewParamsModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalComponent, deps: [{ token: i3$3.ActiveModalRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nRuntimeViewParamsModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RuntimeViewParamsModalComponent, selector: \"rx-runtime-view-params-modal\", usesInheritance: true, ngImport: i0, template: \"<div class=\\\"modal-body\\\">\\n  <div *ngFor=\\\"let inputParam of inputParamNames; first as isFirst; index as i\\\">\\n    <adapt-rx-textfield\\n      [attr.rx-id]=\\\"'input-param-' + (i + 1)\\\"\\n      [label]=\\\"inputParam\\\"\\n      [autofocus]=\\\"isFirst\\\"\\n      [(ngModel)]=\\\"inputParams[inputParam]\\\"\\n    >\\n    </adapt-rx-textfield>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <adapt-button btn-type=\\\"primary\\\" (click)=\\\"activeModalRef.close(inputParams)\\\" rx-id=\\\"ok-button\\\">\\n    OK\\n  </adapt-button>\\n\\n  <adapt-button btn-type=\\\"secondary\\\" (click)=\\\"cancel()\\\" rx-id=\\\"cancel-button\\\"> Cancel </adapt-button>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.modal-body{padding:20px}.modal-footer{display:flex;justify-content:flex-end;border-top:1px solid #d6d7d8;padding:10px 15px}.modal-footer adapt-button{margin-right:5px}\\n\"], components: [{ type: i3$3.AdaptRxTextfieldComponent, selector: \"adapt-rx-textfield\", inputs: [\"prepend\", \"append\", \"isPassword\", \"autocomplete\", \"placeholder\", \"size\", \"fieldTagText\", \"fieldTagType\", \"showValidState\", \"showValidStateIcon\", \"showInvalidStateIcon\", \"validStateMessage\", \"disabledStyleForReadonlyState\"] }, { type: i3$3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-runtime-view-params-modal',\n                    templateUrl: './runtime-view-params-modal.component.html',\n                    styleUrls: ['./runtime-view-params-modal.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: i3$3.ActiveModalRef }, { type: i0.Injector }]; } });\n\nclass RuntimeViewParamsModalModule {\n}\nRuntimeViewParamsModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRuntimeViewParamsModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalModule, declarations: [RuntimeViewParamsModalComponent], imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule], exports: [RuntimeViewParamsModalComponent] });\nRuntimeViewParamsModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalModule, imports: [[CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RuntimeViewParamsModalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule, AdaptButtonModule, AdaptModalModule, AdaptRxTextfieldModule],\n                    exports: [RuntimeViewParamsModalComponent],\n                    declarations: [RuntimeViewParamsModalComponent],\n                    entryComponents: [RuntimeViewParamsModalComponent]\n                }]\n        }] });\n\nclass RxViewActionExpressionConfigurator extends RxViewExpressionConfigurator {\n    constructor(injector, actionType, actionGuid) {\n        super(injector);\n        this.injector = injector;\n        this.actionType = actionType;\n        this.actionGuid = actionGuid;\n        this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n        this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n        this.rxViewActionRegistryService = this.injector.get(RxViewActionRegistryService);\n        this.commonDataDictionary$ = this.rxViewDataDictionaryService.getActionDataDictionary(this.actionGuid);\n    }\n    getExpressionEvaluator(propertyName) {\n        const propertyDescriptor = this.rxViewActionRegistryService\n            .get(this.actionType)\n            .parameters.find((param) => param.name === propertyName);\n        return get(propertyDescriptor, 'evaluatorService', this.rxDefaultExpressionEvaluatorService);\n    }\n}\n\nclass NamedListFilterExpressionConfigurator extends RxViewExpressionConfigurator {\n    constructor(fieldDefinition, injector) {\n        super(injector);\n        this.fieldDefinition = fieldDefinition;\n        this.injector = injector;\n        this.rxNamedListDefinitionCacheService = this.injector.get(RxNamedListDefinitionCacheService);\n        this.rxRecordDefinitionCacheService = this.injector.get(RxRecordDefinitionCacheService);\n        this.rxViewDataDictionaryService = this.injector.get(RxViewDataDictionaryService);\n        this.rxDefaultExpressionEvaluatorService = this.injector.get(RxDefaultExpressionEvaluatorService);\n        this.commonDataDictionary$ = this.rxNamedListDefinitionCacheService\n            .getNamedListDefinition(this.fieldDefinition.namedListDefinition)\n            .pipe(switchMap((namedListDefinition) => this.rxRecordDefinitionCacheService.getRecordDefinition(namedListDefinition.recordDefinitionName)), switchMap((recordDefinition) => this.getNamedListBranch(recordDefinition)), withLatestFrom(this.rxViewDataDictionaryService.getCommonDataDictionary()), map$1(([namedListBranch, dataDictionary]) => [namedListBranch, ...dataDictionary]));\n    }\n    getExpressionEvaluator() {\n        return this.rxDefaultExpressionEvaluatorService;\n    }\n    getDefaultConfig() {\n        return Object.assign(Object.assign({}, super.getDefaultConfig()), { operators: ExpressionOperatorRowsByGroup.get(ExpressionOperatorGroup.AllServer) });\n    }\n    getNamedListBranch(recordDefinition) {\n        const namedListDictionaryNodes = chain(recordDefinition.fieldDefinitions)\n            .reject({ resourceType: RX_RECORD_DEFINITION.resourceTypes.attachment })\n            .map((fieldDefinition) => ({\n            label: fieldDefinition.name,\n            expression: `'${fieldDefinition.id}'`,\n            icon: 'd-icon-file_o_gear',\n            children: fieldDefinition.resourceType === RX_RECORD_DEFINITION.resourceTypes.selection\n                ? [\n                    {\n                        label: 'Options',\n                        children: map(fieldDefinition.optionNamesById, (optionName, optionValue) => ({\n                            label: optionName,\n                            expression: optionValue,\n                            icon: 'd-icon-file_o_gear'\n                        }))\n                    }\n                ]\n                : []\n        }))\n            .sortBy('label')\n            .value();\n        return of({\n            label: 'Filter by',\n            expanded: true,\n            children: namedListDictionaryNodes\n        });\n    }\n}\n\nclass ActionSandbox {\n    constructor(injector, descriptor, guid, initialProps) {\n        this.injector = injector;\n        this.descriptor = descriptor;\n        this.guid = guid;\n        this.initialProps = initialProps;\n        this.destroyedSubject = new Subject();\n        this.viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n        this.actionPropertyEditorConfigSubject = new BehaviorSubject([]);\n        this.actionPropertiesSubject = new BehaviorSubject(this.initialProps);\n        this.children = [];\n        this.children$ = this.viewDesignerFacade.getChildComponents(this.guid);\n        this.destroyed$ = this.destroyedSubject.asObservable();\n        this.actionPropertyEditorConfig$ = this.actionPropertyEditorConfigSubject.pipe(takeUntil(this.destroyed$));\n        this.actionProperties$ = this.actionPropertiesSubject.pipe(map$1(() => omit(this.getActionProperties(), ['name'])), distinctUntilChanged(isEqual), takeUntil(this.destroyed$));\n        this.children$.pipe(first(), takeUntil(this.destroyed$)).subscribe((children) => {\n            this.setChildren(children);\n        });\n    }\n    updateActionProperties(props) {\n        this.actionPropertiesSubject.next(Object.assign(Object.assign({}, this.actionPropertiesSubject.getValue()), props));\n    }\n    setActionProperties(props) {\n        const { name, index } = this.actionPropertiesSubject.getValue();\n        this.actionPropertiesSubject.next(Object.assign(Object.assign({ $condition$: null }, props), { name,\n            index }));\n    }\n    getActionProperties() {\n        return this.actionPropertiesSubject.getValue();\n    }\n    getActionPropertyValue(propertyName) {\n        return this.actionPropertiesSubject.getValue()[propertyName];\n    }\n    setActionPropertyEditorConfig(actionEditorConfig) {\n        const expressionConfigurator = new RxViewActionExpressionConfigurator(this.injector, this.descriptor.name, this.guid);\n        actionEditorConfig = [\n            {\n                name: '$condition$',\n                component: ExpressionFormControlComponent,\n                options: {\n                    label: 'Condition',\n                    tooltip: new Tooltip('The action will execute if the condition is true, or if no condition is defined.'),\n                    dataDictionary$: expressionConfigurator.getDataDictionary(),\n                    operators: expressionConfigurator.getOperators()\n                }\n            },\n            ...actionEditorConfig\n        ];\n        this.actionPropertyEditorConfigSubject.next(actionEditorConfig);\n    }\n    getActionPropertyEditorConfig() {\n        return this.actionPropertyEditorConfigSubject.getValue();\n    }\n    setActionOutputDataDictionary(dataDictionary) {\n        // check why index is coming as a string for existing actions\n        this.viewDesignerFacade.setActionDataDictionaryBranch(this.guid, this.getActionPropertyValue('index'), this.descriptor.label, dataDictionary);\n    }\n    setChildren(data) {\n        this.children = data;\n    }\n    getChildren() {\n        return this.children;\n    }\n    onDestroy() {\n        this.destroyedSubject.next();\n        this.destroyedSubject.complete();\n    }\n}\n\nclass RxViewDesignerActionModel {\n    constructor(injector, sandbox) {\n        this.injector = injector;\n        this.sandbox = sandbox;\n        this.guid = this.sandbox.guid;\n        this.expressionConfigurator = new RxViewActionExpressionConfigurator(this.injector, this.sandbox.descriptor.name, this.sandbox.guid);\n    }\n    getExpressionConfigurator() {\n        return this.expressionConfigurator;\n    }\n    getPropertiesByName() {\n        return this.sandbox.getActionProperties();\n    }\n    getChildren() {\n        return this.sandbox.getChildren();\n    }\n    getOutputExpressionForPropertyPath(propertyPath) {\n        return `\\${view.components.${this.guid}.output.${propertyPath}}`;\n    }\n}\n\nclass RxViewDesignerDefaultActionModel extends RxViewDesignerActionModel {\n    constructor(injector, sandbox) {\n        super(injector, sandbox);\n        this.injector = injector;\n        this.sandbox = sandbox;\n        this.defaultProps = this.sandbox.descriptor.parameters.reduce((initialProps, param) => {\n            initialProps[param.name] = param.defaultValue;\n            return initialProps;\n        }, {});\n        this.sandbox.actionProperties$.pipe(take(1)).subscribe((props) => {\n            this.sandbox.updateActionProperties(Object.assign(Object.assign({}, this.defaultProps), props));\n            this.sandbox.setActionPropertyEditorConfig(this.getActionEditorConfig());\n        });\n    }\n    getActionEditorConfig() {\n        return this.sandbox.descriptor.parameters\n            .filter((param) => param.editor)\n            .map((param) => ({\n            name: param.name,\n            component: param.editor,\n            options: Object.assign({ label: param.label, isRequired: param.isRequired, tooltip: param.tooltip }, (param.editor === ExpressionFormControlComponent\n                ? {\n                    dataDictionary$: this.expressionConfigurator.getDataDictionary(param.name),\n                    operators: this.expressionConfigurator.getOperators(param.name)\n                }\n                : param.editorOptions || {}))\n        }));\n    }\n}\n\nclass RxActionListModelManagerService {\n    constructor(injector) {\n        this.injector = injector;\n        this.models = new Map();\n    }\n    create(descriptor, guid, initialProps) {\n        var _a;\n        const sandbox = new ActionSandbox(this.injector, descriptor, guid, isFunction((_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.designModel) === null || _a === void 0 ? void 0 : _a.getInitialProperties)\n            ? Object.assign(Object.assign({}, descriptor.designModel.getInitialProperties(omit(initialProps, ['index', 'name']))), { name: initialProps.name, index: initialProps.index }) : initialProps);\n        const Model = descriptor.designModel || RxViewDesignerDefaultActionModel;\n        const actionModel = new Model(this.injector, sandbox);\n        this.models.set(guid, actionModel);\n        return actionModel;\n    }\n    remove(guid) {\n        this.models.delete(guid);\n    }\n    get(guid) {\n        return this.models.get(guid);\n    }\n    ngOnDestroy() {\n        this.models.forEach((model) => model.sandbox.onDestroy());\n        this.models.clear();\n    }\n}\nRxActionListModelManagerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxActionListModelManagerService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxActionListModelManagerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxActionListModelManagerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxActionListModelManagerService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass ActionListEditorDialogComponent extends RxModalClass {\n    constructor(rxViewActionRegistryService, rxStringService, activeModalRef, viewDesignerFacade, rxActionListModelManagerService, rxExpressionEditorService, rxGuidService, translateService, injector) {\n        super(activeModalRef, injector);\n        this.rxViewActionRegistryService = rxViewActionRegistryService;\n        this.rxStringService = rxStringService;\n        this.activeModalRef = activeModalRef;\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxActionListModelManagerService = rxActionListModelManagerService;\n        this.rxExpressionEditorService = rxExpressionEditorService;\n        this.rxGuidService = rxGuidService;\n        this.translateService = translateService;\n        this.injector = injector;\n        this.availableActionDescriptors$ = this.rxViewActionRegistryService.getLicensedActions();\n        this.selectedActions = [];\n        this.config = this.activeModalRef.getData();\n        this.treeWrap = TreeWrap.WrapAll;\n        this.destroyed$ = new ReplaySubject(1);\n        this.isEditorDirtySubject = new BehaviorSubject(false);\n        this.isSaveButtonDisabled$ = this.isEditorDirtySubject.asObservable().pipe(map$1((isDirty) => !isDirty));\n        this.availableActionTreeNodes$ = this.availableActionDescriptors$.pipe(map$1((actions) => actions\n            .filter((action) => !action.hidden)\n            .sort((a, b) => a.label.localeCompare(b.label))\n            .map((action) => ({\n            data: action,\n            label: action.label\n        }))));\n        this.actionLabelsMap$ = this.availableActionDescriptors$.pipe(map$1((actions) => transform(actions, (result, action) => {\n            result[action.name] = action.label;\n        }, {})));\n        this.config.selectedActions = map(this.config.selectedActions, (action) => (Object.assign(Object.assign({}, action), { data: Object.assign(Object.assign({}, action.data), { index: toNumber(action.data.index) }) })));\n        this.selectedActions = flow((actions) => sortBy(actions, (action) => action.data.index), (actions) => map(actions, (action) => {\n            const descriptor = this.rxViewActionRegistryService.get(action.data.name);\n            this.viewDesignerFacade.setActionDataDictionaryBranch(action.guid, action.data.index, action.data.name);\n            const model = this.rxActionListModelManagerService.create(descriptor, action.guid, action.data);\n            return {\n                isOpen: Boolean(this.config.actionToEdit) && action.guid === this.config.actionToEdit.guid,\n                model,\n                config$: model.sandbox.actionPropertyEditorConfig$.pipe(map$1((config) => [{ controls: config }])),\n                name: descriptor.name\n            };\n        }))(this.config.selectedActions);\n    }\n    isDirty() {\n        return this.isEditorDirtySubject.getValue();\n    }\n    addAction(actionDescriptor, index = this.selectedActions.length) {\n        const guid = this.rxGuidService.generate();\n        this.viewDesignerFacade.setActionDataDictionaryBranch(guid, index, actionDescriptor.name);\n        const model = this.rxActionListModelManagerService.create(actionDescriptor, guid, {\n            name: actionDescriptor.name,\n            index\n        });\n        this.selectedActions.splice(index, 0, {\n            isOpen: true,\n            model,\n            config$: model.sandbox.actionPropertyEditorConfig$.pipe(map$1((config) => [{ controls: config }])),\n            name: actionDescriptor.name\n        });\n        this.updateIndexProp();\n        this.markEditorAsDirty();\n        setTimeout(() => {\n            this.accordionTabEls.toArray()[index].nativeElement.scrollIntoView({\n                block: 'nearest'\n            });\n        });\n    }\n    onSave() {\n        const result = this.selectedActions.map((action) => {\n            var _a, _b, _c;\n            return ({\n                guid: action.model.guid,\n                data: action.model.getPropertiesByName(),\n                children: (_c = (_b = (_a = action.model).getChildren) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : null\n            });\n        });\n        this.activeModalRef.close(result);\n    }\n    removeAction(action) {\n        pull(this.selectedActions, action);\n        this.rxActionListModelManagerService.remove(action.model.guid);\n        this.viewDesignerFacade.removeActionDataDictionaryBranch(action.model.guid);\n        this.markEditorAsDirty();\n    }\n    moveAction(fromIndex, toIndex) {\n        moveItemInArray(this.selectedActions, fromIndex, toIndex);\n        this.updateIndexProp();\n        this.markEditorAsDirty();\n    }\n    toggleOpen(expandAll) {\n        this.selectedActions.forEach((action) => (action.isOpen = expandAll));\n    }\n    onSelectedActionsListDrop(event) {\n        var _a;\n        const data = event.item.data;\n        if ((_a = data.model) === null || _a === void 0 ? void 0 : _a.guid) {\n            this.moveAction(event.previousIndex, event.currentIndex);\n        }\n        else {\n            this.addAction(data, event.currentIndex);\n        }\n    }\n    openExpressionEditor(model, propertyPath, propertyLabel, isReadOnly = false, element) {\n        this.rxExpressionEditorService\n            .openEditor({\n            property: {\n                path: propertyPath,\n                value: get(model.sandbox.getActionProperties(), propertyPath),\n                label: propertyLabel\n            },\n            isReadOnly,\n            expressionConfigurator: model.getExpressionConfigurator(),\n            legend: [\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.function.label'),\n                    icon: 'd-icon-mathematical_function'\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.keyword.label'),\n                    icon: 'd-icon-dollar'\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component.label'),\n                    icon: 'd-icon-file_o'\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-component-property.label'),\n                    icon: 'd-icon-file_o_gear'\n                },\n                {\n                    label: this.translateService.instant('com.bmc.arsys.rx.client.expression-editor.legend.view-input-parameter.label'),\n                    icon: 'd-icon-arrow_right_square_input'\n                }\n            ],\n            expressionPropertyNavigator: {\n                getProperties: () => {\n                    const properties = Array.from(element.querySelectorAll('rx-expression-form-control')).map((controlElement) => {\n                        const path = controlElement.getAttribute('property-path');\n                        return {\n                            path,\n                            value: get(model.sandbox.getActionProperties(), path),\n                            label: controlElement.getAttribute('property-label')\n                        };\n                    });\n                    return of(properties);\n                }\n            }\n        })\n            .pipe(map$1(({ path, value }) => {\n            const props = model.sandbox.getActionProperties();\n            const headPropertyName = path in props ? path : toPath(path)[0];\n            return set({ [headPropertyName]: cloneDeep(props[headPropertyName]) }, path, value);\n        }))\n            .subscribe((props) => {\n            model.sandbox.updateActionProperties(props);\n            this.markEditorAsDirty();\n        });\n    }\n    onEvent(event, model, element) {\n        if (event.type === RX_EXPRESSION_EDITOR.events.openExpressionEditor) {\n            this.openExpressionEditor(model, event.payload.propertyPath, event.payload.propertyLabel, event.payload.isReadOnly, element);\n        }\n    }\n    updateIndexProp() {\n        this.selectedActions.forEach((action, index) => {\n            action.model.sandbox.updateActionProperties({\n                index\n            });\n        });\n        this.viewDesignerFacade.updateActionDataDictionaryBranchOrder(this.selectedActions.reduce((result, action, index) => {\n            result[action.model.guid] = index;\n            return result;\n        }, {}));\n    }\n    markEditorAsDirty() {\n        this.isEditorDirtySubject.next(true);\n    }\n    ngAfterViewInit() {\n        const openActionIndex = findIndex(this.selectedActions, 'isOpen');\n        if (openActionIndex !== -1) {\n            this.accordionTabEls.toArray()[openActionIndex].nativeElement.scrollIntoView({\n                block: 'nearest'\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.isEditorDirtySubject.complete();\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n        this.viewDesignerFacade.removeAllActionDataDictionaryBranches();\n    }\n    cancel() {\n        this.activeModalRef.dismiss(DismissReasons.CLOSE_BTN);\n    }\n}\nActionListEditorDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogComponent, deps: [{ token: i5.RxViewActionRegistryService }, { token: i2$1.RxStringService }, { token: i3$3.ActiveModalRef }, { token: ViewDesignerFacade }, { token: RxActionListModelManagerService }, { token: i3$1.RxExpressionEditorService }, { token: i2$1.RxGuidService }, { token: i6.TranslateService }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nActionListEditorDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ActionListEditorDialogComponent, selector: \"rx-action-list-editor-dialog\", providers: [RxActionListModelManagerService], viewQueries: [{ propertyName: \"accordionTabEls\", predicate: AdaptAccordionTabComponent, descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"designer-modal-body modal-body d-flex mh-100\\\">\\n  <div class=\\\"row flex-grow-1 w-100\\\">\\n    <div *ngIf=\\\"!config.isReadOnly\\\" class=\\\"col-4 border-right d-flex flex-column mh-100\\\">\\n      <div class=\\\"d-flex align-items-start justify-content-between\\\">\\n        <h4 class=\\\"mt-2\\\">\\n          {{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.title' | translate }}\\n        </h4>\\n      </div>\\n\\n      <div class=\\\"rx-card card flex-grow-1 mt-2\\\">\\n        <div class=\\\"card-block\\\" *ngIf=\\\"availableActionTreeNodes$ | async as availableActionTreeNodes\\\">\\n          <div\\n            *ngIf=\\\"availableActionTreeNodes.length; else adaptTreeEmptyStateTemplate\\\"\\n            cdkDropList\\n            cdkDropListSortingDisabled\\n            [cdkDropListConnectedTo]=\\\"'selected-action-list'\\\"\\n          >\\n            <adapt-tree\\n              [value]=\\\"availableActionTreeNodes\\\"\\n              filter=\\\"true\\\"\\n              [wrap]=\\\"treeWrap\\\"\\n            >\\n              <ng-template let-action adaptTreeNodeTemplate>\\n                <div\\n                  *ngIf=\\\"action.data\\\"\\n                  class=\\\"rx-tree-draggable-node\\\"\\n                  cdkDrag\\n                  [cdkDragData]=\\\"action.data\\\"\\n                >\\n                  <div (dblclick)=\\\"addAction(action.data)\\\">\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"rx-button-unstyled d-icon-plus_circle\\\"\\n                      (click)=\\\"addAction(action.data)\\\"\\n                    ></button>\\n\\n                    <span class=\\\"rx-tree-node-label ml-3\\\">{{ action.data.label }}</span>\\n                  </div>\\n                </div>\\n              </ng-template>\\n            </adapt-tree>\\n          </div>\\n\\n          <ng-template #adaptTreeEmptyStateTemplate>\\n            <div class=\\\"d-flex justify-content-center h-100 align-items-center mt-2\\\">\\n              <adapt-empty-state\\n                class=\\\"w-100\\\"\\n                label=\\\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.available-actions.empty-state.message' | translate }}\\\"\\n                type=\\\"search\\\"\\n              ></adapt-empty-state>\\n            </div>\\n          </ng-template>         \\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex flex-column mh-100 {{ config.isReadOnly ? 'col' : 'col-8' }}\\\">\\n      <div class=\\\"d-flex align-items-start justify-content-between\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <h4 class=\\\"mt-2\\\">\\n            {{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.title' | translate }}\\n          </h4>\\n\\n          <adapt-icon\\n            class=\\\"ml-2\\\"\\n            name=\\\"question_circle_o\\\"\\n            adaptPopover=\\\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.tooltip' | translate }}\\\"\\n            appendToBody=\\\"true\\\"\\n          >\\n          </adapt-icon>\\n        </div>\\n\\n        <div *ngIf=\\\"selectedActions.length\\\" class=\\\"btn-group\\\">\\n          <button\\n            adapt-button\\n            btn-type=\\\"tertiary\\\"\\n            type=\\\"button\\\"\\n            rx-id=\\\"expand-all-button\\\"\\n            (click)=\\\"toggleOpen(true)\\\"\\n          >\\n            {{ 'com.bmc.arsys.rx.client.common.expand-all.label' | translate }}\\n          </button>\\n\\n          <button\\n            adapt-button\\n            btn-type=\\\"tertiary\\\"\\n            type=\\\"button\\\"\\n            rx-id=\\\"collapse-all-button\\\"\\n            (click)=\\\"toggleOpen(false)\\\"\\n          >\\n            {{ 'com.bmc.arsys.rx.client.common.collapse-all.label' | translate }}\\n          </button>\\n        </div>\\n      </div>\\n\\n      <div\\n        id=\\\"selected-action-list\\\"\\n        class=\\\"designer-modal-accordion-wrapper\\\"\\n        cdkDropList\\n        (cdkDropListDropped)=\\\"onSelectedActionsListDrop($event)\\\"\\n      >\\n        <adapt-accordion [multiselect]=\\\"true\\\">\\n          <div\\n            *ngFor=\\\"\\n              let action of selectedActions;\\n              let index = index;\\n              let first = first;\\n              let last = last;\\n            \\\"\\n            class=\\\"designer-modal-accordion-content\\\"\\n            cdkDrag\\n            cdkDragLockAxis=\\\"y\\\"\\n            [cdkDragData]=\\\"action\\\"\\n            [cdkDragDisabled]=\\\"config.isReadOnly\\\"\\n            #container\\n          >\\n            <div *ngIf=\\\"!config.isReadOnly\\\" class=\\\"designer-modal-drag-handle d-icon-left-dots\\\" cdkDragHandle></div>\\n\\n            <adapt-accordion-tab\\n              class=\\\"d-block\\\"\\n              [isOpen]=\\\"action.isOpen\\\"\\n              (open)=\\\"action.isOpen = true\\\"\\n              (close)=\\\"action.isOpen = false\\\"\\n            >\\n              <div class=\\\"card-title-text w-100\\\">\\n                <div class=\\\"designer-modal-card-title-content\\\">\\n                  <div class=\\\"left-header-block\\\" [class.pl-0]=\\\"config.isReadOnly\\\">\\n                    <div *ngIf=\\\"actionLabelsMap$ | async as actionLabelsMap\\\" class=\\\"rx-ellipsis\\\" [title]=\\\"actionLabelsMap[action.name]\\\"\\n                      rx-id=\\\"card-title\\\">\\n                      {{ actionLabelsMap[action.name] }}\\n                    </div>\\n                  </div>\\n\\n                  <div *ngIf=\\\"!config.isReadOnly\\\" class=\\\"right-header-block\\\">\\n                    <div class=\\\"designer-modal-card-title-index-buttons\\\">\\n                      <button\\n                        class=\\\"d-icon-left-triangle_down rx-button-unstyled\\\"\\n                        type=\\\"button\\\"\\n                        [disabled]=\\\"last\\\"\\n                        (click)=\\\"$event.stopPropagation(); moveAction(index, index + 1)\\\"\\n                        rx-id=\\\"move-down-button\\\"\\n                      ></button>\\n\\n                      <button\\n                        class=\\\"d-icon-left-triangle_up rx-button-unstyled\\\"\\n                        type=\\\"button\\\"\\n                        [disabled]=\\\"first\\\"\\n                        (click)=\\\"$event.stopPropagation(); moveAction(index, index - 1)\\\"\\n                        rx-id=\\\"move-up-button\\\"\\n                      ></button>\\n                    </div>\\n\\n                    <button\\n                      class=\\\"d-icon-left-cross_adapt p-1 pr-4 ml-3\\\"\\n                      adapt-button\\n                      size=\\\"small\\\"\\n                      type=\\\"button\\\"\\n                      (click)=\\\"$event.stopPropagation(); removeAction(action)\\\"\\n                      rx-id=\\\"remove-button\\\"\\n                    >\\n                      {{ 'com.bmc.arsys.rx.client.common.remove.label' | translate }}\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <rx-form-builder\\n                class=\\\"d-block\\\"\\n                [config]=\\\"action.config$ | async\\\"\\n                [model]=\\\"action.model.sandbox.actionProperties$ | async\\\"\\n                (modelChange)=\\\"action.model.sandbox.updateActionProperties($event); markEditorAsDirty()\\\"\\n                (editorEvent)=\\\"onEvent($event, action.model, container)\\\"\\n                [isReadOnly]=\\\"config.isReadOnly\\\"\\n              ></rx-form-builder>\\n            </adapt-accordion-tab>\\n          </div>\\n        </adapt-accordion>\\n      </div>\\n\\n      <div *ngIf=\\\"!selectedActions.length\\\" class=\\\"d-flex justify-content-center h-100 align-items-center mt-2\\\">\\n        <adapt-empty-state\\n          class=\\\"w-100\\\"\\n          label=\\\"{{ 'com.bmc.arsys.rx.client.view-components.action-list.selected-actions.empty-state.message' | translate }}\\\"\\n          type=\\\"config\\\"\\n        ></adapt-empty-state>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button\\n    *ngIf=\\\"!config.isReadOnly\\\"\\n    adapt-button\\n    btn-type=\\\"primary\\\"\\n    type=\\\"button\\\"\\n    rx-id=\\\"save-button\\\"\\n    [disabled]=\\\"isSaveButtonDisabled$ | async\\\"\\n    (click)=\\\"onSave()\\\"\\n  >\\n    {{ 'com.bmc.arsys.rx.client.common.save.label' | translate }}\\n  </button>\\n\\n  <button adapt-button btn-type=\\\"secondary\\\" type=\\\"button\\\" rx-id=\\\"cancel-button\\\" (click)=\\\"cancel()\\\">\\n    {{ config.isReadOnly ? ('com.bmc.arsys.rx.client.common.close.label' | translate) :\\n    ('com.bmc.arsys.rx.client.common.cancel.label' | translate) }}\\n  </button>\\n</div>\\n\", styles: [\":root{--border-radius: 4px;--nav-background: var(--gray-900);--nav-links-color: var(--white);--font-family: \\\"Open Sans\\\", -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;--color-primary-disabled-hover: #ff8d2a;--color-primary-disabled: #ff7d18;--color-primary: #f86e00;--color-primary-hover: #e45f00;--color-primary-active: #d05100;--color-primary-active-hover: #bc4300;--color-secondary-disabled-hover: #ffffff;--color-secondary-disabled: #ffffff;--color-secondary: #f9f9fa;--color-secondary-hover: #e5e5e6;--color-secondary-active: #d2d2d3;--color-secondary-active-hover: #c0c0c2;--color-active-disabled-hover: #45c8bd;--color-active-disabled: #2db7ad;--color-active: #00a79d;--color-active-hover: #00978e;--color-active-active: #00887f;--color-active-active-hover: #007970;--color-info-disabled-hover: #66d9f1;--color-info-disabled: #52c7df;--color-info: #3cb6ce;--color-info-hover: #21a6bd;--color-info-active: #0096ad;--color-info-active-hover: #00879e;--color-success-disabled-hover: #aae860;--color-success-disabled: #99d550;--color-success: #89c341;--color-success-hover: #7ab232;--color-success-active: #6ba122;--color-success-active-hover: #5d9110;--color-warning-disabled-hover: #ffda46;--color-warning-disabled: #ffc734;--color-warning: #f1b521;--color-warning-hover: #dea406;--color-warning-active: #cc9400;--color-warning-active-hover: #ba8400;--color-danger-disabled-hover: #ff5323;--color-danger-disabled: #ff4313;--color-danger: #f83200;--color-danger-hover: #e31f00;--color-danger-active: #cd0500;--color-danger-active-hover: #b80000;--dense-spacing-custom: false;--table-scroll-width: 0}.designer-modal-body{height:645px;min-height:calc(100% - 61px)!important}.designer-modal-accordion-wrapper{display:flex;flex-direction:column;height:100%;overflow:auto;padding-top:10px}.designer-modal-accordion-content{position:relative}.designer-modal-accordion-content.cdk-drag-preview{z-index:1200!important}.designer-modal-drag-handle{cursor:move;position:absolute;top:0;left:0;height:46px;padding:14px 10px 14px 14px;z-index:1}.designer-modal-card-title-content{width:100%;display:flex}.designer-modal-card-title-content .left-header-block,.designer-modal-card-title-content .right-header-block{display:flex;align-items:center}.designer-modal-card-title-content .left-header-block{flex-grow:1;min-width:0;font-size:14px;padding-left:22px}.designer-modal-card-sub-title{color:#7c7f81;font-weight:normal}.designer-modal-card-title-index-buttons{display:flex;font-size:19px}.rx-card{overflow:auto}.rx-tree-draggable-node{cursor:pointer}.rx-tree-draggable-node.cdk-drag-preview{z-index:1200!important}.rx-tree-draggable-node.cdk-drag{opacity:1}.rx-tree-node-label{word-break:break-all}rx-form-builder{max-width:400px}:host::ng-deep .a-tree__node_leaf .a-tree__toggle{display:none}\\n\"], components: [{ type: i3$3.AdaptTreeComponent, selector: \"adapt-tree\", inputs: [\"value\", \"filter\", \"texts\", \"filterBtnClearText\", \"filterPlaceholder\", \"testID\", \"lazy\", \"lazyLoading\", \"trim\", \"wrap\", \"selectAllButton\", \"deselectAllButton\", \"treeScrollHeight\", \"adaptRadarDisableEventSending\", \"draggableScope\", \"droppableScope\", \"draggableNodes\", \"droppableNodes\", \"validateDrop\"], outputs: [\"onNodeDrop\", \"lazyLoad\"] }, { type: i3$3.AdaptEmptyStateComponent, selector: \"adapt-empty-state\", inputs: [\"label\", \"type\", \"inverted\"] }, { type: i3$3.AdaptIconComponent, selector: \"adapt-icon\", inputs: [\"name\", \"classList\", \"description\", \"testID\"] }, { type: i3$3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3$3.AdaptAccordionComponent, selector: \"adapt-accordion\", inputs: [\"config\", \"multiselect\", \"bordered\"], outputs: [\"openTab\", \"closeTab\"] }, { type: i3$3.AdaptAccordionTabComponent, selector: \"adapt-accordion-tab\", inputs: [\"title\", \"renderContentWhenClosed\", \"customClass\", \"multiline\", \"icon\", \"disabled\", \"isOpen\"], outputs: [\"open\", \"close\"] }, { type: i3$1.FormBuilderComponent, selector: \"rx-form-builder\", inputs: [\"config\", \"model\", \"guid\", \"isReadOnly\", \"focusEditor$\"], outputs: [\"modelChange\", \"editorEvent\", \"formInitialized\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"id\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListOrientation\", \"cdkDropListLockAxis\", \"cdkDropListData\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i3$3.AdaptTreeNodeTemplateDirective, selector: \"[adaptTreeNodeTemplate]\", inputs: [\"adaptTreeNodeTemplate\"] }, { type: i4$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragDisabled\", \"cdkDragStartDelay\", \"cdkDragLockAxis\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragBoundary\", \"cdkDragRootElement\", \"cdkDragPreviewContainer\", \"cdkDragData\", \"cdkDragFreeDragPosition\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { type: i3$3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }], pipes: { \"translate\": i6.TranslatePipe, \"async\": i4.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-action-list-editor-dialog',\n                    templateUrl: './action-list-editor-dialog.component.html',\n                    styleUrls: ['./action-list-editor-dialog.component.scss'],\n                    providers: [RxActionListModelManagerService]\n                }]\n        }], ctorParameters: function () { return [{ type: i5.RxViewActionRegistryService }, { type: i2$1.RxStringService }, { type: i3$3.ActiveModalRef }, { type: ViewDesignerFacade }, { type: RxActionListModelManagerService }, { type: i3$1.RxExpressionEditorService }, { type: i2$1.RxGuidService }, { type: i6.TranslateService }, { type: i0.Injector }]; }, propDecorators: { accordionTabEls: [{\n                type: ViewChildren,\n                args: [AdaptAccordionTabComponent, { read: ElementRef }]\n            }] } });\n\nclass ActionListEditorDialogModule {\n}\nActionListEditorDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nActionListEditorDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogModule, declarations: [ActionListEditorDialogComponent], imports: [CommonModule,\n        AdaptRxSearchModule,\n        AdaptButtonModule,\n        AdaptAccordionModule,\n        DragDropModule,\n        AdaptEmptyStateModule,\n        ExpressionEditorModule,\n        FormsModule,\n        RxFormBuilderModule,\n        AdaptIconModule,\n        AdaptPopoverModule,\n        TranslateModule,\n        AdaptTreeModule], exports: [ActionListEditorDialogComponent] });\nActionListEditorDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogModule, imports: [[\n            CommonModule,\n            AdaptRxSearchModule,\n            AdaptButtonModule,\n            AdaptAccordionModule,\n            DragDropModule,\n            AdaptEmptyStateModule,\n            ExpressionEditorModule,\n            FormsModule,\n            RxFormBuilderModule,\n            AdaptIconModule,\n            AdaptPopoverModule,\n            TranslateModule,\n            AdaptTreeModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListEditorDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ActionListEditorDialogComponent],\n                    exports: [ActionListEditorDialogComponent],\n                    entryComponents: [ActionListEditorDialogComponent],\n                    imports: [\n                        CommonModule,\n                        AdaptRxSearchModule,\n                        AdaptButtonModule,\n                        AdaptAccordionModule,\n                        DragDropModule,\n                        AdaptEmptyStateModule,\n                        ExpressionEditorModule,\n                        FormsModule,\n                        RxFormBuilderModule,\n                        AdaptIconModule,\n                        AdaptPopoverModule,\n                        TranslateModule,\n                        AdaptTreeModule\n                    ]\n                }]\n        }] });\n\nclass ActionListControlComponent extends ValueAccessor {\n    constructor(rxModalService, rxViewActionRegistryService) {\n        super();\n        this.rxModalService = rxModalService;\n        this.rxViewActionRegistryService = rxViewActionRegistryService;\n        this.availableActions$ = this.rxViewActionRegistryService.getLicensedActions();\n        this.selectedActions = [];\n        this.availableActions$.subscribe((actions) => {\n            this.actionLabelsMap = transform(actions, (result, action) => {\n                result[action.name] = action.label;\n            }, {});\n        });\n    }\n    focus(data) {\n        if ((data === null || data === void 0 ? void 0 : data.actionIndex) >= 0) {\n            this.openActionSelector(this.selectedActions.find((item) => item.data.index === data.actionIndex));\n        }\n        else {\n            this.openActionSelector();\n        }\n    }\n    openActionSelector(actionToEdit) {\n        this.rxModalService\n            .openModal({\n            title: 'Edit actions',\n            data: {\n                selectedActions: this.value,\n                actionToEdit,\n                isReadOnly: this.isDisabled\n            },\n            content: ActionListEditorDialogComponent,\n            size: OpenViewActionModalSize.Large,\n            testID: 'edit-actions'\n        })\n            .then((actions) => {\n            this.value = actions;\n        })\n            .catch(noop);\n    }\n    onSetValue() {\n        this.updateSortedActionsList();\n    }\n    onWriteValue(value) {\n        this.updateSortedActionsList();\n    }\n    removeAction(action) {\n        this.value = without(this.value, action);\n    }\n    editAction(action) {\n        this.openActionSelector(action);\n    }\n    updateSortedActionsList() {\n        this.selectedActions = sortBy(this.value, (action) => action.data.index);\n    }\n}\nActionListControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlComponent, deps: [{ token: i5$1.RxModalService }, { token: i5.RxViewActionRegistryService }], target: i0.ɵɵFactoryTarget.Component });\nActionListControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ActionListControlComponent, selector: \"rx-action-list-control\", inputs: { options: \"options\", tooltip: \"tooltip\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: ActionListControlComponent,\n            multi: true\n        }\n    ], usesInheritance: true, ngImport: i0, template: \"<adapt-button rx-id=\\\"open-modal-button\\\" btn-type=\\\"tertiary\\\" class=\\\"px-0 py-0 pb-1\\\" (click)=\\\"openActionSelector()\\\">\\n  <adapt-icon name=\\\"plus_circle\\\" class=\\\"mr-1\\\"></adapt-icon>\\n  Edit actions\\n</adapt-button>\\n\\n<span *ngIf=\\\"tooltip\\\" class=\\\"align-middle\\\">\\n  <span class=\\\"letter-space\\\"></span>\\n  <adapt-icon [name]=\\\"'question_circle_o'\\\" [adaptPopover]=\\\"tooltip\\\" appendToBody=\\\"true\\\"></adapt-icon>\\n</span>\\n\\n<div rx-id=\\\"columns\\\">\\n  <span *ngIf=\\\"selectedActions.length === 0\\\" class=\\\"text-tertiary\\\">No actions added.</span>\\n</div>\\n\\n<ul class=\\\"list-unstyled mb-0\\\" *ngIf=\\\"selectedActions.length > 0\\\">\\n  <li class=\\\"border px-2 py-1 mb-1 d-flex align-items-center\\\" *ngFor=\\\"let action of selectedActions\\\">\\n    <strong class=\\\"mr-auto\\\">{{ actionLabelsMap[action.data.name] }}</strong>\\n\\n    <button\\n      class=\\\"d-icon-left-pencil p-1\\\"\\n      adapt-button\\n      btn-type=\\\"tertiary\\\"\\n      size=\\\"small\\\"\\n      type=\\\"button\\\"\\n      (click)=\\\"editAction(action)\\\"\\n    ></button>\\n\\n    <button\\n      class=\\\"d-icon-left-cross_adapt p-1\\\"\\n      adapt-button\\n      btn-type=\\\"tertiary\\\"\\n      size=\\\"small\\\"\\n      type=\\\"button\\\"\\n      *ngIf=\\\"!isDisabled\\\"\\n      (click)=\\\"removeAction(action)\\\"\\n    ></button>\\n  </li>\\n</ul>\\n\", components: [{ type: i3$3.AdaptButtonComponent, selector: \"adapt-button, button[adapt-button], a[adapt-button]\", inputs: [\"btn-type\", \"size\", \"disabled\", \"type\", \"tabIndex\"], exportAs: [\"adaptBtn\"] }, { type: i3$3.AdaptIconComponent, selector: \"adapt-icon\", inputs: [\"name\", \"classList\", \"description\", \"testID\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3$3.AdaptPopoverDirective, selector: \"[adaptPopover]\", inputs: [\"adaptPopover\", \"popoverTitle\", \"placement\", \"fallbackPlacement\", \"triggers\", \"container\", \"appendToBody\", \"closeBtn\", \"popupDelay\", \"disablePopover\", \"popoverClass\", \"autoClose\", \"closeOnOutOfView\", \"maxWidth\", \"minWidth\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"adaptPopover\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-action-list-control',\n                    templateUrl: './action-list-control.component.html',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: ActionListControlComponent,\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i5$1.RxModalService }, { type: i5.RxViewActionRegistryService }]; }, propDecorators: { options: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }] } });\n\nclass ActionListControlModule {\n}\nActionListControlModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nActionListControlModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlModule, declarations: [ActionListControlComponent], imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule], exports: [ActionListControlComponent] });\nActionListControlModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlModule, imports: [[CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListControlModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ActionListControlComponent],\n                    exports: [ActionListControlComponent],\n                    entryComponents: [ActionListControlComponent],\n                    imports: [CommonModule, AdaptIconModule, AdaptButtonModule, ActionListEditorDialogModule, AdaptPopoverModule]\n                }]\n        }] });\n\nclass RxComponentPermissionEditorWidgetComponent {\n    constructor(viewDesignerFacade) {\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.permissions = [];\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnInit() {\n        this.viewDesignerFacade\n            .getComponentPermissions(this.options.componentGuid)\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((permissions) => {\n            this.permissions = permissions;\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    onPermissionsChange(permissions) {\n        this.viewDesignerFacade.updateComponentModel(this.options.componentGuid, {\n            permissions\n        });\n    }\n}\nRxComponentPermissionEditorWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetComponent, deps: [{ token: ViewDesignerFacade }], target: i0.ɵɵFactoryTarget.Component });\nRxComponentPermissionEditorWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: RxComponentPermissionEditorWidgetComponent, selector: \"rx-component-permission-editor-widget\", inputs: { options: \"options\", isDisabled: \"isDisabled\" }, ngImport: i0, template: \"<rx-permission-editor\\n  [options]=\\\"options\\\"\\n  [disabled]=\\\"isDisabled\\\"\\n  [(ngModel)]=\\\"permissions\\\"\\n  (ngModelChange)=\\\"onPermissionsChange($event)\\\"\\n></rx-permission-editor>\\n\", components: [{ type: i3$1.RxPermissionEditorComponent, selector: \"rx-permission-editor\", inputs: [\"options\"] }], directives: [{ type: i3$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-component-permission-editor-widget',\n                    templateUrl: './component-permission-editor-widget.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: ViewDesignerFacade }]; }, propDecorators: { options: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }] } });\n\nclass RxComponentPermissionEditorWidgetModule {\n}\nRxComponentPermissionEditorWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRxComponentPermissionEditorWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetModule, declarations: [RxComponentPermissionEditorWidgetComponent], imports: [CommonModule, FormsModule, RxPermissionEditorModule] });\nRxComponentPermissionEditorWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetModule, imports: [[CommonModule, FormsModule, RxPermissionEditorModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxComponentPermissionEditorWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RxComponentPermissionEditorWidgetComponent],\n                    imports: [CommonModule, FormsModule, RxPermissionEditorModule]\n                }]\n        }] });\n\nclass RxViewCustomizationOptionsModule {\n}\nRxViewCustomizationOptionsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRxViewCustomizationOptionsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsModule, declarations: [RxViewCustomizationOptionsComponent], imports: [CommonModule, FormsModule, CustomizationOptionsModule] });\nRxViewCustomizationOptionsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsModule, imports: [[CommonModule, FormsModule, CustomizationOptionsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewCustomizationOptionsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule, CustomizationOptionsModule],\n                    declarations: [RxViewCustomizationOptionsComponent]\n                }]\n        }] });\n\nclass ActionListWidgetComponent extends InspectorWidgetBase {\n    constructor(injector) {\n        super(injector);\n        this.injector = injector;\n        this.actions = [];\n        // @ts-ignore\n        this.modelSandbox = this.designerItemModel.sandbox;\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnInit() {\n        const actions$ = this.modelSandbox.getChildComponents();\n        actions$.pipe(takeUntil(this.destroyed$)).subscribe((actions) => {\n            this.actions = actions;\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    onActionsChange(actions) {\n        this.modelSandbox.setChildren(this.getActionComponentPayloads(actions));\n    }\n    focus(data) {\n        this.actionListControlComponent.focus(data);\n    }\n    getActionComponentPayloads(actionInspectorModels) {\n        return actionInspectorModels.map((model) => (Object.assign({ type: RxViewComponentType.Action }, model)));\n    }\n}\nActionListWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nActionListWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ActionListWidgetComponent, selector: \"rx-action-list-widget\", viewQueries: [{ propertyName: \"actionListControlComponent\", first: true, predicate: ActionListControlComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<rx-action-list-control\\n  [disabled]=\\\"modelSandbox.isViewReadOnly$ | async\\\"\\n  [(ngModel)]=\\\"actions\\\"\\n  (ngModelChange)=\\\"onActionsChange($event)\\\"\\n  [tooltip]=\\\"options?.tooltip\\\"\\n></rx-action-list-control>\\n\", components: [{ type: ActionListControlComponent, selector: \"rx-action-list-control\", inputs: [\"options\", \"tooltip\"] }], directives: [{ type: i3$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"async\": i4.AsyncPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-action-list-widget',\n                    templateUrl: './action-list-widget.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; }, propDecorators: { actionListControlComponent: [{\n                type: ViewChild,\n                args: [ActionListControlComponent]\n            }] } });\n\nclass ActionListWidgetModule {\n}\nActionListWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nActionListWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetModule, declarations: [ActionListWidgetComponent], imports: [CommonModule, ActionListControlModule, FormsModule] });\nActionListWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetModule, imports: [[CommonModule, ActionListControlModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ActionListWidgetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ActionListWidgetComponent],\n                    imports: [CommonModule, ActionListControlModule, FormsModule]\n                }]\n        }] });\n\nclass ViewDesignerComponentModel {\n    constructor(injector, sandbox) {\n        this.injector = injector;\n        this.sandbox = sandbox;\n    }\n    get expressionConfigurator() {\n        if (!this._expressionConfigurator) {\n            this._expressionConfigurator = new (this.sandbox.descriptor.expressionConfigurator ||\n                RxViewComponentExpressionConfigurator)(this.injector, this.sandbox.guid, this, this.sandbox.descriptor.type);\n        }\n        return this._expressionConfigurator;\n    }\n    getExpressionForProperty(propertyPath) {\n        return `\\${view.components.${this.sandbox.guid}.${propertyPath}}`;\n    }\n}\n\nconst RX_AVAILABLE_ON_DEVICES_OPTIONS = [\n    {\n        id: RxDevice.Desktop,\n        name: 'Desktop'\n    },\n    {\n        id: RxDevice.Tablet,\n        name: 'Tablet'\n    },\n    {\n        id: RxDevice.Mobile,\n        name: 'Mobile'\n    }\n];\nfunction getAvailableOnDevicesInspectorConfig() {\n    return {\n        name: RX_AVAILABLE_ON_DEVICES_PROP_NAME,\n        component: SelectFormControlComponent,\n        options: {\n            label: 'Available on devices',\n            options: RX_AVAILABLE_ON_DEVICES_OPTIONS,\n            multiple: true,\n            required: true,\n            hideSelectAllButton: true,\n            hideDeselectAllButton: true\n        }\n    };\n}\nfunction getHiddenFieldInspectorConfig() {\n    return {\n        name: RX_HIDDEN_PROP_NAME,\n        component: OptionalExpressionInspectorControlComponent,\n        options: {\n            label: 'Hidden'\n        }\n    };\n}\nfunction getDisabledFieldInspectorConfig() {\n    return {\n        name: RX_DISABLED_PROP_NAME,\n        component: OptionalExpressionInspectorControlComponent,\n        options: {\n            label: 'Disabled'\n        }\n    };\n}\nfunction getStylesFieldInspectorConfig(autocompleteValues = []) {\n    return {\n        name: RX_STYLES_PROP_NAME,\n        component: TagsFormControlComponent,\n        options: {\n            label: 'CSS classes',\n            placeholder: 'Add CSS classes',\n            tooltip: new Tooltip('Enter CSS class names to apply to this view component.'),\n            errorCheck: validateCssClassName,\n            autocompleteValues: autocompleteValues\n        }\n    };\n}\nfunction getStandardPropsInspectorConfigs() {\n    return [getHiddenFieldInspectorConfig(), getAvailableOnDevicesInspectorConfig(), getStylesFieldInspectorConfig()];\n}\n\nclass RxViewActionValidatorService {\n    constructor(rxViewActionRegistryService, rxStringService, rxLogService, rxViewExpressionValidatorService) {\n        this.rxViewActionRegistryService = rxViewActionRegistryService;\n        this.rxStringService = rxStringService;\n        this.rxLogService = rxLogService;\n        this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n    }\n    validate(actionsDesignData, propertyName) {\n        const issues = flow((actions) => actions.map(({ data }) => {\n            const descriptor = this.rxViewActionRegistryService.get(data.name);\n            return [\n                of(this.validateRequiredProps(data, descriptor, propertyName)),\n                this.performCustomValidation(data, descriptor, propertyName),\n                this.validateExpressions(data, descriptor, propertyName)\n            ];\n        }), flatten)(actionsDesignData);\n        return combineLatest([of(this.validateActionSequence(actionsDesignData, propertyName)), ...issues]).pipe(map$1(flatten));\n    }\n    performCustomValidation(actionProps, descriptor, issuePropertyName) {\n        const designManager = this.rxViewActionRegistryService.getDesignManager(descriptor.name);\n        return designManager\n            ? designManager.validate(actionProps, issuePropertyName).pipe(map$1((issues) => issues.map((issue) => (Object.assign(Object.assign({}, issue), { data: {\n                    actionIndex: actionProps.index\n                } })))))\n            : of([]);\n    }\n    validateRequiredProps(actionProps, descriptor, issuePropertyName) {\n        return flow((descriptorParams) => descriptorParams.filter((param) => param.isRequired === true && this.rxStringService.isEmptySafe(actionProps[param.name])), (descriptorParams) => descriptorParams.map((param) => ({\n            type: 'error',\n            description: `${descriptor.label} action: ${param.label || param.name} cannot be blank.`,\n            propertyName: issuePropertyName,\n            data: {\n                actionIndex: actionProps.index\n            }\n        })))(descriptor.parameters);\n    }\n    validateExpressions(actionProps, descriptor, issuePropertyName) {\n        const actionIssues = descriptor.parameters\n            .filter((paramDescriptor) => paramDescriptor.enableExpressionEvaluation === true && actionProps[paramDescriptor.name])\n            .map((paramDescriptor) => this.rxViewExpressionValidatorService\n            .validate(actionProps[paramDescriptor.name], issuePropertyName, paramDescriptor.label || paramDescriptor.name, paramDescriptor.evaluatorService)\n            .pipe(map$1((issues) => issues.map((issue) => (Object.assign(Object.assign({}, issue), { description: `${descriptor.label} action: ${issue.description}`, data: {\n                actionIndex: actionProps.index\n            } }))))));\n        return actionIssues.length ? combineLatest(actionIssues).pipe(map$1(flatten)) : of([]);\n    }\n    validateActionSequence(actions, issuePropertyName) {\n        return flow((actionsDesignData) => map(actionsDesignData, ({ data }) => {\n            const descriptor = this.rxViewActionRegistryService.get(data.name);\n            return descriptor\n                ? map(data, (propertyValue, propertyName) => {\n                    var _a;\n                    if (((_a = descriptor.parameters.find((param) => param.name === propertyName)) === null || _a === void 0 ? void 0 : _a.enableExpressionEvaluation) &&\n                        this.rxStringService.isNonEmptyString(propertyValue)) {\n                        // Extract <ID> from ${view.components.<ID>.<Path>}\n                        const matches = propertyValue.match(/\\${view\\.components\\.([0-9a-z-]+)\\..+}/);\n                        if (matches && matches[1]) {\n                            const referencedAction = find(actionsDesignData, { guid: matches[1] });\n                            if (Number(referencedAction === null || referencedAction === void 0 ? void 0 : referencedAction.data.index) > Number(data.index)) {\n                                return {\n                                    type: 'error',\n                                    description: `${descriptor.label} action: invalid expression for ${propertyName}.`,\n                                    propertyName: issuePropertyName\n                                };\n                            }\n                        }\n                    }\n                })\n                : [];\n        }), flatten, compact)(actions);\n    }\n}\nRxViewActionValidatorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewActionValidatorService, deps: [{ token: i5.RxViewActionRegistryService }, { token: i2$1.RxStringService }, { token: i3.RxLogService }, { token: RxViewExpressionValidatorService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewActionValidatorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewActionValidatorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewActionValidatorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i5.RxViewActionRegistryService }, { type: i2$1.RxStringService }, { type: i3.RxLogService }, { type: RxViewExpressionValidatorService }]; } });\n\nclass ComponentSandbox {\n    constructor(injector, guid, descriptor) {\n        this.injector = injector;\n        this.guid = guid;\n        this.descriptor = descriptor;\n        this.viewDesignerFacade = this.injector.get(ViewDesignerFacade);\n        this.systemActions$ = this.injector.get(Actions);\n        this.viewDesignerDispatcher = this.injector.get(ViewDesignerDispatcher);\n        this.rxViewDesignerModels = this.injector.get(RxViewDesignerModels);\n        this.childModelsInitialized$ = new BehaviorSubject(false);\n        this.dispatcher$ = new Subject();\n        this.breadcrumbs$ = new ReplaySubject(1);\n        this.setUpPublicStreams();\n        this.viewDesignerFacade\n            .getComponentType(guid)\n            .pipe(take(1))\n            .subscribe((componentType) => (this.componentType = componentType));\n        this.viewDesignerFacade\n            .getComponentModel(this.guid)\n            .pipe(map$1((model) => Boolean(model.lastUpdateTime || model.name)), switchMap((isExistingViewComponent) => {\n            if (isExistingViewComponent) {\n                return this.viewDesignerFacade.viewModelsInitialized$;\n            }\n            else {\n                return of(null);\n            }\n        }), take(1), takeUntil(this.destroyed$))\n            .subscribe(() => {\n            this.childModelsInitialized$.next(true);\n        });\n        this.viewModelsInitialized$ = this.viewDesignerFacade.viewModelsInitialized$.pipe(takeUntil(this.destroyed$));\n        // for optimization reasons postpone emit of breadcrumbs till component gets selected\n        this.isComponentSelected$\n            .pipe(filter((isSelected) => isSelected), first(), switchMap(() => this.breadcrumbs$), distinctUntilChanged(), takeUntil(this.destroyed$))\n            .subscribe((label) => {\n            this.dispatcher$.next(setBreadcrumbs({\n                guid: this.guid,\n                label\n            }));\n        });\n        merge(\n        // skip initial batch of setValidationIssues actions that are emitted during view designer initialization with empty payload\n        this.dispatcher$.pipe(ofType(setValidationIssues), skipWhile((action) => action.issues.length === 0)), this.dispatcher$.pipe(filter((action) => action.type !== setValidationIssues.type)))\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((action) => this.viewDesignerDispatcher.dispatch(action));\n        // complete created subjects\n        this.destroyed$.subscribe(() => {\n            this.childModelsInitialized$.complete();\n            this.dispatcher$.complete();\n            this.breadcrumbs$.complete();\n        });\n    }\n    createError(description, propertyName, disableCorrection) {\n        return { type: 'error', description, propertyName, disableCorrection };\n    }\n    createWarning(description, propertyName, disableCorrection) {\n        return { type: 'warning', description, propertyName, disableCorrection };\n    }\n    getComponent(guid) {\n        return this.viewDesignerFacade.getComponent(guid);\n    }\n    getChildComponents(filterPredicate) {\n        return this.childModelsInitialized$\n            .asObservable()\n            .pipe(filter(Boolean), switchMapTo(this.viewDesignerFacade.getChildComponents(this.guid, filterPredicate)), takeUntil(this.destroyed$));\n    }\n    getChildComponentsTree() {\n        return this.childModelsInitialized$.asObservable().pipe(filter((isInitialized) => isInitialized), switchMapTo(this.viewDesignerFacade.getChildComponentTree(this.guid)), shareReplay(1), takeUntil(this.destroyed$));\n    }\n    getChildComponentGuids(filterPredicate, recursive = false) {\n        return this.childModelsInitialized$\n            .asObservable()\n            .pipe(filter(Boolean), switchMapTo(this.viewDesignerFacade.getChildComponentGuids(this.guid, recursive, filterPredicate)), takeUntil(this.destroyed$));\n    }\n    setChildren(data, parentGuid) {\n        this.dispatcher$.next(setChildComponents({\n            payload: {\n                guid: parentGuid || this.guid,\n                data\n            }\n        }));\n    }\n    setChildrenByType(data, types) {\n        this.dispatcher$.next(setChildComponents({\n            payload: {\n                guid: this.guid,\n                data,\n                types\n            }\n        }));\n    }\n    getParentComponentGuid(componentType) {\n        return this.viewDesignerFacade\n            .getParentComponentGuid(this.guid, componentType)\n            .pipe(distinctUntilChanged(), takeUntil(this.destroyed$));\n    }\n    setValidationIssues(issues) {\n        this.dispatcher$.next(setValidationIssues({ issues, guid: this.guid }));\n    }\n    updateComponentProperties(properties) {\n        this.viewDesignerFacade.updateComponentProperties(this.guid, properties);\n    }\n    getComponentPropertyValue(propertyName, componentGuid = this.guid) {\n        return this.viewDesignerFacade\n            .getComponentPropertyValue(componentGuid, propertyName)\n            .pipe(shareReplay(1), takeUntil(this.destroyed$));\n    }\n    getViewPropertyValue(propertyName) {\n        return this.viewDesignerFacade.getViewPropertyValue(propertyName).pipe(shareReplay(1), takeUntil(this.destroyed$));\n    }\n    updateInspectorConfig(inspectorConfig) {\n        this.viewDesignerFacade.setComponentInspector(this.guid, inspectorConfig);\n    }\n    setBreadcrumbs(label) {\n        this.breadcrumbs$.next(label);\n    }\n    addComponent(data) {\n        const dataArray = castArray(data);\n        const actionPayload = dataArray.map((component) => (Object.assign(Object.assign({}, component), { parentGuid: this.guid })));\n        this.dispatcher$.next(addNewComponents({ payload: actionPayload }));\n    }\n    selectComponent(guid) {\n        this.dispatcher$.next(selectComponent({ guid }));\n    }\n    removeComponents(guids, selectParent) {\n        this.viewDesignerFacade.removeViewComponents(guids, selectParent);\n    }\n    moveComponent(guid, insertIndex, targetGuid) {\n        const data = { guid };\n        const columnIndex = 0;\n        const outletName = RX_VIEW_DEFINITION.defaultOutletName;\n        this.dispatcher$.next(insertComponent({\n            data,\n            insertIndex,\n            columnIndex,\n            outletName,\n            targetGuid\n        }));\n    }\n    setLayout(cols) {\n        this.dispatcher$.next(setComponentLayout({\n            guid: this.guid,\n            cols\n        }));\n    }\n    getLayout(guid) {\n        return this.viewDesignerFacade.getComponentLayout(guid).pipe(shareReplay(1), takeUntil(this.destroyed$));\n    }\n    setCommonDataDictionary(dataDictionaryBranch) {\n        this.viewDesignerFacade.setComponentCommonDataDictionaryBranch(this.guid, dataDictionaryBranch);\n    }\n    setSettablePropertiesDataDictionary(componentName, dataDictionary) {\n        this.viewDesignerFacade.setComponentSettablePropertiesDataDictionary(this.guid, componentName, dataDictionary);\n    }\n    getComponentModel(guid) {\n        return this.rxViewDesignerModels.get(guid);\n    }\n    getComponentsByType(type) {\n        return this.viewDesignerFacade\n            .getComponentsByType(type)\n            .pipe(takeUntil(this.destroyed$));\n    }\n    setUpPublicStreams() {\n        const viewComponentsRemovedAction$ = this.systemActions$.pipe(ofType(componentsRemoved), filter((action) => action.guids.includes(this.guid)));\n        this.destroyed$ = merge(viewComponentsRemovedAction$, this.viewDesignerFacade.initViewDesigner$, this.viewDesignerFacade.destroyViewDesigner$).pipe(mapTo(true), first());\n        this.componentProperties$ = this.viewDesignerFacade\n            .getComponentProperties(this.guid)\n            .pipe(filter(Boolean), takeUntil(this.destroyed$), shareReplay(1));\n        this.isComponentSelected$ = this.systemActions$.pipe(ofType(selectComponent), map$1(({ guid }) => guid === this.guid), distinctUntilChanged(), startWith(false), takeUntil(this.destroyed$), shareReplay(1));\n        this.isViewReadOnly$ = this.viewDesignerFacade.isViewReadOnly$;\n    }\n}\n\nclass RxViewExpressionValidatorRegistryService {\n    constructor(rxViewComponentRegistryService, viewDesignerFacade, rxViewExpressionValidatorService) {\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.viewDesignerFacade = viewDesignerFacade;\n        this.rxViewExpressionValidatorService = rxViewExpressionValidatorService;\n        this.issuesObservableMap = new Map();\n    }\n    registerComponents(guids) {\n        guids.forEach((guid) => this.issuesObservableMap.set(guid, this.getComponentValidationIssues(guid)));\n        this.initValidation();\n    }\n    unregisterComponents(guids) {\n        guids.forEach((guid) => this.issuesObservableMap.delete(guid));\n        this.initValidation();\n    }\n    unregisterAllComponents() {\n        var _a;\n        this.issuesObservableMap.clear();\n        (_a = this.validateSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    initValidation() {\n        var _a;\n        (_a = this.validateSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.validateSubscription = combineLatest(Array.from(this.issuesObservableMap.entries()).map(([guid, issues$]) => issues$.pipe(map$1((issues) => ({\n            [guid]: issues\n        })))))\n            .pipe(map$1((issuesByComponentGuid) => merge$1({}, ...issuesByComponentGuid)), skipWhile((issuesByComponentGuid) => every(Object.values(issuesByComponentGuid), isEmpty)), \n        // debounceTime will allow Set expression validation issues action to be executed once for improved performance.\n        debounceTime(0))\n            .subscribe((issues) => {\n            this.viewDesignerFacade.setExpressionValidationIssues(issues);\n        });\n    }\n    getComponentValidationIssues(guid) {\n        return this.viewDesignerFacade.getComponentType(guid).pipe(take(1), switchMap((componentType) => {\n            const descriptor = this.rxViewComponentRegistryService.get(componentType);\n            const expressionProps = filter$1(descriptor === null || descriptor === void 0 ? void 0 : descriptor.properties, {\n                enableExpressionEvaluation: true\n            });\n            const expressionPropertyNames = map(expressionProps, 'name');\n            const descriptorPropMap = new Map(expressionProps.map((prop) => [prop.name, prop]));\n            return expressionPropertyNames.length\n                ? combineLatest(expressionPropertyNames.map((propertyName) => this.viewDesignerFacade\n                    .getComponentPropertyValue(guid, propertyName)\n                    .pipe(switchMap((propertyValue) => this.rxViewExpressionValidatorService\n                    .validate(propertyValue, propertyName, descriptorPropMap.get(propertyName).label, descriptorPropMap.get(propertyName).evaluatorService)\n                    .pipe(takeUntil(this.viewDesignerFacade.allComponentGuids$.pipe(filter((guids) => !guids.has(guid))))))))).pipe(map$1(flatten))\n                : of([]);\n        }), publishReplay(1), refCount());\n    }\n}\nRxViewExpressionValidatorRegistryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorRegistryService, deps: [{ token: i5.RxViewComponentRegistryService }, { token: ViewDesignerFacade }, { token: RxViewExpressionValidatorService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewExpressionValidatorRegistryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorRegistryService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewExpressionValidatorRegistryService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i5.RxViewComponentRegistryService }, { type: ViewDesignerFacade }, { type: RxViewExpressionValidatorService }]; } });\n\nclass RxViewDesignerStateHelperService {\n    getInitialComponentProperties(initialProperties, componentDescriptor) {\n        var _a;\n        let result = initialProperties;\n        if (isFunction((_a = componentDescriptor.designComponentModel) === null || _a === void 0 ? void 0 : _a.getInitialProperties)) {\n            result = componentDescriptor.designComponentModel.getInitialProperties(initialProperties);\n        }\n        return result;\n    }\n    getDefaultComponentPermissions(componentDescriptor) {\n        var _a;\n        let permissions = null;\n        if (isFunction((_a = componentDescriptor.designComponentModel) === null || _a === void 0 ? void 0 : _a.getDefaultPermissions)) {\n            permissions = componentDescriptor.designComponentModel.getDefaultPermissions();\n        }\n        return permissions;\n    }\n}\nRxViewDesignerStateHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerStateHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRxViewDesignerStateHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerStateHelperService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxViewDesignerStateHelperService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass ViewDesignerComponentEffects {\n    constructor(actions$, injector, viewDesignerModels, rxGuidService, store$, rxViewComponentRegistryService, rxViewDesignerInspectorService, rxViewExpressionValidatorRegistryService, rxViewDesignerStateHelperService, rxViewDataDictionaryStoreService) {\n        this.actions$ = actions$;\n        this.injector = injector;\n        this.viewDesignerModels = viewDesignerModels;\n        this.rxGuidService = rxGuidService;\n        this.store$ = store$;\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n        this.rxViewExpressionValidatorRegistryService = rxViewExpressionValidatorRegistryService;\n        this.rxViewDesignerStateHelperService = rxViewDesignerStateHelperService;\n        this.rxViewDataDictionaryStoreService = rxViewDataDictionaryStoreService;\n        this.initializeComponentModel$ = this.actions$.pipe(ofType(initializeComponentModels), tap((action) => {\n            action.payload.forEach(({ componentModel }) => {\n                const componentDescriptor = this.rxViewComponentRegistryService.get(componentModel.type);\n                const sandbox = new ComponentSandbox(this.injector, componentModel.guid, componentDescriptor);\n                const model = new componentDescriptor.designComponentModel(this.injector, sandbox);\n                if (isFunction(model.rxInit)) {\n                    model.rxInit();\n                }\n                this.viewDesignerModels.set(componentModel.guid, model);\n            });\n        }), map$1(() => viewModelsInitialized()));\n        this.registerComponentsValidation$ = this.actions$.pipe(ofType(initializeDataComponentModels, initializeComponentModels), tap((action) => this.rxViewExpressionValidatorRegistryService.registerComponents(map(action.payload, (payload) => payload.componentModel.guid))));\n        this.onComponentsRemoved$ = this.actions$.pipe(ofType(componentsRemoved), tap(({ guids }) => {\n            this.rxViewExpressionValidatorRegistryService.unregisterComponents(guids);\n            this.rxViewDataDictionaryStoreService.removeDataDictionaryForComponents(guids);\n        }));\n        this.unregisterAllComponentsValidation$ = this.actions$.pipe(ofType(initViewDesigner, destroyViewDesigner), tap(() => this.rxViewExpressionValidatorRegistryService.unregisterAllComponents()));\n        this.insertComponent$ = this.actions$.pipe(ofType(insertComponent), map$1((payload) => {\n            const newPayload = {\n                insertIndex: payload.insertIndex,\n                columnIndex: payload.columnIndex,\n                outletName: payload.outletName,\n                parentGuid: payload.targetGuid\n            };\n            return payload.data.guid\n                ? moveComponent(Object.assign(Object.assign({}, newPayload), { guid: payload.data.guid }))\n                : addNewComponents({\n                    payload: [\n                        Object.assign(Object.assign({}, newPayload), { type: payload.data.type, selectComponent: true, propertiesByName: payload.data.initialPropertiesByName })\n                    ]\n                });\n        }));\n        this.addNewComponent$ = this.actions$.pipe(ofType(addNewComponents), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([action, viewComponentsState]) => {\n            const initializeComponentModelPayloads = [];\n            const initializeDataComponentModelPayloads = [];\n            const componentGuidsToSelect = [];\n            action.payload.forEach((component) => {\n                this.processAddComponentPayload(component, initializeComponentModelPayloads, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState);\n            });\n            return [\n                initializeComponentModelPayloads.length\n                    ? initializeComponentModels({ payload: initializeComponentModelPayloads })\n                    : null,\n                initializeDataComponentModelPayloads.length\n                    ? initializeDataComponentModels({ payload: initializeDataComponentModelPayloads })\n                    : null,\n                componentGuidsToSelect.length\n                    ? selectComponent({\n                        guid: last(componentGuidsToSelect)\n                    })\n                    : null\n            ].filter(Boolean);\n        }));\n        this.removeComponent$ = this.actions$.pipe(ofType(removeComponents), filter(({ guids }) => !isEmpty(guids)), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([payload, viewComponentsState]) => {\n            const guidsToRemove = payload.guids.reduce((result, guid) => {\n                const removedComponentModel = viewComponentsState[guid];\n                if (removedComponentModel) {\n                    result.push(guid, ...getAllChildGuids(removedComponentModel, viewComponentsState));\n                }\n                return result;\n            }, []);\n            const removeGuidsSet = new Set(guidsToRemove);\n            removeGuidsSet.forEach((guid) => {\n                this.viewDesignerModels.delete(guid);\n                this.rxViewDesignerInspectorService.delete(guid);\n            });\n            const actions = [componentsRemoved({ guids: [...removeGuidsSet] })];\n            if (payload.selectParent) {\n                const lastRemovedModel = viewComponentsState[last(payload.guids)];\n                if (lastRemovedModel === null || lastRemovedModel === void 0 ? void 0 : lastRemovedModel.parentGuid) {\n                    actions.push(selectComponent({\n                        guid: lastRemovedModel.parentGuid\n                    }));\n                }\n            }\n            return actions;\n        }));\n        this.setChildren$ = this.actions$.pipe(ofType(setChildComponents), map$1((action) => action.payload), withLatestFrom(this.store$.select(viewComponentModelsSelector)), mergeMap(([actionPayload, viewComponentsState]) => {\n            const actions = [];\n            const componentGuidsToRemove = [];\n            const addComponentsPayloadAll = [];\n            const editComponentPayloadAll = [];\n            processChildComponents(actionPayload);\n            function processChildComponents(payload) {\n                const componentsToSet = payload.data;\n                const componentsGuidsToSet = componentsToSet.map((component) => component.guid);\n                const hostComponent = viewComponentsState[payload.guid];\n                let existingChildGuids = getChildGuidsFromModel(hostComponent);\n                if (payload.types) {\n                    existingChildGuids = existingChildGuids.filter((guid) => payload.types.includes(viewComponentsState[guid].type));\n                }\n                const componentGuidsToRemoveLocal = difference(existingChildGuids, componentsGuidsToSet);\n                const componentGuidsToAdd = difference(componentsGuidsToSet, existingChildGuids);\n                const componentsGuidsToUpdate = difference(existingChildGuids, componentGuidsToAdd, componentGuidsToRemoveLocal);\n                componentGuidsToRemove.push(...componentGuidsToRemoveLocal);\n                const addComponentsPayload = componentsToSet.reduce((result, action) => {\n                    if (includes(componentGuidsToAdd, action.guid)) {\n                        result.push(getAddComponentPayload(action, payload.guid));\n                    }\n                    return result;\n                }, []);\n                addComponentsPayloadAll.push(...addComponentsPayload);\n                const editComponentPayload = componentsToSet.reduce((result, action) => {\n                    if (includes(componentsGuidsToUpdate, action.guid)) {\n                        const existingModel = viewComponentsState[action.guid];\n                        if (!isEqual(existingModel.propertiesByName, action.data || {})) {\n                            result.push({ guid: action.guid, data: action.data });\n                        }\n                        if (action.children) {\n                            processChildComponents({\n                                guid: action.guid,\n                                data: action.children\n                            });\n                        }\n                    }\n                    return result;\n                }, []);\n                editComponentPayloadAll.push(...editComponentPayload);\n            }\n            function getAddComponentPayload(action, parentGuid) {\n                const result = {\n                    propertiesByName: action.data,\n                    guid: action.guid,\n                    parentGuid,\n                    type: action.type,\n                    columnIndex: action.columnIndex || 0,\n                    insertIndex: action.insertIndex,\n                    outletName: action.outletName || RX_VIEW_DEFINITION.defaultOutletName\n                };\n                if (action.children) {\n                    result.children = map(action.children, (child) => getAddComponentPayload(child, action.guid));\n                }\n                return result;\n            }\n            if (componentGuidsToRemove.length) {\n                actions.push(removeComponents({ guids: componentGuidsToRemove }));\n            }\n            if (addComponentsPayloadAll.length) {\n                actions.push(addNewComponents({ payload: addComponentsPayloadAll }));\n            }\n            if (editComponentPayloadAll.length) {\n                actions.push(setComponentData({ payload: editComponentPayloadAll }));\n            }\n            return actions;\n        }));\n    }\n    processAddComponentPayload(component, initializeComponentModelPayload, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState) {\n        const componentDescriptor = this.rxViewComponentRegistryService.get(component.type);\n        const payloadParent = initializeComponentModelPayload.find((payload) => payload.componentModel.guid === component.parentGuid);\n        const modelParent = viewComponentsState[component.parentGuid];\n        const parentWithoutLayout = (payloadParent && !payloadParent.componentModel.layout) || (modelParent && !modelParent.layout);\n        const componentModel = {\n            guid: component.guid || this.rxGuidService.generate(),\n            type: component.type,\n            parentGuid: component.parentGuid,\n            propertiesByName: this.rxViewDesignerStateHelperService.getInitialComponentProperties(component.propertiesByName, componentDescriptor),\n            permissions: this.rxViewDesignerStateHelperService.getDefaultComponentPermissions(componentDescriptor)\n        };\n        if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) || parentWithoutLayout) {\n            componentModel.resourceType = componentDescriptor.isContainerComponent\n                ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n                : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n            initializeDataComponentModelPayloads.push({\n                componentModel: componentModel\n            });\n        }\n        else {\n            componentModel.resourceType =\n                componentDescriptor.outlets || componentDescriptor.isContainerComponent\n                    ? RX_VIEW_DEFINITION.resourceTypes.containerViewComponent\n                    : RX_VIEW_DEFINITION.resourceTypes.viewComponent;\n            if (componentDescriptor.outlets) {\n                componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutletNames(componentDescriptor.outlets);\n            }\n            initializeComponentModelPayload.push({\n                componentModel: componentModel,\n                insertIndex: component.insertIndex,\n                columnIndex: component.columnIndex || 0,\n                outletName: component.outletName || RX_VIEW_DEFINITION.defaultOutletName\n            });\n            if (component.selectComponent) {\n                componentGuidsToSelect.push(componentModel.guid);\n            }\n        }\n        forEach(component.children, (child) => {\n            this.processAddComponentPayload(Object.assign(Object.assign({}, child), { parentGuid: componentModel.guid }), initializeComponentModelPayload, initializeDataComponentModelPayloads, componentGuidsToSelect, viewComponentsState);\n        });\n    }\n}\nViewDesignerComponentEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerComponentEffects, deps: [{ token: i1.Actions }, { token: i0.Injector }, { token: RxViewDesignerModels }, { token: i2$1.RxGuidService }, { token: i2.Store }, { token: i5.RxViewComponentRegistryService }, { token: RxViewDesignerInspectorService }, { token: RxViewExpressionValidatorRegistryService }, { token: RxViewDesignerStateHelperService }, { token: RxViewDataDictionaryStoreService }], target: i0.ɵɵFactoryTarget.Injectable });\nViewDesignerComponentEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerComponentEffects });\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"initializeComponentModel$\", void 0);\n__decorate([\n    Effect({ dispatch: false }),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"registerComponentsValidation$\", void 0);\n__decorate([\n    Effect({ dispatch: false }),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"onComponentsRemoved$\", void 0);\n__decorate([\n    Effect({ dispatch: false }),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"unregisterAllComponentsValidation$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"insertComponent$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"addNewComponent$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"removeComponent$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerComponentEffects.prototype, \"setChildren$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerComponentEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Actions }, { type: i0.Injector }, { type: RxViewDesignerModels }, { type: i2$1.RxGuidService }, { type: i2.Store }, { type: i5.RxViewComponentRegistryService }, { type: RxViewDesignerInspectorService }, { type: RxViewExpressionValidatorRegistryService }, { type: RxViewDesignerStateHelperService }, { type: RxViewDataDictionaryStoreService }]; }, propDecorators: { initializeComponentModel$: [], registerComponentsValidation$: [], onComponentsRemoved$: [], unregisterAllComponentsValidation$: [], insertComponent$: [], addNewComponent$: [], removeComponent$: [], setChildren$: [] } });\n\nclass ViewDesignerEffects {\n    constructor(actions$, store$, rxBundleCacheService, rxDefinitionNameService, rxDefinitionUpdateService, rxGlobalCacheService, rxJsonParserService, rxViewComponentRegistryService, rxViewActionRegistryService, rxViewDefinitionService, viewDesignerModels, rxOldViewLayoutAdapterService, rxViewDefinitionParserService, rxLogService, rxModalService, errorHandler, rxUtilityModalsService, rxDefinitionAdapterRegistryService, rxViewDesignerInspectorService, rxViewDefinitionGeneratorService, rxViewDesignerStateHelperService, rxViewActionDefinitionAdapterRegistryService, rxGuidService, rxViewDataDictionaryStoreService) {\n        this.actions$ = actions$;\n        this.store$ = store$;\n        this.rxBundleCacheService = rxBundleCacheService;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxDefinitionUpdateService = rxDefinitionUpdateService;\n        this.rxGlobalCacheService = rxGlobalCacheService;\n        this.rxJsonParserService = rxJsonParserService;\n        this.rxViewComponentRegistryService = rxViewComponentRegistryService;\n        this.rxViewActionRegistryService = rxViewActionRegistryService;\n        this.rxViewDefinitionService = rxViewDefinitionService;\n        this.viewDesignerModels = viewDesignerModels;\n        this.rxOldViewLayoutAdapterService = rxOldViewLayoutAdapterService;\n        this.rxViewDefinitionParserService = rxViewDefinitionParserService;\n        this.rxLogService = rxLogService;\n        this.rxModalService = rxModalService;\n        this.errorHandler = errorHandler;\n        this.rxUtilityModalsService = rxUtilityModalsService;\n        this.rxDefinitionAdapterRegistryService = rxDefinitionAdapterRegistryService;\n        this.rxViewDesignerInspectorService = rxViewDesignerInspectorService;\n        this.rxViewDefinitionGeneratorService = rxViewDefinitionGeneratorService;\n        this.rxViewDesignerStateHelperService = rxViewDesignerStateHelperService;\n        this.rxViewActionDefinitionAdapterRegistryService = rxViewActionDefinitionAdapterRegistryService;\n        this.rxGuidService = rxGuidService;\n        this.rxViewDataDictionaryStoreService = rxViewDataDictionaryStoreService;\n        this.initViewDesigner$ = this.actions$.pipe(ofType(initViewDesigner), switchMap(({ payload }) => {\n            const { viewDefinitionName, layoutTemplate } = payload;\n            this.clearStorages();\n            return [\n                loadFriendlyBundleName(),\n                loadViewDefinition({\n                    viewDefinitionName,\n                    layoutTemplate\n                })\n            ];\n        }));\n        this.destroyViewDesigner$ = this.actions$.pipe(ofType(destroyViewDesigner), tap(() => this.clearStorages()));\n        this.loadFriendlyBundleName$ = this.actions$.pipe(ofType(loadFriendlyBundleName), switchMap(() => this.rxGlobalCacheService.getBundleDescriptor(this.rxBundleCacheService.bundleId)), switchMap((descriptor) => {\n            let result$;\n            if (descriptor) {\n                result$ = of(friendlyBundleNameLoadSuccess({\n                    friendlyBundleName: descriptor.friendlyName\n                }));\n            }\n            else {\n                result$ = throwError(`Bundle \"${this.rxBundleCacheService.bundleId}\" not found`);\n            }\n            return result$.pipe(catchError((error) => {\n                this.errorHandler.handleError(error);\n                return of(friendlyBundleNameLoadError({ payload: error }));\n            }));\n        }));\n        this.loadViewDefinition$ = this.actions$.pipe(ofType(loadViewDefinition), switchMap(({ viewDefinitionName, layoutTemplate }) => {\n            const viewDefinition$ = viewDefinitionName\n                ? this.rxViewDefinitionService.get(viewDefinitionName)\n                : this.rxViewDefinitionService.getNew(layoutTemplate);\n            return viewDefinition$.pipe(map$1((viewDefinition) => viewDefinitionLoadSuccess({\n                viewDefinition\n            })), catchError((error) => {\n                this.errorHandler.handleError(error);\n                return of(viewDefinitionLoadError());\n            }));\n        }));\n        this.viewDefinitionLoadSuccess$ = this.actions$.pipe(ofType(viewDefinitionLoadSuccess), withLatestFrom(this.store$.select(viewModelSelector)), mergeMap(([payload, viewModel]) => {\n            // If viewModel isn't empty it's considered that view definition is loaded after save to update\n            // existing view models with properties added by server e.g 'lastChangedBy', 'lastUpdateTime' and etc.\n            return viewModel\n                ? this.getActionsToUpdateExistingViewModels(payload.viewDefinition)\n                : this.getActionsToInitializeViewModels(payload.viewDefinition);\n        }));\n        this.selectViewComponent$ = this.actions$.pipe(ofType(selectComponent), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(selectedInspectorTabIdSelector)), mergeMap(([action, viewModel, currentInspectorTabId]) => {\n            const selectedInspectorTab = viewModel.guid === action.guid ? 0 : 1;\n            if (selectedInspectorTab !== currentInspectorTabId) {\n                return [\n                    selectInspectorTab({\n                        tabId: selectedInspectorTab\n                    })\n                ];\n            }\n            else {\n                return [];\n            }\n        }));\n        this.generateViewDefinition$ = this.actions$.pipe(ofType(generateViewDefinition), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(viewComponentModelsSelector), (action, viewModel, componentModels) => ({ viewModel, componentModels })), map$1(({ viewModel, componentModels }) => this.rxViewDefinitionGeneratorService.generate(viewModel, componentModels)), map$1((viewDefinition) => setGeneratedViewDefinition({ payload: viewDefinition })));\n        this.saveViewDefinition$ = this.actions$.pipe(ofType(saveViewDefinition), withLatestFrom(this.store$.select(viewModelSelector), this.store$.select(viewComponentModelsSelector), (action, viewModel, components) => ({ viewModel, components })), switchMap(({ viewModel, components }) => {\n            const viewDefinition = this.rxViewDefinitionGeneratorService.generate(viewModel, components, true);\n            return (viewDefinition.lastUpdateTime\n                ? this.rxDefinitionUpdateService.execute(this.rxViewDefinitionService.update.bind(this.rxViewDefinitionService, viewDefinition.name, viewDefinition))\n                : this.rxViewDefinitionService.create(viewDefinition)).pipe(switchMap((response) => {\n                const definitionName = decodeURIComponent(last(response === null || response === void 0 ? void 0 : response.headers.get('Location').split('/')) || '') || viewDefinition.name;\n                return [\n                    viewDefinitionSaveSuccess({ viewDefinitionName: definitionName }),\n                    viewDefinition.lastUpdateTime\n                        ? loadViewDefinition({\n                            viewDefinitionName: viewDefinition.name\n                        })\n                        : null\n                ].filter(Boolean);\n            }), catchError((error) => {\n                this.errorHandler.handleError(error);\n                return of(viewDefinitionSaveError());\n            }));\n        }));\n        this.clearCanvas$ = this.actions$.pipe(ofType(clearCanvas), withLatestFrom(this.store$.select(viewModelSelector)), map$1(([action, viewModel]) => removeComponents({ guids: getChildGuidsFromModel(viewModel) })));\n        this.runPreview$ = this.actions$.pipe(ofType(runPreview), withLatestFrom(this.store$.select(viewModelSelector), (action, viewModel) => viewModel), switchMap((viewModel) => viewModel.targetViewDefinitionName\n            ? this.rxViewDefinitionService.get(viewModel.targetViewDefinitionName)\n            : of(viewModel)), tap((viewModel) => {\n            const encodedViewDefinitionName = encodeURIComponent(viewModel.name);\n            let url = `/helix/index.html#/${this.rxBundleCacheService.bundleId}/preview/${encodedViewDefinitionName}`;\n            if (viewModel.inputParams.length) {\n                this.rxModalService\n                    .openModal({\n                    title: 'Enter view parameter values',\n                    content: RuntimeViewParamsModalComponent,\n                    data: { inputParams: map(viewModel.inputParams, 'name') },\n                    size: 'sm'\n                })\n                    .catch(noop$1)\n                    .then((params) => {\n                    const inputConfig = map(params, (value, name) => {\n                        return `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n                    });\n                    url += `?${inputConfig.join('&')}`;\n                    if (params) {\n                        window.open(url);\n                    }\n                });\n            }\n            else {\n                window.open(url);\n            }\n        }));\n    }\n    clearStorages() {\n        this.viewDesignerModels.clear();\n        this.rxViewDesignerInspectorService.clear();\n        this.rxViewDataDictionaryStoreService.clear();\n    }\n    convertViewDefinitionToModel(viewDefinition) {\n        const isAngularJsView = Boolean(viewDefinition.lastUpdateTime) && !includes(viewDefinition.layout, '\"outlets\"');\n        this.rxViewDefinitionParserService\n            .getComponents(viewDefinition)\n            .forEach((definition) => this.rxOldViewLayoutAdapterService.convertLayout(definition));\n        const viewModel = omit(viewDefinition, ['componentDefinitions', 'layout']);\n        const layout = this.rxJsonParserService.tryParseJson(viewDefinition.layout);\n        viewModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n        viewModel.displayName = decodeURIComponent(this.rxDefinitionNameService.getDisplayName(viewModel.name));\n        viewModel.layoutName = RxViewLayout.getLayoutName(viewModel.layout);\n        viewModel.isAngularJsView = isAngularJsView;\n        return viewModel;\n    }\n    convertComponentDefinitionToModel(definition, parentGuid, descriptor) {\n        const componentModel = omit(definition, ['componentDefinitions', 'layout']);\n        componentModel.parentGuid = parentGuid;\n        this.processComponentDefinitionProperties(componentModel, descriptor);\n        if (this.isComponentHasLayout(definition)) {\n            const layout = this.rxJsonParserService.tryParseJson(definition.layout);\n            componentModel.layout = RxViewLayout.getEmptyViewLayoutForOutlets(layout.outlets);\n        }\n        return componentModel;\n    }\n    processComponentDefinitionProperties(componentModel, descriptor) {\n        componentModel.propertiesByName = transform(componentModel.propertiesByName, (result, propertyValue, propertyKey) => {\n            const propertyDescriptor = find(descriptor.properties || descriptor.parameters, {\n                name: propertyKey\n            });\n            if (propertyDescriptor && propertyDescriptor.designType) {\n                switch (true) {\n                    case propertyDescriptor.designType === ViewComponentPropertyType.String:\n                        result[propertyKey] = propertyValue;\n                        break;\n                    default:\n                        result[propertyKey] = this.rxJsonParserService.tryParseJson(propertyValue, propertyValue);\n                        break;\n                }\n            }\n            else {\n                result[propertyKey] = propertyValue;\n            }\n            return result;\n        }, {});\n        if (!this.rxGuidService.isGuid(componentModel.name)) {\n            componentModel.propertiesByName.name = componentModel.name;\n        }\n        if ('type' in descriptor) {\n            componentModel.propertiesByName = this.rxViewDesignerStateHelperService.getInitialComponentProperties(componentModel.propertiesByName, descriptor);\n        }\n    }\n    traverseByComponents(component, predicate) {\n        const componentLayout = this.rxJsonParserService.tryParseJson(component.layout);\n        const childComponentDefinitions = component.componentDefinitions;\n        if (componentLayout) {\n            componentLayout.outlets.forEach((outlet) => {\n                outlet.columns.forEach((column, colIndex) => {\n                    column.children.forEach((childComponentGuid, index) => {\n                        const childComponentDefinition = childComponentDefinitions.find((definition) => definition.guid === childComponentGuid);\n                        if (childComponentDefinition) {\n                            predicate(childComponentDefinition, component.guid, outlet.name, index, colIndex, column.span);\n                            if (childComponentDefinition.componentDefinitions) {\n                                this.traverseByComponents(childComponentDefinition, predicate);\n                            }\n                        }\n                    });\n                });\n            });\n        }\n        childComponentDefinitions\n            .filter((definition) => {\n            const descriptor = this.rxViewComponentRegistryService.get(definition.type);\n            return (descriptor === null || descriptor === void 0 ? void 0 : descriptor.isDataComponent) || (descriptor === null || descriptor === void 0 ? void 0 : descriptor.isPageComponent);\n        })\n            .forEach((childComponentDefinition, index) => {\n            predicate(childComponentDefinition, component.guid, null, index, 0, 0);\n            if (childComponentDefinition.componentDefinitions) {\n                this.traverseByComponents(childComponentDefinition, predicate);\n            }\n        });\n    }\n    isComponentHasLayout(definition) {\n        return Boolean(definition.layout);\n    }\n    getActionsToInitializeViewModels(viewDefinition) {\n        const viewDefinitionClone = cloneDeep(viewDefinition);\n        const viewModel = this.convertViewDefinitionToModel(viewDefinitionClone);\n        const initComponentModelsPayload = [];\n        const initDataComponentModelsPayload = [];\n        this.traverseByComponents(viewDefinitionClone, (componentDefinition, parentGuid, outletName, insertIndex, columnIndex, columnSpan) => {\n            const componentDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n            if (componentDescriptor && !componentDescriptor.isPageComponent) {\n                const adapter = componentDefinition.type === RxViewComponentType.Action\n                    ? this.rxViewActionDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.propertiesByName.name)\n                    : this.rxDefinitionAdapterRegistryService.getDesignAdapter(componentDefinition.type);\n                adapter === null || adapter === void 0 ? void 0 : adapter.adaptDefinition(componentDefinition, viewDefinitionClone);\n                let actionDescriptor;\n                if (componentDefinition.type === RxViewComponentType.Action) {\n                    actionDescriptor = this.rxViewActionRegistryService.get(componentDefinition.propertiesByName.name);\n                    if (!actionDescriptor) {\n                        actionDescriptor = this.rxViewActionRegistryService.registerUnknownAction(componentDefinition.propertiesByName.name);\n                    }\n                }\n                const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, actionDescriptor || componentDescriptor);\n                if (this.rxViewComponentRegistryService.isDataComponentDescriptor(componentDescriptor) ||\n                    outletName === null) {\n                    initDataComponentModelsPayload.push({\n                        componentModel\n                    });\n                }\n                else {\n                    initComponentModelsPayload.push({\n                        insertIndex,\n                        columnIndex,\n                        componentModel,\n                        outletName,\n                        columnSpan\n                    });\n                }\n            }\n            else if (this.rxViewDefinitionService.isPageView(viewDefinitionClone)) {\n                let pageComponentChildDescriptor = this.rxViewComponentRegistryService.get(componentDefinition.type);\n                if (!pageComponentChildDescriptor) {\n                    pageComponentChildDescriptor = {\n                        type: componentDefinition.type,\n                        name: RX_VIEW_DEFINITION.unknownPageComponent.name\n                    };\n                }\n                const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, pageComponentChildDescriptor);\n                initDataComponentModelsPayload.push({\n                    componentModel\n                });\n            }\n            else {\n                const unknownComponentDescriptor = Object.assign(Object.assign({}, this.rxViewComponentRegistryService.get(RxViewComponentType.Unknown)), { type: componentDefinition.type });\n                this.rxViewComponentRegistryService.registerSync(unknownComponentDescriptor);\n                const componentModel = this.convertComponentDefinitionToModel(componentDefinition, parentGuid, unknownComponentDescriptor);\n                initComponentModelsPayload.push({\n                    insertIndex,\n                    columnIndex,\n                    componentModel,\n                    outletName,\n                    columnSpan\n                });\n                this.rxLogService.warning(`Cannot initialize view component. View Component Descriptor for ${componentDefinition.type} not found.`);\n            }\n        });\n        return [\n            setViewModel({ payload: viewModel }),\n            initComponentModelsPayload.length\n                ? initializeComponentModels({ payload: initComponentModelsPayload })\n                : null,\n            initDataComponentModelsPayload.length\n                ? initializeDataComponentModels({ payload: initDataComponentModelsPayload })\n                : null,\n            initComponentModelsPayload.length ? null : viewModelsInitialized()\n        ].filter(Boolean);\n    }\n    getActionsToUpdateExistingViewModels(viewDefinition) {\n        const viewDefinitionClone = cloneDeep(viewDefinition);\n        const updateComponentModelPayloads = this.rxViewDefinitionParserService\n            .getComponents(viewDefinitionClone, true)\n            .map(({ componentDefinition }) => ({\n            guid: componentDefinition.guid,\n            partialModel: omit(componentDefinition, [\n                'layout',\n                'propertiesByName',\n                'componentDefinitions'\n            ])\n        }));\n        return [\n            updateViewModel({\n                payload: omit(viewDefinitionClone, ['layout', 'componentDefinitions'])\n            }),\n            updateComponentModelPayloads.length\n                ? updateComponentModel({ payload: updateComponentModelPayloads })\n                : null,\n            viewModelsUpdatedAfterSave()\n        ].filter(Boolean);\n    }\n}\nViewDesignerEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerEffects, deps: [{ token: i1.Actions }, { token: i2.Store }, { token: i3.RxBundleCacheService }, { token: i3.RxDefinitionNameService }, { token: i3.RxDefinitionUpdateService }, { token: i3.RxGlobalCacheService }, { token: i2$1.RxJsonParserService }, { token: i5.RxViewComponentRegistryService }, { token: i5.RxViewActionRegistryService }, { token: i5.RxViewDefinitionService }, { token: RxViewDesignerModels }, { token: i5.RxOldViewLayoutAdapterService }, { token: i5.RxViewDefinitionParserService }, { token: i3.RxLogService }, { token: i5$1.RxModalService }, { token: i0.ErrorHandler }, { token: i5$1.RxUtilityModalsService }, { token: i3.RxDefinitionAdapterRegistryService }, { token: RxViewDesignerInspectorService }, { token: RxViewDefinitionGeneratorService }, { token: RxViewDesignerStateHelperService }, { token: i5.RxViewActionDefinitionAdapterRegistryService }, { token: i2$1.RxGuidService }, { token: RxViewDataDictionaryStoreService }], target: i0.ɵɵFactoryTarget.Injectable });\nViewDesignerEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerEffects });\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"initViewDesigner$\", void 0);\n__decorate([\n    Effect({ dispatch: false }),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"destroyViewDesigner$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"loadFriendlyBundleName$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"loadViewDefinition$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"viewDefinitionLoadSuccess$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"selectViewComponent$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"generateViewDefinition$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"saveViewDefinition$\", void 0);\n__decorate([\n    Effect(),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"clearCanvas$\", void 0);\n__decorate([\n    Effect({ dispatch: false }),\n    __metadata(\"design:type\", Object)\n], ViewDesignerEffects.prototype, \"runPreview$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Actions }, { type: i2.Store }, { type: i3.RxBundleCacheService }, { type: i3.RxDefinitionNameService }, { type: i3.RxDefinitionUpdateService }, { type: i3.RxGlobalCacheService }, { type: i2$1.RxJsonParserService }, { type: i5.RxViewComponentRegistryService }, { type: i5.RxViewActionRegistryService }, { type: i5.RxViewDefinitionService }, { type: RxViewDesignerModels }, { type: i5.RxOldViewLayoutAdapterService }, { type: i5.RxViewDefinitionParserService }, { type: i3.RxLogService }, { type: i5$1.RxModalService }, { type: i0.ErrorHandler }, { type: i5$1.RxUtilityModalsService }, { type: i3.RxDefinitionAdapterRegistryService }, { type: RxViewDesignerInspectorService }, { type: RxViewDefinitionGeneratorService }, { type: RxViewDesignerStateHelperService }, { type: i5.RxViewActionDefinitionAdapterRegistryService }, { type: i2$1.RxGuidService }, { type: RxViewDataDictionaryStoreService }]; }, propDecorators: { initViewDesigner$: [], destroyViewDesigner$: [], loadFriendlyBundleName$: [], loadViewDefinition$: [], viewDefinitionLoadSuccess$: [], selectViewComponent$: [], generateViewDefinition$: [], saveViewDefinition$: [], clearCanvas$: [], runPreview$: [] } });\n\nfunction getInitialState$4() {\n    return null;\n}\nconst reducer$4 = createReducer(getInitialState$4(), on(initViewDesigner, getInitialState$4), on(destroyViewDesigner, getInitialState$4), on(setGeneratedViewDefinition, (state, { payload }) => {\n    return payload;\n}));\nfunction viewDefinitionReducer(state, action) {\n    return reducer$4(state, action);\n}\n\nfunction getInitialState$3() {\n    return {};\n}\nconst reducer$3 = createReducer(getInitialState$3(), on(initViewDesigner, getInitialState$3), on(destroyViewDesigner, getInitialState$3), on(setBreadcrumbs, (state, { guid, label }) => {\n    return Object.assign(Object.assign({}, state), { [guid]: label });\n}), on(componentsRemoved, (state, { guids }) => {\n    let newState = state;\n    if (guids.some((guid) => has(state, guid))) {\n        newState = omit(state, guids);\n    }\n    return newState;\n}));\nfunction viewDesignerBreadcrumbsReducer(state, action) {\n    return reducer$3(state, action);\n}\n\nfunction getInitialState$2() {\n    return {\n        viewDesignModel: null,\n        viewComponentDesignModels: {}\n    };\n}\nfunction initializeComponentModel(newState, payload) {\n    newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), { [payload.componentModel.guid]: payload.componentModel });\n    // update parent layout\n    if (payload.componentModel.parentGuid === newState.viewDesignModel.guid) {\n        newState.viewDesignModel = addChildComponent(newState.viewDesignModel, payload.componentModel.guid, payload.outletName, payload.insertIndex, payload.columnIndex, payload.columnSpan);\n    }\n    else {\n        const parentComponentModel = newState.viewComponentDesignModels[payload.componentModel.parentGuid];\n        if (parentComponentModel) {\n            const newParentComponentModel = addChildComponent(parentComponentModel, payload.componentModel.guid, payload.outletName, payload.insertIndex, payload.columnIndex, payload.columnSpan);\n            newState.viewComponentDesignModels[newParentComponentModel.guid] =\n                newParentComponentModel;\n        }\n    }\n}\nconst reducer$2 = createReducer(getInitialState$2(), on(initViewDesigner, getInitialState$2), on(destroyViewDesigner, getInitialState$2), on(initializeComponentModels, (state, { payload }) => {\n    const newState = Object.assign({}, state);\n    payload.forEach((data) => initializeComponentModel(newState, data));\n    return newState;\n}), on(initializeDataComponentModels, (state, { payload }) => {\n    const newState = Object.assign(Object.assign({}, state), { viewComponentDesignModels: Object.assign({}, state.viewComponentDesignModels) });\n    payload.forEach((item) => {\n        const parentComponentModel = newState.viewComponentDesignModels[item.componentModel.parentGuid];\n        if (parentComponentModel) {\n            // add new component model\n            newState.viewComponentDesignModels[item.componentModel.guid] = item.componentModel;\n            // update parent to contain child reference\n            const newParentComponentModel = Object.assign(Object.assign({}, parentComponentModel), { childDataComponentGuids: [...(parentComponentModel.childDataComponentGuids || []), item.componentModel.guid] });\n            newState.viewComponentDesignModels[newParentComponentModel.guid] =\n                newParentComponentModel;\n        }\n    });\n    return newState;\n}), on(moveComponent, (state, payload) => {\n    const newState = Object.assign({}, state);\n    // remove component from old parent layout\n    if (isComponentContainsChild(payload.guid, state.viewDesignModel)) {\n        newState.viewDesignModel = removeChildComponent(payload.guid, newState.viewDesignModel);\n    }\n    else {\n        let oldParentComponentModel = findParentComponentModel(payload.guid, newState.viewComponentDesignModels);\n        oldParentComponentModel = removeChildComponent(payload.guid, oldParentComponentModel);\n        newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), { [oldParentComponentModel.guid]: oldParentComponentModel });\n    }\n    // add component to new parent layout\n    if (payload.parentGuid === newState.viewDesignModel.guid) {\n        newState.viewDesignModel = addChildComponent(newState.viewDesignModel, payload.guid, payload.outletName, payload.insertIndex, payload.columnIndex);\n    }\n    else {\n        let newParentComponentModel = newState.viewComponentDesignModels[payload.parentGuid];\n        newParentComponentModel = addChildComponent(newParentComponentModel, payload.guid, payload.outletName, payload.insertIndex, payload.columnIndex);\n        newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), { [newParentComponentModel.guid]: newParentComponentModel });\n    }\n    // updating parentGuid for moved component\n    newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), { [payload.guid]: Object.assign(Object.assign({}, newState.viewComponentDesignModels[payload.guid]), { parentGuid: payload.parentGuid }) });\n    return newState;\n}), on(componentsRemoved, (state, { guids }) => {\n    const newState = Object.assign(Object.assign({}, state), { viewComponentDesignModels: omit(state.viewComponentDesignModels, guids) });\n    guids.forEach((guid) => {\n        if (isComponentContainsChild(guid, state.viewDesignModel)) {\n            newState.viewDesignModel = removeChildComponent(guid, newState.viewDesignModel);\n        }\n        else {\n            let oldParentComponentModel = findParentComponentModel(guid, state.viewComponentDesignModels);\n            if (oldParentComponentModel && newState.viewComponentDesignModels[oldParentComponentModel.guid]) {\n                oldParentComponentModel = removeChildComponent(guid, newState.viewComponentDesignModels[oldParentComponentModel.guid]);\n                newState.viewComponentDesignModels = Object.assign(Object.assign({}, newState.viewComponentDesignModels), { [oldParentComponentModel.guid]: oldParentComponentModel });\n            }\n        }\n    });\n    return newState;\n}), on(setComponentLayout, (state, { guid, cols }) => {\n    const componentModel = state.viewComponentDesignModels[guid];\n    const defaultOutlet = componentModel.layout.outlets.find((item) => item.name === RX_VIEW_DEFINITION.defaultOutletName);\n    const existingColumns = cloneDeep(defaultOutlet.columns);\n    const removedColumns = existingColumns.splice(cols.length);\n    cols.forEach((colSpan, i) => {\n        if (existingColumns[i]) {\n            existingColumns[i].span = colSpan;\n        }\n        else {\n            existingColumns[i] = {\n                span: colSpan,\n                children: []\n            };\n        }\n    });\n    const removedColumnChildComponents = removedColumns.reduce((guids, col) => {\n        guids.push(...col.children);\n        return guids;\n    }, []);\n    if (removedColumnChildComponents.length) {\n        const lastExistingCol = last(existingColumns);\n        lastExistingCol.children = lastExistingCol.children.concat(removedColumnChildComponents);\n    }\n    return Object.assign(Object.assign({}, state), { viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), { [guid]: Object.assign(Object.assign({}, componentModel), { layout: Object.assign(Object.assign({}, componentModel.layout), { outlets: componentModel.layout.outlets.map((outlet) => (Object.assign(Object.assign({}, outlet), { columns: existingColumns }))) }) }) }) });\n}), on(setViewModel, (state, { payload }) => {\n    return Object.assign(Object.assign({}, state), { viewDesignModel: payload });\n}), on(updateViewModel, (state, { payload }) => {\n    return Object.assign(Object.assign({}, state), { viewDesignModel: Object.assign(Object.assign({}, state.viewDesignModel), payload) });\n}), on(viewDefinitionSaveSuccess, (state) => {\n    if (state.viewDesignModel.isAngularJsView) {\n        return Object.assign(Object.assign({}, state), { viewDesignModel: Object.assign(Object.assign({}, state.viewDesignModel), { isAngularJsView: false }) });\n    }\n    else {\n        return state;\n    }\n}), on(setComponentData, (state, { payload }) => {\n    return Object.assign(Object.assign({}, state), { viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), payload.reduce((res, { guid, data }) => {\n            res[guid] = Object.assign(Object.assign({}, state.viewComponentDesignModels[guid]), { propertiesByName: data });\n            return res;\n        }, {})) });\n}), on(updateComponentModel, (state, { payload }) => {\n    return Object.assign(Object.assign({}, state), { viewComponentDesignModels: Object.assign(Object.assign({}, state.viewComponentDesignModels), payload\n            .filter((payload) => state.viewComponentDesignModels[payload.guid])\n            .reduce((res, { guid, partialModel }) => {\n            res[guid] = Object.assign(Object.assign(Object.assign({}, state.viewComponentDesignModels[guid]), partialModel), { propertiesByName: Object.assign(Object.assign({}, state.viewComponentDesignModels[guid].propertiesByName), partialModel.propertiesByName) });\n            return res;\n        }, {})) });\n}));\nfunction viewDesignerModelReducer(state, action) {\n    return reducer$2(state, action);\n}\n\nfunction getInitialState$1() {\n    return {\n        selectedComponentGuid: null,\n        selectedInspectorTabId: 0,\n        currentBundleId: null,\n        isViewDefinitionLoading: false,\n        areViewModelsReady: false,\n        friendlyBundleName: null\n    };\n}\nconst reducer$1 = createReducer(getInitialState$1(), on(initViewDesigner, (_, { payload }) => {\n    return Object.assign(Object.assign({}, getInitialState$1()), { currentBundleId: payload.bundleId });\n}), on(destroyViewDesigner, getInitialState$1), on(selectComponent, (state, { guid }) => {\n    return Object.assign(Object.assign({}, state), { selectedComponentGuid: guid });\n}), on(selectInspectorTab, (state, { tabId }) => {\n    return Object.assign(Object.assign({}, state), { selectedInspectorTabId: tabId });\n}), on(componentsRemoved, (state, { guids }) => {\n    if (guids.includes(state.selectedComponentGuid)) {\n        return Object.assign(Object.assign({}, state), { selectedComponentGuid: null });\n    }\n    else {\n        return Object.assign({}, state);\n    }\n}), on(friendlyBundleNameLoadSuccess, (state, { friendlyBundleName }) => {\n    return Object.assign(Object.assign({}, state), { friendlyBundleName: friendlyBundleName });\n}), on(friendlyBundleNameLoadError, (state) => {\n    return Object.assign(Object.assign({}, state), { friendlyBundleName: null });\n}), on(saveViewDefinition, loadViewDefinition, (state) => {\n    return Object.assign(Object.assign({}, state), { isViewDefinitionLoading: true, areViewModelsReady: false });\n}), on(viewDefinitionSaveSuccess, viewDefinitionLoadSuccess, viewDefinitionLoadError, (state) => {\n    return Object.assign(Object.assign({}, state), { isViewDefinitionLoading: false });\n}), on(viewDefinitionSaveError, (state) => {\n    return Object.assign(Object.assign({}, state), { isViewDefinitionLoading: false, areViewModelsReady: true });\n}), on(viewModelsUpdatedAfterSave, viewModelsInitialized, (state) => {\n    return Object.assign(Object.assign({}, state), { areViewModelsReady: true });\n}), on(initializeComponentModels, (state) => {\n    return Object.assign(Object.assign({}, state), { areViewModelsReady: false });\n}));\nfunction viewDesignerUiReducer(state, action) {\n    return reducer$1(state, action);\n}\n\nfunction getInitialState() {\n    return {\n        issues: {},\n        expressionIssues: {}\n    };\n}\nconst reducer = createReducer(getInitialState(), on(initViewDesigner, destroyViewDesigner, getInitialState), on(setValidationIssues, (state, { guid, issues }) => {\n    if (issues.length) {\n        return Object.assign(Object.assign({}, state), { issues: Object.assign(Object.assign({}, state.issues), { [guid]: issues }) });\n    }\n    else {\n        let newState = state;\n        if (has(newState.issues, guid)) {\n            newState = Object.assign(Object.assign({}, state), { issues: omit(state.issues, [guid]) });\n        }\n        return newState;\n    }\n}), on(setExpressionValidationIssues, (state, { issues }) => {\n    return isEmpty(issues)\n        ? state\n        : Object.assign(Object.assign({}, state), { expressionIssues: Object.assign(Object.assign({}, omit(state.expressionIssues, Object.keys(issues))), omitBy(issues, isEmpty)) });\n}), on(componentsRemoved, (state, { guids }) => {\n    let newState = state;\n    if (guids.some((guid) => has(state.issues, guid))) {\n        newState = Object.assign(Object.assign({}, state), { issues: omit(state.issues, guids) });\n    }\n    if (guids.some((guid) => has(state.expressionIssues, guid))) {\n        newState = Object.assign(Object.assign({}, state), { expressionIssues: omit(state.expressionIssues, guids) });\n    }\n    return newState;\n}));\nfunction viewDesignerValidationReducer(state, action) {\n    return reducer(state, action);\n}\n\nclass ViewDesignerModule {\n}\nViewDesignerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewDesignerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerModule, declarations: [RxViewDesignerComponent], imports: [CommonModule,\n        AdaptCodeViewerModule, i3$3.AdaptTabsModule, RxBladeModule,\n        RxFormBuilderModule,\n        RxValidationIssuesModule,\n        RxJsonViewerModule,\n        RxViewDesignerPaletteModule,\n        ViewDesignerCanvasModule,\n        DesignerModule,\n        FormControlsModule,\n        RxPermissionEditorModule,\n        RxRevertCustomizationModule,\n        ViewActionDesignModule,\n        RuntimeViewParamsModalModule,\n        RxDesignerHeaderModule,\n        AdaptAlertModule,\n        RxInspectorModule,\n        RxViewCustomizationOptionsModule,\n        RxViewRevertCustomizationModule,\n        TranslateModule, i2.StoreFeatureModule, i1.EffectsFeatureModule], exports: [RxViewDesignerComponent] });\nViewDesignerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerModule, imports: [[\n            CommonModule,\n            AdaptCodeViewerModule,\n            AdaptTabsModule.forRoot(),\n            RxBladeModule,\n            RxFormBuilderModule,\n            RxValidationIssuesModule,\n            RxJsonViewerModule,\n            RxViewDesignerPaletteModule,\n            ViewDesignerCanvasModule,\n            DesignerModule,\n            FormControlsModule,\n            RxPermissionEditorModule,\n            RxRevertCustomizationModule,\n            ViewActionDesignModule,\n            RuntimeViewParamsModalModule,\n            RxDesignerHeaderModule,\n            AdaptAlertModule,\n            RxInspectorModule,\n            RxViewCustomizationOptionsModule,\n            RxViewRevertCustomizationModule,\n            TranslateModule,\n            StoreModule.forFeature('viewDesigner', {\n                model: viewDesignerModelReducer,\n                viewDefinition: viewDefinitionReducer,\n                validation: viewDesignerValidationReducer,\n                ui: viewDesignerUiReducer,\n                breadcrumbs: viewDesignerBreadcrumbsReducer\n            }),\n            EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewDesignerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        AdaptCodeViewerModule,\n                        AdaptTabsModule.forRoot(),\n                        RxBladeModule,\n                        RxFormBuilderModule,\n                        RxValidationIssuesModule,\n                        RxJsonViewerModule,\n                        RxViewDesignerPaletteModule,\n                        ViewDesignerCanvasModule,\n                        DesignerModule,\n                        FormControlsModule,\n                        RxPermissionEditorModule,\n                        RxRevertCustomizationModule,\n                        ViewActionDesignModule,\n                        RuntimeViewParamsModalModule,\n                        RxDesignerHeaderModule,\n                        AdaptAlertModule,\n                        RxInspectorModule,\n                        RxViewCustomizationOptionsModule,\n                        RxViewRevertCustomizationModule,\n                        TranslateModule,\n                        StoreModule.forFeature('viewDesigner', {\n                            model: viewDesignerModelReducer,\n                            viewDefinition: viewDefinitionReducer,\n                            validation: viewDesignerValidationReducer,\n                            ui: viewDesignerUiReducer,\n                            breadcrumbs: viewDesignerBreadcrumbsReducer\n                        }),\n                        EffectsModule.forFeature([ViewDesignerEffects, ViewDesignerComponentEffects])\n                    ],\n                    declarations: [RxViewDesignerComponent],\n                    exports: [RxViewDesignerComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionListControlComponent, ActionListControlModule, ActionListEditorDialogComponent, ActionListEditorDialogModule, ActionListWidgetComponent, ActionListWidgetModule, CanvasItemApi, CanvasItemColumnComponent, CanvasItemComponent, CanvasItemContainerComponent, CanvasOutletComponent, CanvasOutletHelperService, DesignerComponent, DesignerModule, DropComponentData, NamedListFilterExpressionConfigurator, RX_AVAILABLE_ON_DEVICES_OPTIONS, RX_VIEW_DESIGNER, RX_VIEW_MODEL, RuntimeViewParamsModalComponent, RuntimeViewParamsModalModule, RxComponentPermissionEditorWidgetComponent, RxComponentPermissionEditorWidgetModule, RxViewActionExpressionConfigurator, RxViewActionValidatorService, RxViewComponentExpressionConfigurator, RxViewCustomizationOptionsComponent, RxViewCustomizationOptionsModule, RxViewDataDictionaryService, RxViewDesignerActionModel, RxViewDesignerComponent, RxViewDesignerDefaultActionModel, RxViewDesignerHelperService, RxViewDesignerPaletteModule, RxViewExpressionConfigurator, RxViewExpressionValidatorService, RxViewModel, RxViewRevertCustomizationComponent, RxViewRevertCustomizationModule, ViewDesignerCanvasComponent, ViewDesignerCanvasItemApiToken, ViewDesignerCanvasModule, ViewDesignerComponentModel, ViewDesignerFacade, ViewDesignerModule, ViewDesignerPaletteComponent, getAvailableOnDevicesInspectorConfig, getDisabledFieldInspectorConfig, getHiddenFieldInspectorConfig, getStandardPropsInspectorConfigs, getStylesFieldInspectorConfig, validateAvailableOnDevicesProp, validateCssClassName, validateCssClassNames, validateStandardProps };\n//# sourceMappingURL=helix-platform-view-designer.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}