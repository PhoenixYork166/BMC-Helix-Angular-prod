{"ast":null,"code":"import * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { ViewActionsModule } from '@helix/platform/view/actions';\nimport { ViewComponentsModule } from '@helix/platform/view/components';\nimport * as i4 from '@helix/platform/view/runtime';\nimport { RX_RUNTIME_VIEW, RuntimeViewModule } from '@helix/platform/view/runtime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2 from '@helix/platform/shared/api';\nimport { combineLatest } from 'rxjs';\nimport { take, pluck, distinctUntilChanged } from 'rxjs/operators';\nimport { isEqual, every } from 'lodash';\nimport * as i5 from '@helix/platform/utils';\nimport * as i3 from '@helix/platform/ui-kit';\nimport * as i6 from '@helix/platform/shared/components';\nimport { ApprovalConsoleModule } from '@helix/platform/approval/components';\nimport { DataloadModule } from '@helix/platform/dataload/components';\nfunction ViewRuntimePageComponent_rx_runtime_view_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"rx-runtime-view\", 1);\n    i0.ɵɵlistener(\"cancelView\", function ViewRuntimePageComponent_rx_runtime_view_0_Template_rx_runtime_view_cancelView_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onCancelView();\n    })(\"closeView\", function ViewRuntimePageComponent_rx_runtime_view_0_Template_rx_runtime_view_closeView_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onCloseView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"configuration\", ctx_r0.configuration);\n  }\n}\nclass ViewRuntimePageComponent {\n  constructor(route, rxDefinitionNameService, rxPageTitleService, rxPreviousStateService, rxComponentCanDeactivateGuard, rxUtilityModalsService, rxRuntimeViewRegistryService, rxIframeUtilsService, rxGainsightConfiguratorService, rxFeatureService) {\n    this.route = route;\n    this.rxDefinitionNameService = rxDefinitionNameService;\n    this.rxPageTitleService = rxPageTitleService;\n    this.rxPreviousStateService = rxPreviousStateService;\n    this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n    this.rxUtilityModalsService = rxUtilityModalsService;\n    this.rxRuntimeViewRegistryService = rxRuntimeViewRegistryService;\n    this.rxIframeUtilsService = rxIframeUtilsService;\n    this.rxGainsightConfiguratorService = rxGainsightConfiguratorService;\n    this.rxFeatureService = rxFeatureService;\n    this.showRuntimeView = true;\n    this.currentRoute = {\n      bundleId: '',\n      viewDefinitionName: '',\n      inputParams: null\n    };\n  }\n  ngOnInit() {\n    this.rxComponentCanDeactivateGuard.setPageComponent(this);\n    if (this.rxIframeUtilsService.isRunningInIframe() && this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n      this.rxGainsightConfiguratorService.gainsightInitConfiguration$.pipe(take(1)).subscribe();\n    }\n    this.subscription = combineLatest([this.route.params.pipe(pluck('bundleId')), this.route.params.pipe(pluck('viewDefinitionName')), this.route.queryParams]).pipe(distinctUntilChanged(isEqual)).subscribe(([bundleId, viewDefinitionName, inputParams]) => {\n      // LMA:: Handling the case where we are on the same route but the input parameters are not the same.\n      // In this case we have to force the view reload.\n      // https://stackoverflow.com/questions/38971660/angular-2-reload-route-on-param-change\n      if (this.currentRoute.bundleId === bundleId && this.currentRoute.viewDefinitionName === viewDefinitionName && !isEqual(this.currentRoute.inputParams, inputParams)) {\n        this.showRuntimeView = false;\n        setTimeout(() => this.showRuntimeView = true);\n      }\n      this.currentRoute.bundleId = bundleId;\n      this.currentRoute.viewDefinitionName = viewDefinitionName;\n      this.currentRoute.inputParams = inputParams;\n      this.updateConfig({\n        viewDefinitionName,\n        inputParams\n      });\n      this.rxPageTitleService.set(this.rxDefinitionNameService.getDisplayName(viewDefinitionName));\n      this.rxGainsightConfiguratorService.updateGlobalContext(null, viewDefinitionName);\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.rxComponentCanDeactivateGuard.setPageComponent(null);\n  }\n  canDeactivate() {\n    return every(this.rxRuntimeViewRegistryService.getAll(), runtimeView => runtimeView.canClose());\n  }\n  confirmDeactivation() {\n    return this.rxUtilityModalsService.confirmUnsavedChanges();\n  }\n  onCancelView() {\n    this.rxComponentCanDeactivateGuard.disable();\n    this.onCloseOrCancel({\n      actionName: RX_RUNTIME_VIEW.actions.cancel\n    });\n  }\n  onCloseView(outputParams) {\n    this.onCloseOrCancel({\n      actionName: RX_RUNTIME_VIEW.actions.close,\n      outputParams\n    });\n  }\n  onCloseOrCancel(payload) {\n    if (this.rxIframeUtilsService.isRunningInIframe()) {\n      this.rxIframeUtilsService.postMessageToHost(payload);\n    } else {\n      this.rxPreviousStateService.goToPrevState();\n    }\n  }\n  onRegisterApi(api) {\n    this.runtimeViewApi = api;\n  }\n  updateConfig(cfg) {\n    this.configuration = Object.assign(Object.assign(Object.assign({}, this.configuration), cfg), {\n      onRegisterApi: this.onRegisterApi.bind(this)\n    });\n  }\n}\nViewRuntimePageComponent.ɵfac = function ViewRuntimePageComponent_Factory(t) {\n  return new (t || ViewRuntimePageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RxDefinitionNameService), i0.ɵɵdirectiveInject(i2.RxPageTitleService), i0.ɵɵdirectiveInject(i2.RxPreviousStateService), i0.ɵɵdirectiveInject(i2.RxComponentCanDeactivateGuard), i0.ɵɵdirectiveInject(i3.RxUtilityModalsService), i0.ɵɵdirectiveInject(i4.RxRuntimeViewRegistryService), i0.ɵɵdirectiveInject(i5.RxIframeUtilsService), i0.ɵɵdirectiveInject(i6.RxGainsightConfiguratorService), i0.ɵɵdirectiveInject(i2.RxFeatureService));\n};\nViewRuntimePageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ViewRuntimePageComponent,\n  selectors: [[\"rx-view-runtime-page\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"configuration\", \"cancelView\", \"closeView\", 4, \"ngIf\"], [3, \"configuration\", \"cancelView\", \"closeView\"]],\n  template: function ViewRuntimePageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ViewRuntimePageComponent_rx_runtime_view_0_Template, 1, 1, \"rx-runtime-view\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showRuntimeView);\n    }\n  },\n  directives: [i7.NgIf, i4.RuntimeViewComponent],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewRuntimePageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rx-view-runtime-page',\n      templateUrl: './view-runtime-page.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1.ActivatedRoute\n    }, {\n      type: i2.RxDefinitionNameService\n    }, {\n      type: i2.RxPageTitleService\n    }, {\n      type: i2.RxPreviousStateService\n    }, {\n      type: i2.RxComponentCanDeactivateGuard\n    }, {\n      type: i3.RxUtilityModalsService\n    }, {\n      type: i4.RxRuntimeViewRegistryService\n    }, {\n      type: i5.RxIframeUtilsService\n    }, {\n      type: i6.RxGainsightConfiguratorService\n    }, {\n      type: i2.RxFeatureService\n    }];\n  }, null);\n})();\nconst routes = [{\n  path: '',\n  component: ViewRuntimePageComponent,\n  pathMatch: 'full'\n}];\nclass ViewRuntimePageRoutingModule {}\nViewRuntimePageRoutingModule.ɵfac = function ViewRuntimePageRoutingModule_Factory(t) {\n  return new (t || ViewRuntimePageRoutingModule)();\n};\nViewRuntimePageRoutingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ViewRuntimePageRoutingModule,\n  imports: [i1.RouterModule],\n  exports: [RouterModule]\n});\nViewRuntimePageRoutingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[RouterModule.forChild(routes)], RouterModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewRuntimePageRoutingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule.forChild(routes)],\n      exports: [RouterModule]\n    }]\n  }], null, null);\n})();\nclass ViewRuntimePageModule {}\nViewRuntimePageModule.ɵfac = function ViewRuntimePageModule_Factory(t) {\n  return new (t || ViewRuntimePageModule)();\n};\nViewRuntimePageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ViewRuntimePageModule,\n  declarations: [ViewRuntimePageComponent],\n  imports: [CommonModule, TranslateModule, ViewRuntimePageRoutingModule, RuntimeViewModule, ViewComponentsModule, ViewActionsModule, ApprovalConsoleModule, DataloadModule]\n});\nViewRuntimePageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, TranslateModule, ViewRuntimePageRoutingModule, RuntimeViewModule, ViewComponentsModule, ViewActionsModule, ApprovalConsoleModule, DataloadModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewRuntimePageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ViewRuntimePageComponent],\n      imports: [CommonModule, TranslateModule, ViewRuntimePageRoutingModule, RuntimeViewModule, ViewComponentsModule, ViewActionsModule, ApprovalConsoleModule, DataloadModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ViewRuntimePageComponent, ViewRuntimePageModule };\n//# sourceMappingURL=helix-platform-view-runtime-page.js.map","map":{"version":3,"names":["i7","CommonModule","i0","Component","NgModule","ViewActionsModule","ViewComponentsModule","i4","RX_RUNTIME_VIEW","RuntimeViewModule","TranslateModule","i1","RouterModule","i2","combineLatest","take","pluck","distinctUntilChanged","isEqual","every","i5","i3","i6","ApprovalConsoleModule","DataloadModule","ViewRuntimePageComponent_rx_runtime_view_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ViewRuntimePageComponent_rx_runtime_view_0_Template_rx_runtime_view_cancelView_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","onCancelView","ViewRuntimePageComponent_rx_runtime_view_0_Template_rx_runtime_view_closeView_0_listener","$event","ctx_r3","onCloseView","ɵɵelementEnd","ctx_r0","ɵɵproperty","configuration","ViewRuntimePageComponent","constructor","route","rxDefinitionNameService","rxPageTitleService","rxPreviousStateService","rxComponentCanDeactivateGuard","rxUtilityModalsService","rxRuntimeViewRegistryService","rxIframeUtilsService","rxGainsightConfiguratorService","rxFeatureService","showRuntimeView","currentRoute","bundleId","viewDefinitionName","inputParams","ngOnInit","setPageComponent","isRunningInIframe","isFeatureEnabled","gainsightInitConfiguration$","pipe","subscribe","subscription","params","queryParams","setTimeout","updateConfig","set","getDisplayName","updateGlobalContext","ngOnDestroy","unsubscribe","canDeactivate","getAll","runtimeView","canClose","confirmDeactivation","confirmUnsavedChanges","disable","onCloseOrCancel","actionName","actions","cancel","outputParams","close","payload","postMessageToHost","goToPrevState","onRegisterApi","api","runtimeViewApi","cfg","Object","assign","bind","ɵfac","ViewRuntimePageComponent_Factory","t","ɵɵdirectiveInject","ActivatedRoute","RxDefinitionNameService","RxPageTitleService","RxPreviousStateService","RxComponentCanDeactivateGuard","RxUtilityModalsService","RxRuntimeViewRegistryService","RxIframeUtilsService","RxGainsightConfiguratorService","RxFeatureService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ViewRuntimePageComponent_Template","ɵɵtemplate","directives","NgIf","RuntimeViewComponent","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","templateUrl","routes","path","component","pathMatch","ViewRuntimePageRoutingModule","ViewRuntimePageRoutingModule_Factory","ɵmod","ɵɵdefineNgModule","imports","exports","ɵinj","ɵɵdefineInjector","forChild","ViewRuntimePageModule","ViewRuntimePageModule_Factory","declarations"],"sources":["C:/projects/BMC-Helix-Angular-prod/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-view-runtime-page.js"],"sourcesContent":["import * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, NgModule } from '@angular/core';\nimport { ViewActionsModule } from '@helix/platform/view/actions';\nimport { ViewComponentsModule } from '@helix/platform/view/components';\nimport * as i4 from '@helix/platform/view/runtime';\nimport { RX_RUNTIME_VIEW, RuntimeViewModule } from '@helix/platform/view/runtime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport * as i1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2 from '@helix/platform/shared/api';\nimport { combineLatest } from 'rxjs';\nimport { take, pluck, distinctUntilChanged } from 'rxjs/operators';\nimport { isEqual, every } from 'lodash';\nimport * as i5 from '@helix/platform/utils';\nimport * as i3 from '@helix/platform/ui-kit';\nimport * as i6 from '@helix/platform/shared/components';\nimport { ApprovalConsoleModule } from '@helix/platform/approval/components';\nimport { DataloadModule } from '@helix/platform/dataload/components';\n\nclass ViewRuntimePageComponent {\n    constructor(route, rxDefinitionNameService, rxPageTitleService, rxPreviousStateService, rxComponentCanDeactivateGuard, rxUtilityModalsService, rxRuntimeViewRegistryService, rxIframeUtilsService, rxGainsightConfiguratorService, rxFeatureService) {\n        this.route = route;\n        this.rxDefinitionNameService = rxDefinitionNameService;\n        this.rxPageTitleService = rxPageTitleService;\n        this.rxPreviousStateService = rxPreviousStateService;\n        this.rxComponentCanDeactivateGuard = rxComponentCanDeactivateGuard;\n        this.rxUtilityModalsService = rxUtilityModalsService;\n        this.rxRuntimeViewRegistryService = rxRuntimeViewRegistryService;\n        this.rxIframeUtilsService = rxIframeUtilsService;\n        this.rxGainsightConfiguratorService = rxGainsightConfiguratorService;\n        this.rxFeatureService = rxFeatureService;\n        this.showRuntimeView = true;\n        this.currentRoute = {\n            bundleId: '',\n            viewDefinitionName: '',\n            inputParams: null\n        };\n    }\n    ngOnInit() {\n        this.rxComponentCanDeactivateGuard.setPageComponent(this);\n        if (this.rxIframeUtilsService.isRunningInIframe() && this.rxFeatureService.isFeatureEnabled('DRD21-11744')) {\n            this.rxGainsightConfiguratorService.gainsightInitConfiguration$\n                .pipe(take(1))\n                .subscribe();\n        }\n        this.subscription = combineLatest([\n            this.route.params.pipe(pluck('bundleId')),\n            this.route.params.pipe(pluck('viewDefinitionName')),\n            this.route.queryParams\n        ])\n            .pipe(distinctUntilChanged(isEqual))\n            .subscribe(([bundleId, viewDefinitionName, inputParams]) => {\n            // LMA:: Handling the case where we are on the same route but the input parameters are not the same.\n            // In this case we have to force the view reload.\n            // https://stackoverflow.com/questions/38971660/angular-2-reload-route-on-param-change\n            if (this.currentRoute.bundleId === bundleId &&\n                this.currentRoute.viewDefinitionName === viewDefinitionName &&\n                !isEqual(this.currentRoute.inputParams, inputParams)) {\n                this.showRuntimeView = false;\n                setTimeout(() => (this.showRuntimeView = true));\n            }\n            this.currentRoute.bundleId = bundleId;\n            this.currentRoute.viewDefinitionName = viewDefinitionName;\n            this.currentRoute.inputParams = inputParams;\n            this.updateConfig({ viewDefinitionName, inputParams });\n            this.rxPageTitleService.set(this.rxDefinitionNameService.getDisplayName(viewDefinitionName));\n            this.rxGainsightConfiguratorService.updateGlobalContext(null, viewDefinitionName);\n        });\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n        this.rxComponentCanDeactivateGuard.setPageComponent(null);\n    }\n    canDeactivate() {\n        return every(this.rxRuntimeViewRegistryService.getAll(), (runtimeView) => runtimeView.canClose());\n    }\n    confirmDeactivation() {\n        return this.rxUtilityModalsService.confirmUnsavedChanges();\n    }\n    onCancelView() {\n        this.rxComponentCanDeactivateGuard.disable();\n        this.onCloseOrCancel({ actionName: RX_RUNTIME_VIEW.actions.cancel });\n    }\n    onCloseView(outputParams) {\n        this.onCloseOrCancel({ actionName: RX_RUNTIME_VIEW.actions.close, outputParams });\n    }\n    onCloseOrCancel(payload) {\n        if (this.rxIframeUtilsService.isRunningInIframe()) {\n            this.rxIframeUtilsService.postMessageToHost(payload);\n        }\n        else {\n            this.rxPreviousStateService.goToPrevState();\n        }\n    }\n    onRegisterApi(api) {\n        this.runtimeViewApi = api;\n    }\n    updateConfig(cfg) {\n        this.configuration = Object.assign(Object.assign(Object.assign({}, this.configuration), cfg), { onRegisterApi: this.onRegisterApi.bind(this) });\n    }\n}\nViewRuntimePageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.RxDefinitionNameService }, { token: i2.RxPageTitleService }, { token: i2.RxPreviousStateService }, { token: i2.RxComponentCanDeactivateGuard }, { token: i3.RxUtilityModalsService }, { token: i4.RxRuntimeViewRegistryService }, { token: i5.RxIframeUtilsService }, { token: i6.RxGainsightConfiguratorService }, { token: i2.RxFeatureService }], target: i0.ɵɵFactoryTarget.Component });\nViewRuntimePageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.3\", type: ViewRuntimePageComponent, selector: \"rx-view-runtime-page\", ngImport: i0, template: \"<rx-runtime-view\\n  [configuration]=\\\"configuration\\\"\\n  (cancelView)=\\\"onCancelView()\\\"\\n  (closeView)=\\\"onCloseView($event)\\\"\\n  *ngIf=\\\"showRuntimeView\\\"\\n></rx-runtime-view>\\n\", components: [{ type: i4.RuntimeViewComponent, selector: \"rx-runtime-view\", inputs: [\"configuration\"], outputs: [\"save\", \"closeView\", \"cancelView\", \"beforeLoad\", \"afterLoad\"] }], directives: [{ type: i7.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'rx-view-runtime-page',\n                    templateUrl: './view-runtime-page.component.html'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.RxDefinitionNameService }, { type: i2.RxPageTitleService }, { type: i2.RxPreviousStateService }, { type: i2.RxComponentCanDeactivateGuard }, { type: i3.RxUtilityModalsService }, { type: i4.RxRuntimeViewRegistryService }, { type: i5.RxIframeUtilsService }, { type: i6.RxGainsightConfiguratorService }, { type: i2.RxFeatureService }]; } });\n\nconst routes = [\n    {\n        path: '',\n        component: ViewRuntimePageComponent,\n        pathMatch: 'full'\n    }\n];\nclass ViewRuntimePageRoutingModule {\n}\nViewRuntimePageRoutingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageRoutingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewRuntimePageRoutingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageRoutingModule, imports: [i1.RouterModule], exports: [RouterModule] });\nViewRuntimePageRoutingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageRoutingModule, imports: [[RouterModule.forChild(routes)], RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageRoutingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [RouterModule.forChild(routes)],\n                    exports: [RouterModule]\n                }]\n        }] });\n\nclass ViewRuntimePageModule {\n}\nViewRuntimePageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewRuntimePageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageModule, declarations: [ViewRuntimePageComponent], imports: [CommonModule,\n        TranslateModule,\n        ViewRuntimePageRoutingModule,\n        RuntimeViewModule,\n        ViewComponentsModule,\n        ViewActionsModule,\n        ApprovalConsoleModule,\n        DataloadModule] });\nViewRuntimePageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageModule, imports: [[\n            CommonModule,\n            TranslateModule,\n            ViewRuntimePageRoutingModule,\n            RuntimeViewModule,\n            ViewComponentsModule,\n            ViewActionsModule,\n            ApprovalConsoleModule,\n            DataloadModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ViewRuntimePageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ViewRuntimePageComponent],\n                    imports: [\n                        CommonModule,\n                        TranslateModule,\n                        ViewRuntimePageRoutingModule,\n                        RuntimeViewModule,\n                        ViewComponentsModule,\n                        ViewActionsModule,\n                        ApprovalConsoleModule,\n                        DataloadModule\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ViewRuntimePageComponent, ViewRuntimePageModule };\n//# sourceMappingURL=helix-platform-view-runtime-page.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}