{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i2 from '@helix/platform/shared/api';\nimport { DataPage, RX_BUNDLE } from '@helix/platform/shared/api';\nimport * as i1 from '@angular/common/http';\nimport { of } from 'rxjs';\nclass RxDocumentDefinitionDataPageService extends DataPage {\n  constructor(injector) {\n    super(injector, 'com.bmc.arsys.rx.application.document.datapage.DocumentDefinitionDataPageQuery');\n    this.injector = injector;\n  }\n}\nRxDocumentDefinitionDataPageService.ɵfac = function RxDocumentDefinitionDataPageService_Factory(t) {\n  return new (t || RxDocumentDefinitionDataPageService)(i0.ɵɵinject(i0.Injector));\n};\nRxDocumentDefinitionDataPageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxDocumentDefinitionDataPageService,\n  factory: RxDocumentDefinitionDataPageService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxDocumentDefinitionDataPageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass RxDocumentDefinitionService {\n  constructor(httpClient, rxCommandFactoryService) {\n    this.httpClient = httpClient;\n    this.rxCommandFactoryService = rxCommandFactoryService;\n  }\n  get(documentDefinitionName, options) {\n    return this.httpClient.get(this.getUrl(documentDefinitionName), options);\n  }\n  getNew() {\n    return of({\n      allowOverlay: false,\n      documentSchema: null,\n      name: null,\n      scope: RX_BUNDLE.definitionScopeTypes.bundle\n    });\n  }\n  create(documentDefinition) {\n    return this.httpClient.post(this.getUrl(), documentDefinition, {\n      observe: 'response'\n    });\n  }\n  update(documentDefinition, options) {\n    return this.httpClient.put(this.getUrl(documentDefinition.name), documentDefinition, options);\n  }\n  delete(documentDefinitionName) {\n    return this.httpClient.delete(this.getUrl(documentDefinitionName));\n  }\n  revertCustomization(documentDefinitionName) {\n    const revertCustomizationCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.document.command.RevertDocumentDefinitionCommand');\n    return revertCustomizationCommand.execute({\n      documentDefinitionName\n    });\n  }\n  rename(oldDocumentDefinitionName, newDocumentDefinitionName) {\n    const renameCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.document.command.RenameDocumentDefinitionCommand');\n    return renameCommand.execute({\n      name: oldDocumentDefinitionName,\n      newName: newDocumentDefinitionName\n    });\n  }\n  getUrl(documentDefinitionName) {\n    return documentDefinitionName ? `/api/rx/application/document/documentdefinition/${encodeURIComponent(documentDefinitionName)}` : '/api/rx/application/document/documentdefinition';\n  }\n}\nRxDocumentDefinitionService.ɵfac = function RxDocumentDefinitionService_Factory(t) {\n  return new (t || RxDocumentDefinitionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RxCommandFactoryService));\n};\nRxDocumentDefinitionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RxDocumentDefinitionService,\n  factory: RxDocumentDefinitionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RxDocumentDefinitionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.RxCommandFactoryService\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxDocumentDefinitionDataPageService, RxDocumentDefinitionService };\n//# sourceMappingURL=helix-platform-document-api.js.map","map":{"version":3,"names":["i0","Injectable","i2","DataPage","RX_BUNDLE","i1","of","RxDocumentDefinitionDataPageService","constructor","injector","ɵfac","RxDocumentDefinitionDataPageService_Factory","t","ɵɵinject","Injector","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","RxDocumentDefinitionService","httpClient","rxCommandFactoryService","get","documentDefinitionName","options","getUrl","getNew","allowOverlay","documentSchema","name","scope","definitionScopeTypes","bundle","create","documentDefinition","post","observe","update","put","delete","revertCustomization","revertCustomizationCommand","forResourceType","execute","rename","oldDocumentDefinitionName","newDocumentDefinitionName","renameCommand","newName","encodeURIComponent","RxDocumentDefinitionService_Factory","HttpClient","RxCommandFactoryService"],"sources":["C:/projects/innovation-studio-developer/22.1/test210500/bundle/src/main/webapp/node_modules/@helix/platform/fesm2015/helix-platform-document-api.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport * as i2 from '@helix/platform/shared/api';\nimport { DataPage, RX_BUNDLE } from '@helix/platform/shared/api';\nimport * as i1 from '@angular/common/http';\nimport { of } from 'rxjs';\n\nclass RxDocumentDefinitionDataPageService extends DataPage {\n    constructor(injector) {\n        super(injector, 'com.bmc.arsys.rx.application.document.datapage.DocumentDefinitionDataPageQuery');\n        this.injector = injector;\n    }\n}\nRxDocumentDefinitionDataPageService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionDataPageService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nRxDocumentDefinitionDataPageService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionDataPageService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionDataPageService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass RxDocumentDefinitionService {\n    constructor(httpClient, rxCommandFactoryService) {\n        this.httpClient = httpClient;\n        this.rxCommandFactoryService = rxCommandFactoryService;\n    }\n    get(documentDefinitionName, options) {\n        return this.httpClient.get(this.getUrl(documentDefinitionName), options);\n    }\n    getNew() {\n        return of({\n            allowOverlay: false,\n            documentSchema: null,\n            name: null,\n            scope: RX_BUNDLE.definitionScopeTypes.bundle\n        });\n    }\n    create(documentDefinition) {\n        return this.httpClient.post(this.getUrl(), documentDefinition, { observe: 'response' });\n    }\n    update(documentDefinition, options) {\n        return this.httpClient.put(this.getUrl(documentDefinition.name), documentDefinition, options);\n    }\n    delete(documentDefinitionName) {\n        return this.httpClient.delete(this.getUrl(documentDefinitionName));\n    }\n    revertCustomization(documentDefinitionName) {\n        const revertCustomizationCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.document.command.RevertDocumentDefinitionCommand');\n        return revertCustomizationCommand.execute({ documentDefinitionName });\n    }\n    rename(oldDocumentDefinitionName, newDocumentDefinitionName) {\n        const renameCommand = this.rxCommandFactoryService.forResourceType('com.bmc.arsys.rx.application.document.command.RenameDocumentDefinitionCommand');\n        return renameCommand.execute({\n            name: oldDocumentDefinitionName,\n            newName: newDocumentDefinitionName\n        });\n    }\n    getUrl(documentDefinitionName) {\n        return documentDefinitionName\n            ? `/api/rx/application/document/documentdefinition/${encodeURIComponent(documentDefinitionName)}`\n            : '/api/rx/application/document/documentdefinition';\n    }\n}\nRxDocumentDefinitionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionService, deps: [{ token: i1.HttpClient }, { token: i2.RxCommandFactoryService }], target: i0.ɵɵFactoryTarget.Injectable });\nRxDocumentDefinitionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: RxDocumentDefinitionService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.RxCommandFactoryService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RxDocumentDefinitionDataPageService, RxDocumentDefinitionService };\n//# sourceMappingURL=helix-platform-document-api.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}